"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-kapsule";
exports.ids = ["vendor-chunks/react-kapsule"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-kapsule/dist/react-kapsule.mjs":
/*!***********************************************************!*\
  !*** ./node_modules/react-kapsule/dist/react-kapsule.mjs ***!
  \***********************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ index)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var jerrypick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jerrypick */ \"(ssr)/./node_modules/jerrypick/dist/jerrypick.mjs\");\n\n\nfunction _arrayLikeToArray(r, a) {\n    (null == a || a > r.length) && (a = r.length);\n    for(var e = 0, n = Array(a); e < a; e++)n[e] = r[e];\n    return n;\n}\nfunction _arrayWithHoles(r) {\n    if (Array.isArray(r)) return r;\n}\nfunction _arrayWithoutHoles(r) {\n    if (Array.isArray(r)) return _arrayLikeToArray(r);\n}\nfunction _iterableToArray(r) {\n    if (\"undefined\" != typeof Symbol && null != r[Symbol.iterator] || null != r[\"@@iterator\"]) return Array.from(r);\n}\nfunction _iterableToArrayLimit(r, l) {\n    var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n    if (null != t) {\n        var e, n, i, u, a = [], f = !0, o = !1;\n        try {\n            if (i = (t = t.call(r)).next, 0 === l) ;\n            else for(; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n        } catch (r) {\n            o = !0, n = r;\n        } finally{\n            try {\n                if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n            } finally{\n                if (o) throw n;\n            }\n        }\n        return a;\n    }\n}\nfunction _nonIterableRest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableSpread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _slicedToArray(r, e) {\n    return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();\n}\nfunction _toConsumableArray(r) {\n    return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();\n}\nfunction _unsupportedIterableToArray(r, a) {\n    if (r) {\n        if (\"string\" == typeof r) return _arrayLikeToArray(r, a);\n        var t = ({}).toString.call(r).slice(8, -1);\n        return \"Object\" === t && r.constructor && (t = r.constructor.name), \"Map\" === t || \"Set\" === t ? Array.from(r) : \"Arguments\" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;\n    }\n}\nfunction index(kapsuleComponent) {\n    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {}, _ref$wrapperElementTy = _ref.wrapperElementType, wrapperElementType = _ref$wrapperElementTy === void 0 ? \"div\" : _ref$wrapperElementTy, _ref$nodeMapper = _ref.nodeMapper, nodeMapper = _ref$nodeMapper === void 0 ? function(node) {\n        return node;\n    } : _ref$nodeMapper, _ref$methodNames = _ref.methodNames, methodNames = _ref$methodNames === void 0 ? [] : _ref$methodNames, _ref$initPropNames = _ref.initPropNames, initPropNames = _ref$initPropNames === void 0 ? [] : _ref$initPropNames;\n    return /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(function(props, ref) {\n        var domEl = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n        // instantiate the inner kapsule component with the defined initPropNames\n        var comp = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)(function() {\n            var configOptions = Object.fromEntries(initPropNames.filter(function(p) {\n                return props.hasOwnProperty(p);\n            }).map(function(prop) {\n                return [\n                    prop,\n                    props[prop]\n                ];\n            }));\n            return kapsuleComponent(configOptions);\n        }, []);\n        useEffectOnce(function() {\n            comp(nodeMapper(domEl.current)); // mount kapsule synchronously on this element ref, optionally mapped into an object that the kapsule understands\n        }, react__WEBPACK_IMPORTED_MODULE_0__.useLayoutEffect);\n        useEffectOnce(function() {\n            // invoke destructor on unmount, if it exists\n            return comp._destructor instanceof Function ? comp._destructor : undefined;\n        });\n        // Call a component method\n        var _call = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(function(method) {\n            for(var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++){\n                args[_key - 1] = arguments[_key];\n            }\n            return comp[method] instanceof Function ? comp[method].apply(comp, args) : undefined;\n        } // method not found\n        , [\n            comp\n        ]);\n        // propagate component props that have changed\n        var prevPropsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)({});\n        Object.keys((0,jerrypick__WEBPACK_IMPORTED_MODULE_1__.omit)(props, [].concat(_toConsumableArray(methodNames), _toConsumableArray(initPropNames)))) // initPropNames or methodNames should not be called\n        .filter(function(p) {\n            return prevPropsRef.current[p] !== props[p];\n        }).forEach(function(p) {\n            return _call(p, props[p]);\n        });\n        prevPropsRef.current = props;\n        // bind external methods to parent ref\n        (0,react__WEBPACK_IMPORTED_MODULE_0__.useImperativeHandle)(ref, function() {\n            return Object.fromEntries(methodNames.map(function(method) {\n                return [\n                    method,\n                    function() {\n                        for(var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++){\n                            args[_key2] = arguments[_key2];\n                        }\n                        return _call.apply(void 0, [\n                            method\n                        ].concat(args));\n                    }\n                ];\n            }));\n        }, [\n            _call\n        ]);\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(wrapperElementType, {\n            ref: domEl\n        });\n    });\n}\n//\n// Handle R18 strict mode double mount at init\nfunction useEffectOnce(effect) {\n    var useEffectFn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : react__WEBPACK_IMPORTED_MODULE_0__.useEffect;\n    var destroyFunc = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)();\n    var effectCalled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    var renderAfterCalled = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    var _useState = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0), _useState2 = _slicedToArray(_useState, 2);\n    _useState2[0];\n    var setVal = _useState2[1];\n    if (effectCalled.current) {\n        renderAfterCalled.current = true;\n    }\n    useEffectFn(function() {\n        // only execute the effect first time around\n        if (!effectCalled.current) {\n            destroyFunc.current = effect();\n            effectCalled.current = true;\n        }\n        // this forces one render after the effect is run\n        setVal(function(val) {\n            return val + 1;\n        });\n        return function() {\n            // if the comp didn't render since the useEffect was called,\n            // we know it's the dummy React cycle\n            if (!renderAfterCalled.current) return;\n            if (destroyFunc.current) destroyFunc.current();\n        };\n    }, []);\n}\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-kapsule/dist/react-kapsule.mjs\n");

/***/ })

};
;