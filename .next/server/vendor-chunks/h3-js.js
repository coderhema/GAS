"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/h3-js";
exports.ids = ["vendor-chunks/h3-js"];
exports.modules = {

/***/ "(ssr)/./node_modules/h3-js/dist/h3-js.es.js":
/*!*********************************************!*\
  !*** ./node_modules/h3-js/dist/h3-js.es.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   UNITS: () => (/* binding */ UNITS),\n/* harmony export */   areNeighborCells: () => (/* binding */ areNeighborCells),\n/* harmony export */   cellArea: () => (/* binding */ cellArea),\n/* harmony export */   cellToBoundary: () => (/* binding */ cellToBoundary),\n/* harmony export */   cellToCenterChild: () => (/* binding */ cellToCenterChild),\n/* harmony export */   cellToChildPos: () => (/* binding */ cellToChildPos),\n/* harmony export */   cellToChildren: () => (/* binding */ cellToChildren),\n/* harmony export */   cellToChildrenSize: () => (/* binding */ cellToChildrenSize),\n/* harmony export */   cellToLatLng: () => (/* binding */ cellToLatLng),\n/* harmony export */   cellToLocalIj: () => (/* binding */ cellToLocalIj),\n/* harmony export */   cellToParent: () => (/* binding */ cellToParent),\n/* harmony export */   cellToVertex: () => (/* binding */ cellToVertex),\n/* harmony export */   cellToVertexes: () => (/* binding */ cellToVertexes),\n/* harmony export */   cellsToDirectedEdge: () => (/* binding */ cellsToDirectedEdge),\n/* harmony export */   cellsToMultiPolygon: () => (/* binding */ cellsToMultiPolygon),\n/* harmony export */   childPosToCell: () => (/* binding */ childPosToCell),\n/* harmony export */   compactCells: () => (/* binding */ compactCells),\n/* harmony export */   degsToRads: () => (/* binding */ degsToRads),\n/* harmony export */   directedEdgeToBoundary: () => (/* binding */ directedEdgeToBoundary),\n/* harmony export */   directedEdgeToCells: () => (/* binding */ directedEdgeToCells),\n/* harmony export */   edgeLength: () => (/* binding */ edgeLength),\n/* harmony export */   getBaseCellNumber: () => (/* binding */ getBaseCellNumber),\n/* harmony export */   getDirectedEdgeDestination: () => (/* binding */ getDirectedEdgeDestination),\n/* harmony export */   getDirectedEdgeOrigin: () => (/* binding */ getDirectedEdgeOrigin),\n/* harmony export */   getHexagonAreaAvg: () => (/* binding */ getHexagonAreaAvg),\n/* harmony export */   getHexagonEdgeLengthAvg: () => (/* binding */ getHexagonEdgeLengthAvg),\n/* harmony export */   getIcosahedronFaces: () => (/* binding */ getIcosahedronFaces),\n/* harmony export */   getNumCells: () => (/* binding */ getNumCells),\n/* harmony export */   getPentagons: () => (/* binding */ getPentagons),\n/* harmony export */   getRes0Cells: () => (/* binding */ getRes0Cells),\n/* harmony export */   getResolution: () => (/* binding */ getResolution),\n/* harmony export */   greatCircleDistance: () => (/* binding */ greatCircleDistance),\n/* harmony export */   gridDisk: () => (/* binding */ gridDisk),\n/* harmony export */   gridDiskDistances: () => (/* binding */ gridDiskDistances),\n/* harmony export */   gridDistance: () => (/* binding */ gridDistance),\n/* harmony export */   gridPathCells: () => (/* binding */ gridPathCells),\n/* harmony export */   gridRingUnsafe: () => (/* binding */ gridRingUnsafe),\n/* harmony export */   h3IndexToSplitLong: () => (/* binding */ h3IndexToSplitLong),\n/* harmony export */   isPentagon: () => (/* binding */ isPentagon),\n/* harmony export */   isResClassIII: () => (/* binding */ isResClassIII),\n/* harmony export */   isValidCell: () => (/* binding */ isValidCell),\n/* harmony export */   isValidDirectedEdge: () => (/* binding */ isValidDirectedEdge),\n/* harmony export */   isValidVertex: () => (/* binding */ isValidVertex),\n/* harmony export */   latLngToCell: () => (/* binding */ latLngToCell),\n/* harmony export */   localIjToCell: () => (/* binding */ localIjToCell),\n/* harmony export */   originToDirectedEdges: () => (/* binding */ originToDirectedEdges),\n/* harmony export */   polygonToCells: () => (/* binding */ polygonToCells),\n/* harmony export */   radsToDegs: () => (/* binding */ radsToDegs),\n/* harmony export */   splitLongToH3Index: () => (/* binding */ splitLongToH3Index),\n/* harmony export */   uncompactCells: () => (/* binding */ uncompactCells),\n/* harmony export */   vertexToLatLng: () => (/* binding */ vertexToLatLng)\n/* harmony export */ });\n// @ts-nocheck\nvar libh3 = function(libh3) {\n    libh3 = libh3 || {};\n    var Module = typeof libh3 !== \"undefined\" ? libh3 : {};\n    var moduleOverrides = {};\n    var key;\n    for(key in Module){\n        if (Module.hasOwnProperty(key)) {\n            moduleOverrides[key] = Module[key];\n        }\n    }\n    var arguments_ = [];\n    var thisProgram = \"./this.program\";\n    var ENVIRONMENT_IS_WEB = false;\n    var ENVIRONMENT_IS_WORKER = false;\n    var ENVIRONMENT_IS_NODE = false;\n    var ENVIRONMENT_HAS_NODE = false;\n    var ENVIRONMENT_IS_SHELL = false;\n    ENVIRONMENT_IS_WEB = \"undefined\" === \"object\";\n    ENVIRONMENT_IS_WORKER = typeof importScripts === \"function\";\n    ENVIRONMENT_HAS_NODE = typeof process === \"object\" && typeof process.versions === \"object\" && typeof process.versions.node === \"string\";\n    ENVIRONMENT_IS_NODE = ENVIRONMENT_HAS_NODE && !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_WORKER;\n    ENVIRONMENT_IS_SHELL = !ENVIRONMENT_IS_WEB && !ENVIRONMENT_IS_NODE && !ENVIRONMENT_IS_WORKER;\n    var scriptDirectory = \"\";\n    function locateFile(path) {\n        if (Module[\"locateFile\"]) {\n            return Module[\"locateFile\"](path, scriptDirectory);\n        }\n        return scriptDirectory + path;\n    }\n    var read_, readAsync, readBinary;\n    if (ENVIRONMENT_IS_NODE) {\n        scriptDirectory = __dirname + \"/\";\n        var nodeFS;\n        var nodePath;\n        read_ = function shell_read(filename, binary) {\n            var ret;\n            ret = tryParseAsDataURI(filename);\n            if (!ret) {\n                if (!nodeFS) {\n                    nodeFS = __webpack_require__(/*! fs */ \"fs\");\n                }\n                if (!nodePath) {\n                    nodePath = __webpack_require__(/*! path */ \"path\");\n                }\n                filename = nodePath[\"normalize\"](filename);\n                ret = nodeFS[\"readFileSync\"](filename);\n            }\n            return binary ? ret : ret.toString();\n        };\n        readBinary = function readBinary(filename) {\n            var ret = read_(filename, true);\n            if (!ret.buffer) {\n                ret = new Uint8Array(ret);\n            }\n            assert(ret.buffer);\n            return ret;\n        };\n        if (process[\"argv\"].length > 1) {\n            thisProgram = process[\"argv\"][1].replace(/\\\\/g, \"/\");\n        }\n        arguments_ = process[\"argv\"].slice(2);\n        Module[\"inspect\"] = function() {\n            return \"[Emscripten Module object]\";\n        };\n    } else if (ENVIRONMENT_IS_SHELL) {\n        if (typeof read != \"undefined\") {\n            read_ = function shell_read(f) {\n                var data = tryParseAsDataURI(f);\n                if (data) {\n                    return intArrayToString(data);\n                }\n                return read(f);\n            };\n        }\n        readBinary = function readBinary(f) {\n            var data;\n            data = tryParseAsDataURI(f);\n            if (data) {\n                return data;\n            }\n            if (typeof readbuffer === \"function\") {\n                return new Uint8Array(readbuffer(f));\n            }\n            data = read(f, \"binary\");\n            assert(typeof data === \"object\");\n            return data;\n        };\n        if (typeof scriptArgs != \"undefined\") {\n            arguments_ = scriptArgs;\n        } else if (typeof arguments != \"undefined\") {\n            arguments_ = arguments;\n        }\n        if (typeof print !== \"undefined\") {\n            if (typeof console === \"undefined\") {\n                console = {};\n            }\n            console.log = print;\n            console.warn = console.error = typeof printErr !== \"undefined\" ? printErr : print;\n        }\n    } else if (ENVIRONMENT_IS_WEB || ENVIRONMENT_IS_WORKER) {\n        if (ENVIRONMENT_IS_WORKER) {\n            scriptDirectory = self.location.href;\n        } else if (typeof document !== \"undefined\" && document.currentScript) {\n            scriptDirectory = document.currentScript.src;\n        }\n        if (scriptDirectory.indexOf(\"blob:\") !== 0) {\n            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf(\"/\") + 1);\n        } else {\n            scriptDirectory = \"\";\n        }\n        read_ = function shell_read(url) {\n            try {\n                var xhr = new XMLHttpRequest();\n                xhr.open(\"GET\", url, false);\n                xhr.send(null);\n                return xhr.responseText;\n            } catch (err) {\n                var data = tryParseAsDataURI(url);\n                if (data) {\n                    return intArrayToString(data);\n                }\n                throw err;\n            }\n        };\n        if (ENVIRONMENT_IS_WORKER) {\n            readBinary = function readBinary(url) {\n                try {\n                    var xhr = new XMLHttpRequest();\n                    xhr.open(\"GET\", url, false);\n                    xhr.responseType = \"arraybuffer\";\n                    xhr.send(null);\n                    return new Uint8Array(xhr.response);\n                } catch (err) {\n                    var data = tryParseAsDataURI(url);\n                    if (data) {\n                        return data;\n                    }\n                    throw err;\n                }\n            };\n        }\n        readAsync = function readAsync(url, onload, onerror) {\n            var xhr = new XMLHttpRequest();\n            xhr.open(\"GET\", url, true);\n            xhr.responseType = \"arraybuffer\";\n            xhr.onload = function xhr_onload() {\n                if (xhr.status == 200 || xhr.status == 0 && xhr.response) {\n                    onload(xhr.response);\n                    return;\n                }\n                var data = tryParseAsDataURI(url);\n                if (data) {\n                    onload(data.buffer);\n                    return;\n                }\n                onerror();\n            };\n            xhr.onerror = onerror;\n            xhr.send(null);\n        };\n    }\n    var out = Module[\"print\"] || console.log.bind(console);\n    var err = Module[\"printErr\"] || console.warn.bind(console);\n    for(key in moduleOverrides){\n        if (moduleOverrides.hasOwnProperty(key)) {\n            Module[key] = moduleOverrides[key];\n        }\n    }\n    moduleOverrides = null;\n    if (Module[\"arguments\"]) {\n        arguments_ = Module[\"arguments\"];\n    }\n    if (Module[\"thisProgram\"]) {\n        thisProgram = Module[\"thisProgram\"];\n    }\n    var tempRet0 = 0;\n    var setTempRet0 = function(value) {\n        tempRet0 = value;\n    };\n    var getTempRet0 = function() {\n        return tempRet0;\n    };\n    var GLOBAL_BASE = 8;\n    function setValue(ptr, value, type, noSafe) {\n        type = type || \"i8\";\n        if (type.charAt(type.length - 1) === \"*\") {\n            type = \"i32\";\n        }\n        switch(type){\n            case \"i1\":\n                HEAP8[ptr >> 0] = value;\n                break;\n            case \"i8\":\n                HEAP8[ptr >> 0] = value;\n                break;\n            case \"i16\":\n                HEAP16[ptr >> 1] = value;\n                break;\n            case \"i32\":\n                HEAP32[ptr >> 2] = value;\n                break;\n            case \"i64\":\n                tempI64 = [\n                    value >>> 0,\n                    (tempDouble = value, +Math_abs(tempDouble) >= +1 ? tempDouble > +0 ? (Math_min(+Math_floor(tempDouble / +4294967296), +4294967295) | 0) >>> 0 : ~~+Math_ceil((tempDouble - +(~~tempDouble >>> 0)) / +4294967296) >>> 0 : 0)\n                ], HEAP32[ptr >> 2] = tempI64[0], HEAP32[ptr + 4 >> 2] = tempI64[1];\n                break;\n            case \"float\":\n                HEAPF32[ptr >> 2] = value;\n                break;\n            case \"double\":\n                HEAPF64[ptr >> 3] = value;\n                break;\n            default:\n                abort(\"invalid type for setValue: \" + type);\n        }\n    }\n    function getValue(ptr, type, noSafe) {\n        type = type || \"i8\";\n        if (type.charAt(type.length - 1) === \"*\") {\n            type = \"i32\";\n        }\n        switch(type){\n            case \"i1\":\n                return HEAP8[ptr >> 0];\n            case \"i8\":\n                return HEAP8[ptr >> 0];\n            case \"i16\":\n                return HEAP16[ptr >> 1];\n            case \"i32\":\n                return HEAP32[ptr >> 2];\n            case \"i64\":\n                return HEAP32[ptr >> 2];\n            case \"float\":\n                return HEAPF32[ptr >> 2];\n            case \"double\":\n                return HEAPF64[ptr >> 3];\n            default:\n                abort(\"invalid type for getValue: \" + type);\n        }\n        return null;\n    }\n    var ABORT = false;\n    function assert(condition, text) {\n        if (!condition) {\n            abort(\"Assertion failed: \" + text);\n        }\n    }\n    function getCFunc(ident) {\n        var func = Module[\"_\" + ident];\n        assert(func, \"Cannot call unknown function \" + ident + \", make sure it is exported\");\n        return func;\n    }\n    function ccall(ident, returnType, argTypes, args, opts) {\n        var toC = {\n            \"string\": function(str) {\n                var ret = 0;\n                if (str !== null && str !== undefined && str !== 0) {\n                    var len = (str.length << 2) + 1;\n                    ret = stackAlloc(len);\n                    stringToUTF8(str, ret, len);\n                }\n                return ret;\n            },\n            \"array\": function(arr) {\n                var ret = stackAlloc(arr.length);\n                writeArrayToMemory(arr, ret);\n                return ret;\n            }\n        };\n        function convertReturnValue(ret) {\n            if (returnType === \"string\") {\n                return UTF8ToString(ret);\n            }\n            if (returnType === \"boolean\") {\n                return Boolean(ret);\n            }\n            return ret;\n        }\n        var func = getCFunc(ident);\n        var cArgs = [];\n        var stack = 0;\n        if (args) {\n            for(var i = 0; i < args.length; i++){\n                var converter = toC[argTypes[i]];\n                if (converter) {\n                    if (stack === 0) {\n                        stack = stackSave();\n                    }\n                    cArgs[i] = converter(args[i]);\n                } else {\n                    cArgs[i] = args[i];\n                }\n            }\n        }\n        var ret = func.apply(null, cArgs);\n        ret = convertReturnValue(ret);\n        if (stack !== 0) {\n            stackRestore(stack);\n        }\n        return ret;\n    }\n    function cwrap(ident, returnType, argTypes, opts) {\n        argTypes = argTypes || [];\n        var numericArgs = argTypes.every(function(type) {\n            return type === \"number\";\n        });\n        var numericRet = returnType !== \"string\";\n        if (numericRet && numericArgs && !opts) {\n            return getCFunc(ident);\n        }\n        return function() {\n            return ccall(ident, returnType, argTypes, arguments, opts);\n        };\n    }\n    var UTF8Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf8\") : undefined;\n    function UTF8ArrayToString(u8Array, idx, maxBytesToRead) {\n        var endIdx = idx + maxBytesToRead;\n        var endPtr = idx;\n        while(u8Array[endPtr] && !(endPtr >= endIdx)){\n            ++endPtr;\n        }\n        if (endPtr - idx > 16 && u8Array.subarray && UTF8Decoder) {\n            return UTF8Decoder.decode(u8Array.subarray(idx, endPtr));\n        } else {\n            var str = \"\";\n            while(idx < endPtr){\n                var u0 = u8Array[idx++];\n                if (!(u0 & 128)) {\n                    str += String.fromCharCode(u0);\n                    continue;\n                }\n                var u1 = u8Array[idx++] & 63;\n                if ((u0 & 224) == 192) {\n                    str += String.fromCharCode((u0 & 31) << 6 | u1);\n                    continue;\n                }\n                var u2 = u8Array[idx++] & 63;\n                if ((u0 & 240) == 224) {\n                    u0 = (u0 & 15) << 12 | u1 << 6 | u2;\n                } else {\n                    u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | u8Array[idx++] & 63;\n                }\n                if (u0 < 65536) {\n                    str += String.fromCharCode(u0);\n                } else {\n                    var ch = u0 - 65536;\n                    str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);\n                }\n            }\n        }\n        return str;\n    }\n    function UTF8ToString(ptr, maxBytesToRead) {\n        return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : \"\";\n    }\n    function stringToUTF8Array(str, outU8Array, outIdx, maxBytesToWrite) {\n        if (!(maxBytesToWrite > 0)) {\n            return 0;\n        }\n        var startIdx = outIdx;\n        var endIdx = outIdx + maxBytesToWrite - 1;\n        for(var i = 0; i < str.length; ++i){\n            var u = str.charCodeAt(i);\n            if (u >= 55296 && u <= 57343) {\n                var u1 = str.charCodeAt(++i);\n                u = 65536 + ((u & 1023) << 10) | u1 & 1023;\n            }\n            if (u <= 127) {\n                if (outIdx >= endIdx) {\n                    break;\n                }\n                outU8Array[outIdx++] = u;\n            } else if (u <= 2047) {\n                if (outIdx + 1 >= endIdx) {\n                    break;\n                }\n                outU8Array[outIdx++] = 192 | u >> 6;\n                outU8Array[outIdx++] = 128 | u & 63;\n            } else if (u <= 65535) {\n                if (outIdx + 2 >= endIdx) {\n                    break;\n                }\n                outU8Array[outIdx++] = 224 | u >> 12;\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                outU8Array[outIdx++] = 128 | u & 63;\n            } else {\n                if (outIdx + 3 >= endIdx) {\n                    break;\n                }\n                outU8Array[outIdx++] = 240 | u >> 18;\n                outU8Array[outIdx++] = 128 | u >> 12 & 63;\n                outU8Array[outIdx++] = 128 | u >> 6 & 63;\n                outU8Array[outIdx++] = 128 | u & 63;\n            }\n        }\n        outU8Array[outIdx] = 0;\n        return outIdx - startIdx;\n    }\n    function stringToUTF8(str, outPtr, maxBytesToWrite) {\n        return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);\n    }\n    var UTF16Decoder = typeof TextDecoder !== \"undefined\" ? new TextDecoder(\"utf-16le\") : undefined;\n    function writeArrayToMemory(array, buffer) {\n        HEAP8.set(array, buffer);\n    }\n    function alignUp(x, multiple) {\n        if (x % multiple > 0) {\n            x += multiple - x % multiple;\n        }\n        return x;\n    }\n    var buffer, HEAP8, HEAPU8, HEAP16, HEAPU16, HEAP32, HEAPU32, HEAPF32, HEAPF64;\n    function updateGlobalBufferAndViews(buf) {\n        buffer = buf;\n        Module[\"HEAP8\"] = HEAP8 = new Int8Array(buf);\n        Module[\"HEAP16\"] = HEAP16 = new Int16Array(buf);\n        Module[\"HEAP32\"] = HEAP32 = new Int32Array(buf);\n        Module[\"HEAPU8\"] = HEAPU8 = new Uint8Array(buf);\n        Module[\"HEAPU16\"] = HEAPU16 = new Uint16Array(buf);\n        Module[\"HEAPU32\"] = HEAPU32 = new Uint32Array(buf);\n        Module[\"HEAPF32\"] = HEAPF32 = new Float32Array(buf);\n        Module[\"HEAPF64\"] = HEAPF64 = new Float64Array(buf);\n    }\n    var DYNAMIC_BASE = 5267040, DYNAMICTOP_PTR = 24128;\n    var INITIAL_TOTAL_MEMORY = Module[\"TOTAL_MEMORY\"] || 33554432;\n    if (Module[\"buffer\"]) {\n        buffer = Module[\"buffer\"];\n    } else {\n        buffer = new ArrayBuffer(INITIAL_TOTAL_MEMORY);\n    }\n    INITIAL_TOTAL_MEMORY = buffer.byteLength;\n    updateGlobalBufferAndViews(buffer);\n    HEAP32[DYNAMICTOP_PTR >> 2] = DYNAMIC_BASE;\n    function callRuntimeCallbacks(callbacks) {\n        while(callbacks.length > 0){\n            var callback = callbacks.shift();\n            if (typeof callback == \"function\") {\n                callback();\n                continue;\n            }\n            var func = callback.func;\n            if (typeof func === \"number\") {\n                if (callback.arg === undefined) {\n                    Module[\"dynCall_v\"](func);\n                } else {\n                    Module[\"dynCall_vi\"](func, callback.arg);\n                }\n            } else {\n                func(callback.arg === undefined ? null : callback.arg);\n            }\n        }\n    }\n    var __ATPRERUN__ = [];\n    var __ATINIT__ = [];\n    var __ATMAIN__ = [];\n    var __ATPOSTRUN__ = [];\n    function preRun() {\n        if (Module[\"preRun\"]) {\n            if (typeof Module[\"preRun\"] == \"function\") {\n                Module[\"preRun\"] = [\n                    Module[\"preRun\"]\n                ];\n            }\n            while(Module[\"preRun\"].length){\n                addOnPreRun(Module[\"preRun\"].shift());\n            }\n        }\n        callRuntimeCallbacks(__ATPRERUN__);\n    }\n    function initRuntime() {\n        callRuntimeCallbacks(__ATINIT__);\n    }\n    function preMain() {\n        callRuntimeCallbacks(__ATMAIN__);\n    }\n    function postRun() {\n        if (Module[\"postRun\"]) {\n            if (typeof Module[\"postRun\"] == \"function\") {\n                Module[\"postRun\"] = [\n                    Module[\"postRun\"]\n                ];\n            }\n            while(Module[\"postRun\"].length){\n                addOnPostRun(Module[\"postRun\"].shift());\n            }\n        }\n        callRuntimeCallbacks(__ATPOSTRUN__);\n    }\n    function addOnPreRun(cb) {\n        __ATPRERUN__.unshift(cb);\n    }\n    function addOnPostRun(cb) {\n        __ATPOSTRUN__.unshift(cb);\n    }\n    var Math_abs = Math.abs;\n    var Math_ceil = Math.ceil;\n    var Math_floor = Math.floor;\n    var Math_min = Math.min;\n    var runDependencies = 0;\n    var runDependencyWatcher = null;\n    var dependenciesFulfilled = null;\n    function addRunDependency(id) {\n        runDependencies++;\n        if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n        }\n    }\n    function removeRunDependency(id) {\n        runDependencies--;\n        if (Module[\"monitorRunDependencies\"]) {\n            Module[\"monitorRunDependencies\"](runDependencies);\n        }\n        if (runDependencies == 0) {\n            if (runDependencyWatcher !== null) {\n                clearInterval(runDependencyWatcher);\n                runDependencyWatcher = null;\n            }\n            if (dependenciesFulfilled) {\n                var callback = dependenciesFulfilled;\n                dependenciesFulfilled = null;\n                callback();\n            }\n        }\n    }\n    Module[\"preloadedImages\"] = {};\n    Module[\"preloadedAudios\"] = {};\n    var memoryInitializer = null;\n    var dataURIPrefix = \"data:application/octet-stream;base64,\";\n    function isDataURI(filename) {\n        return String.prototype.startsWith ? filename.startsWith(dataURIPrefix) : filename.indexOf(dataURIPrefix) === 0;\n    }\n    var tempDouble;\n    var tempI64;\n    memoryInitializer = \"data:application/octet-stream;base64,\";\n    var tempDoublePtr = 24144;\n    function demangle(func) {\n        return func;\n    }\n    function demangleAll(text) {\n        var regex = /\\b__Z[\\w\\d_]+/g;\n        return text.replace(regex, function(x) {\n            var y = demangle(x);\n            return x === y ? x : y + \" [\" + x + \"]\";\n        });\n    }\n    function jsStackTrace() {\n        var err = new Error();\n        if (!err.stack) {\n            try {\n                throw new Error(0);\n            } catch (e) {\n                err = e;\n            }\n            if (!err.stack) {\n                return \"(no stack trace available)\";\n            }\n        }\n        return err.stack.toString();\n    }\n    function stackTrace() {\n        var js = jsStackTrace();\n        if (Module[\"extraStackTrace\"]) {\n            js += \"\\n\" + Module[\"extraStackTrace\"]();\n        }\n        return demangleAll(js);\n    }\n    function ___assert_fail(condition, filename, line, func) {\n        abort(\"Assertion failed: \" + UTF8ToString(condition) + \", at: \" + [\n            filename ? UTF8ToString(filename) : \"unknown filename\",\n            line,\n            func ? UTF8ToString(func) : \"unknown function\"\n        ]);\n    }\n    function _emscripten_get_heap_size() {\n        return HEAP8.length;\n    }\n    function _emscripten_memcpy_big(dest, src, num) {\n        HEAPU8.set(HEAPU8.subarray(src, src + num), dest);\n    }\n    function ___setErrNo(value) {\n        if (Module[\"___errno_location\"]) {\n            HEAP32[Module[\"___errno_location\"]() >> 2] = value;\n        }\n        return value;\n    }\n    function abortOnCannotGrowMemory(requestedSize) {\n        abort(\"OOM\");\n    }\n    function emscripten_realloc_buffer(size) {\n        try {\n            var newBuffer = new ArrayBuffer(size);\n            if (newBuffer.byteLength != size) {\n                return;\n            }\n            new Int8Array(newBuffer).set(HEAP8);\n            _emscripten_replace_memory(newBuffer);\n            updateGlobalBufferAndViews(newBuffer);\n            return 1;\n        } catch (e) {}\n    }\n    function _emscripten_resize_heap(requestedSize) {\n        var oldSize = _emscripten_get_heap_size();\n        var PAGE_MULTIPLE = 16777216;\n        var LIMIT = 2147483648 - PAGE_MULTIPLE;\n        if (requestedSize > LIMIT) {\n            return false;\n        }\n        var MIN_TOTAL_MEMORY = 16777216;\n        var newSize = Math.max(oldSize, MIN_TOTAL_MEMORY);\n        while(newSize < requestedSize){\n            if (newSize <= 536870912) {\n                newSize = alignUp(2 * newSize, PAGE_MULTIPLE);\n            } else {\n                newSize = Math.min(alignUp((3 * newSize + 2147483648) / 4, PAGE_MULTIPLE), LIMIT);\n            }\n        }\n        var replacement = emscripten_realloc_buffer(newSize);\n        if (!replacement) {\n            return false;\n        }\n        return true;\n    }\n    function intArrayToString(array) {\n        var ret = [];\n        for(var i = 0; i < array.length; i++){\n            var chr = array[i];\n            if (chr > 255) {\n                chr &= 255;\n            }\n            ret.push(String.fromCharCode(chr));\n        }\n        return ret.join(\"\");\n    }\n    var decodeBase64 = typeof atob === \"function\" ? atob : function(input) {\n        var keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        do {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n            chr1 = enc1 << 2 | enc2 >> 4;\n            chr2 = (enc2 & 15) << 4 | enc3 >> 2;\n            chr3 = (enc3 & 3) << 6 | enc4;\n            output = output + String.fromCharCode(chr1);\n            if (enc3 !== 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 !== 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        }while (i < input.length);\n        return output;\n    };\n    function intArrayFromBase64(s) {\n        if (typeof ENVIRONMENT_IS_NODE === \"boolean\" && ENVIRONMENT_IS_NODE) {\n            var buf;\n            try {\n                buf = Buffer.from(s, \"base64\");\n            } catch (_) {\n                buf = new Buffer(s, \"base64\");\n            }\n            return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);\n        }\n        try {\n            var decoded = decodeBase64(s);\n            var bytes = new Uint8Array(decoded.length);\n            for(var i = 0; i < decoded.length; ++i){\n                bytes[i] = decoded.charCodeAt(i);\n            }\n            return bytes;\n        } catch (_) {\n            throw new Error(\"Converting base64 string to bytes failed.\");\n        }\n    }\n    function tryParseAsDataURI(filename) {\n        if (!isDataURI(filename)) {\n            return;\n        }\n        return intArrayFromBase64(filename.slice(dataURIPrefix.length));\n    }\n    var asmGlobalArg = {\n        \"Math\": Math,\n        \"Int8Array\": Int8Array,\n        \"Int32Array\": Int32Array,\n        \"Uint8Array\": Uint8Array,\n        \"Float32Array\": Float32Array,\n        \"Float64Array\": Float64Array\n    };\n    var asmLibraryArg = {\n        \"a\": abort,\n        \"b\": setTempRet0,\n        \"c\": getTempRet0,\n        \"d\": ___assert_fail,\n        \"e\": ___setErrNo,\n        \"f\": _emscripten_get_heap_size,\n        \"g\": _emscripten_memcpy_big,\n        \"h\": _emscripten_resize_heap,\n        \"i\": abortOnCannotGrowMemory,\n        \"j\": demangle,\n        \"k\": demangleAll,\n        \"l\": emscripten_realloc_buffer,\n        \"m\": jsStackTrace,\n        \"n\": stackTrace,\n        \"o\": tempDoublePtr,\n        \"p\": DYNAMICTOP_PTR\n    }; // EMSCRIPTEN_START_ASM\n    var asm = /** @suppress {uselessCode} */ function(global, env, buffer) {\n        \"almost asm\";\n        var a = new global.Int8Array(buffer), b = new global.Int32Array(buffer), c = new global.Uint8Array(buffer), d = new global.Float32Array(buffer), e = new global.Float64Array(buffer), f = env.o | 0, g = env.p | 0, p = global.Math.floor, q = global.Math.abs, r = global.Math.sqrt, s = global.Math.pow, t = global.Math.cos, u = global.Math.sin, v = global.Math.tan, w = global.Math.acos, x = global.Math.asin, y = global.Math.atan, z = global.Math.atan2, A = global.Math.ceil, B = global.Math.imul, C = global.Math.min, D = global.Math.max, E = global.Math.clz32, G = env.b, H = env.c, I = env.d, J = env.e, K = env.f, L = env.g, M = env.h, N = env.i, T = 24160;\n        function W(newBuffer) {\n            a = new Int8Array(newBuffer);\n            c = new Uint8Array(newBuffer);\n            b = new Int32Array(newBuffer);\n            d = new Float32Array(newBuffer);\n            e = new Float64Array(newBuffer);\n            buffer = newBuffer;\n            return true;\n        } // EMSCRIPTEN_START_FUNCS\n        function X(a) {\n            a = a | 0;\n            var b = 0;\n            b = T;\n            T = T + a | 0;\n            T = T + 15 & -16;\n            return b | 0;\n        }\n        function Y() {\n            return T | 0;\n        }\n        function Z(a) {\n            a = a | 0;\n            T = a;\n        }\n        function _(a, b) {\n            a = a | 0;\n            b = b | 0;\n            T = a;\n        }\n        function $(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0;\n            if ((a | 0) < 0) {\n                c = 2;\n                return c | 0;\n            }\n            if ((a | 0) > 13780509) {\n                c = ic(15, c) | 0;\n                return c | 0;\n            } else {\n                d = ((a | 0) < 0) << 31 >> 31;\n                f = rd(a | 0, d | 0, 3, 0) | 0;\n                e = H() | 0;\n                d = ld(a | 0, d | 0, 1, 0) | 0;\n                d = rd(f | 0, e | 0, d | 0, H() | 0) | 0;\n                d = ld(d | 0, H() | 0, 1, 0) | 0;\n                a = H() | 0;\n                b[c >> 2] = d;\n                b[c + 4 >> 2] = a;\n                c = 0;\n                return c | 0;\n            }\n            return 0;\n        }\n        function aa(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            return ba(a, b, c, d, 0) | 0;\n        }\n        function ba(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0;\n            j = T;\n            T = T + 16 | 0;\n            h = j;\n            if (!(ca(a, c, d, e, f) | 0)) {\n                e = 0;\n                T = j;\n                return e | 0;\n            }\n            do {\n                if ((d | 0) >= 0) {\n                    if ((d | 0) > 13780509) {\n                        g = ic(15, h) | 0;\n                        if (g | 0) {\n                            break;\n                        }\n                        i = h;\n                        h = b[i >> 2] | 0;\n                        i = b[i + 4 >> 2] | 0;\n                    } else {\n                        g = ((d | 0) < 0) << 31 >> 31;\n                        k = rd(d | 0, g | 0, 3, 0) | 0;\n                        i = H() | 0;\n                        g = ld(d | 0, g | 0, 1, 0) | 0;\n                        g = rd(k | 0, i | 0, g | 0, H() | 0) | 0;\n                        g = ld(g | 0, H() | 0, 1, 0) | 0;\n                        i = H() | 0;\n                        b[h >> 2] = g;\n                        b[h + 4 >> 2] = i;\n                        h = g;\n                    }\n                    Bd(e | 0, 0, h << 3 | 0) | 0;\n                    if (f | 0) {\n                        Bd(f | 0, 0, h << 2 | 0) | 0;\n                        g = da(a, c, d, e, f, h, i, 0) | 0;\n                        break;\n                    }\n                    g = kd(h, 4) | 0;\n                    if (!g) {\n                        g = 13;\n                    } else {\n                        k = da(a, c, d, e, g, h, i, 0) | 0;\n                        jd(g);\n                        g = k;\n                    }\n                } else {\n                    g = 2;\n                }\n            }while (0);\n            k = g;\n            T = j;\n            return k | 0;\n        }\n        function ca(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\n            q = T;\n            T = T + 16 | 0;\n            o = q;\n            p = q + 8 | 0;\n            n = o;\n            b[n >> 2] = a;\n            b[n + 4 >> 2] = c;\n            if ((d | 0) < 0) {\n                p = 2;\n                T = q;\n                return p | 0;\n            }\n            g = e;\n            b[g >> 2] = a;\n            b[g + 4 >> 2] = c;\n            g = (f | 0) != 0;\n            if (g) {\n                b[f >> 2] = 0;\n            }\n            if (xb(a, c) | 0) {\n                p = 9;\n                T = q;\n                return p | 0;\n            }\n            b[p >> 2] = 0;\n            a: do {\n                if ((d | 0) >= 1) {\n                    if (g) {\n                        l = 1;\n                        k = 0;\n                        m = 0;\n                        n = 1;\n                        g = a;\n                        while(1){\n                            if (!(k | m)) {\n                                g = ea(g, c, 4, p, o) | 0;\n                                if (g | 0) {\n                                    break a;\n                                }\n                                c = o;\n                                g = b[c >> 2] | 0;\n                                c = b[c + 4 >> 2] | 0;\n                                if (xb(g, c) | 0) {\n                                    g = 9;\n                                    break a;\n                                }\n                            }\n                            g = ea(g, c, b[22384 + (m << 2) >> 2] | 0, p, o) | 0;\n                            if (g | 0) {\n                                break a;\n                            }\n                            c = o;\n                            g = b[c >> 2] | 0;\n                            c = b[c + 4 >> 2] | 0;\n                            a = e + (l << 3) | 0;\n                            b[a >> 2] = g;\n                            b[a + 4 >> 2] = c;\n                            b[f + (l << 2) >> 2] = n;\n                            a = k + 1 | 0;\n                            h = (a | 0) == (n | 0);\n                            i = m + 1 | 0;\n                            j = (i | 0) == 6;\n                            if (xb(g, c) | 0) {\n                                g = 9;\n                                break a;\n                            }\n                            n = n + (j & h & 1) | 0;\n                            if ((n | 0) > (d | 0)) {\n                                g = 0;\n                                break;\n                            } else {\n                                l = l + 1 | 0;\n                                k = h ? 0 : a;\n                                m = h ? j ? 0 : i : m;\n                            }\n                        }\n                    } else {\n                        l = 1;\n                        k = 0;\n                        m = 0;\n                        n = 1;\n                        g = a;\n                        while(1){\n                            if (!(k | m)) {\n                                g = ea(g, c, 4, p, o) | 0;\n                                if (g | 0) {\n                                    break a;\n                                }\n                                c = o;\n                                g = b[c >> 2] | 0;\n                                c = b[c + 4 >> 2] | 0;\n                                if (xb(g, c) | 0) {\n                                    g = 9;\n                                    break a;\n                                }\n                            }\n                            g = ea(g, c, b[22384 + (m << 2) >> 2] | 0, p, o) | 0;\n                            if (g | 0) {\n                                break a;\n                            }\n                            c = o;\n                            g = b[c >> 2] | 0;\n                            c = b[c + 4 >> 2] | 0;\n                            a = e + (l << 3) | 0;\n                            b[a >> 2] = g;\n                            b[a + 4 >> 2] = c;\n                            a = k + 1 | 0;\n                            h = (a | 0) == (n | 0);\n                            i = m + 1 | 0;\n                            j = (i | 0) == 6;\n                            if (xb(g, c) | 0) {\n                                g = 9;\n                                break a;\n                            }\n                            n = n + (j & h & 1) | 0;\n                            if ((n | 0) > (d | 0)) {\n                                g = 0;\n                                break;\n                            } else {\n                                l = l + 1 | 0;\n                                k = h ? 0 : a;\n                                m = h ? j ? 0 : i : m;\n                            }\n                        }\n                    }\n                } else {\n                    g = 0;\n                }\n            }while (0);\n            p = g;\n            T = q;\n            return p | 0;\n        }\n        function da(a, c, d, e, f, g, h, i) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            g = g | 0;\n            h = h | 0;\n            i = i | 0;\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0;\n            q = T;\n            T = T + 16 | 0;\n            o = q + 8 | 0;\n            p = q;\n            j = td(a | 0, c | 0, g | 0, h | 0) | 0;\n            l = H() | 0;\n            m = e + (j << 3) | 0;\n            r = m;\n            s = b[r >> 2] | 0;\n            r = b[r + 4 >> 2] | 0;\n            k = (s | 0) == (a | 0) & (r | 0) == (c | 0);\n            if (!((s | 0) == 0 & (r | 0) == 0 | k)) {\n                do {\n                    j = ld(j | 0, l | 0, 1, 0) | 0;\n                    j = sd(j | 0, H() | 0, g | 0, h | 0) | 0;\n                    l = H() | 0;\n                    m = e + (j << 3) | 0;\n                    s = m;\n                    r = b[s >> 2] | 0;\n                    s = b[s + 4 >> 2] | 0;\n                    k = (r | 0) == (a | 0) & (s | 0) == (c | 0);\n                }while (!((r | 0) == 0 & (s | 0) == 0 | k));\n            }\n            j = f + (j << 2) | 0;\n            if (k ? (b[j >> 2] | 0) <= (i | 0) : 0) {\n                s = 0;\n                T = q;\n                return s | 0;\n            }\n            s = m;\n            b[s >> 2] = a;\n            b[s + 4 >> 2] = c;\n            b[j >> 2] = i;\n            if ((i | 0) >= (d | 0)) {\n                s = 0;\n                T = q;\n                return s | 0;\n            }\n            k = i + 1 | 0;\n            b[o >> 2] = 0;\n            j = ea(a, c, 2, o, p) | 0;\n            switch(j | 0){\n                case 9:\n                    {\n                        n = 9;\n                        break;\n                    }\n                case 0:\n                    {\n                        j = p;\n                        j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                        if (!j) {\n                            n = 9;\n                        }\n                        break;\n                    }\n                default:\n            }\n            a: do {\n                if ((n | 0) == 9) {\n                    b[o >> 2] = 0;\n                    j = ea(a, c, 3, o, p) | 0;\n                    switch(j | 0){\n                        case 9:\n                            break;\n                        case 0:\n                            {\n                                j = p;\n                                j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                                if (j | 0) {\n                                    break a;\n                                }\n                                break;\n                            }\n                        default:\n                            break a;\n                    }\n                    b[o >> 2] = 0;\n                    j = ea(a, c, 1, o, p) | 0;\n                    switch(j | 0){\n                        case 9:\n                            break;\n                        case 0:\n                            {\n                                j = p;\n                                j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                                if (j | 0) {\n                                    break a;\n                                }\n                                break;\n                            }\n                        default:\n                            break a;\n                    }\n                    b[o >> 2] = 0;\n                    j = ea(a, c, 5, o, p) | 0;\n                    switch(j | 0){\n                        case 9:\n                            break;\n                        case 0:\n                            {\n                                j = p;\n                                j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                                if (j | 0) {\n                                    break a;\n                                }\n                                break;\n                            }\n                        default:\n                            break a;\n                    }\n                    b[o >> 2] = 0;\n                    j = ea(a, c, 4, o, p) | 0;\n                    switch(j | 0){\n                        case 9:\n                            break;\n                        case 0:\n                            {\n                                j = p;\n                                j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                                if (j | 0) {\n                                    break a;\n                                }\n                                break;\n                            }\n                        default:\n                            break a;\n                    }\n                    b[o >> 2] = 0;\n                    j = ea(a, c, 6, o, p) | 0;\n                    switch(j | 0){\n                        case 9:\n                            break;\n                        case 0:\n                            {\n                                j = p;\n                                j = da(b[j >> 2] | 0, b[j + 4 >> 2] | 0, d, e, f, g, h, k) | 0;\n                                if (j | 0) {\n                                    break a;\n                                }\n                                break;\n                            }\n                        default:\n                            break a;\n                    }\n                    s = 0;\n                    T = q;\n                    return s | 0;\n                }\n            }while (0);\n            s = j;\n            T = q;\n            return s | 0;\n        }\n        function ea(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\n            if (d >>> 0 > 6) {\n                f = 1;\n                return f | 0;\n            }\n            m = (b[e >> 2] | 0) % 6 | 0;\n            b[e >> 2] = m;\n            if ((m | 0) > 0) {\n                g = 0;\n                do {\n                    d = Sa(d) | 0;\n                    g = g + 1 | 0;\n                }while ((g | 0) < (b[e >> 2] | 0));\n            }\n            m = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            l = m & 127;\n            if (l >>> 0 > 121) {\n                f = 5;\n                return f | 0;\n            }\n            j = Fb(a, c) | 0;\n            g = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            g = g & 15;\n            a: do {\n                if (!g) {\n                    k = 8;\n                } else {\n                    while(1){\n                        h = (15 - g | 0) * 3 | 0;\n                        i = vd(a | 0, c | 0, h | 0) | 0;\n                        H() | 0;\n                        i = i & 7;\n                        if ((i | 0) == 7) {\n                            c = 5;\n                            break;\n                        }\n                        p = (Lb(g) | 0) == 0;\n                        g = g + -1 | 0;\n                        n = wd(7, 0, h | 0) | 0;\n                        c = c & ~(H() | 0);\n                        o = wd(b[(p ? 432 : 16) + (i * 28 | 0) + (d << 2) >> 2] | 0, 0, h | 0) | 0;\n                        h = H() | 0;\n                        d = b[(p ? 640 : 224) + (i * 28 | 0) + (d << 2) >> 2] | 0;\n                        a = o | a & ~n;\n                        c = h | c;\n                        if (!d) {\n                            d = 0;\n                            break a;\n                        }\n                        if (!g) {\n                            k = 8;\n                            break a;\n                        }\n                    }\n                    return c | 0;\n                }\n            }while (0);\n            if ((k | 0) == 8) {\n                p = b[848 + (l * 28 | 0) + (d << 2) >> 2] | 0;\n                o = wd(p | 0, 0, 45) | 0;\n                a = o | a;\n                c = H() | 0 | c & -1040385;\n                d = b[4272 + (l * 28 | 0) + (d << 2) >> 2] | 0;\n                if ((p & 127 | 0) == 127) {\n                    p = wd(b[848 + (l * 28 | 0) + 20 >> 2] | 0, 0, 45) | 0;\n                    c = H() | 0 | c & -1040385;\n                    d = b[4272 + (l * 28 | 0) + 20 >> 2] | 0;\n                    a = Hb(p | a, c) | 0;\n                    c = H() | 0;\n                    b[e >> 2] = (b[e >> 2] | 0) + 1;\n                }\n            }\n            i = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            i = i & 127;\n            b: do {\n                if (!(ma(i) | 0)) {\n                    if ((d | 0) > 0) {\n                        g = 0;\n                        do {\n                            a = Hb(a, c) | 0;\n                            c = H() | 0;\n                            g = g + 1 | 0;\n                        }while ((g | 0) != (d | 0));\n                    }\n                } else {\n                    c: do {\n                        if ((Fb(a, c) | 0) == 1) {\n                            if ((l | 0) != (i | 0)) {\n                                if (sa(i, b[7696 + (l * 28 | 0) >> 2] | 0) | 0) {\n                                    a = Jb(a, c) | 0;\n                                    h = 1;\n                                    c = H() | 0;\n                                    break;\n                                } else {\n                                    I(23313, 22416, 436, 22424);\n                                }\n                            }\n                            switch(j | 0){\n                                case 3:\n                                    {\n                                        a = Hb(a, c) | 0;\n                                        c = H() | 0;\n                                        b[e >> 2] = (b[e >> 2] | 0) + 1;\n                                        h = 0;\n                                        break c;\n                                    }\n                                case 5:\n                                    {\n                                        a = Jb(a, c) | 0;\n                                        c = H() | 0;\n                                        b[e >> 2] = (b[e >> 2] | 0) + 5;\n                                        h = 0;\n                                        break c;\n                                    }\n                                case 0:\n                                    {\n                                        p = 9;\n                                        return p | 0;\n                                    }\n                                default:\n                                    {\n                                        p = 1;\n                                        return p | 0;\n                                    }\n                            }\n                        } else {\n                            h = 0;\n                        }\n                    }while (0);\n                    if ((d | 0) > 0) {\n                        g = 0;\n                        do {\n                            a = Gb(a, c) | 0;\n                            c = H() | 0;\n                            g = g + 1 | 0;\n                        }while ((g | 0) != (d | 0));\n                    }\n                    if ((l | 0) != (i | 0)) {\n                        if (!(na(i) | 0)) {\n                            if ((h | 0) != 0 | (Fb(a, c) | 0) != 5) {\n                                break;\n                            }\n                            b[e >> 2] = (b[e >> 2] | 0) + 1;\n                            break;\n                        }\n                        switch(m & 127){\n                            case 8:\n                            case 118:\n                                break b;\n                            default:\n                        }\n                        if ((Fb(a, c) | 0) != 3) {\n                            b[e >> 2] = (b[e >> 2] | 0) + 1;\n                        }\n                    }\n                }\n            }while (0);\n            b[e >> 2] = ((b[e >> 2] | 0) + d | 0) % 6 | 0;\n            p = f;\n            b[p >> 2] = a;\n            b[p + 4 >> 2] = c;\n            p = 0;\n            return p | 0;\n        }\n        function fa(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\n            i = T;\n            T = T + 16 | 0;\n            g = i;\n            h = i + 8 | 0;\n            f = (xb(a, c) | 0) == 0;\n            f = f ? 1 : 2;\n            while(1){\n                b[h >> 2] = 0;\n                k = (ea(a, c, f, h, g) | 0) == 0;\n                j = g;\n                if (k & ((b[j >> 2] | 0) == (d | 0) ? (b[j + 4 >> 2] | 0) == (e | 0) : 0)) {\n                    a = 4;\n                    break;\n                }\n                f = f + 1 | 0;\n                if (f >>> 0 >= 7) {\n                    f = 7;\n                    a = 4;\n                    break;\n                }\n            }\n            if ((a | 0) == 4) {\n                T = i;\n                return f | 0;\n            }\n            return 0;\n        }\n        function ga(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\n            p = T;\n            T = T + 16 | 0;\n            n = p;\n            o = p + 8 | 0;\n            m = n;\n            b[m >> 2] = a;\n            b[m + 4 >> 2] = c;\n            if (!d) {\n                o = e;\n                b[o >> 2] = a;\n                b[o + 4 >> 2] = c;\n                o = 0;\n                T = p;\n                return o | 0;\n            }\n            b[o >> 2] = 0;\n            a: do {\n                if (!(xb(a, c) | 0)) {\n                    g = (d | 0) > 0;\n                    if (g) {\n                        f = 0;\n                        m = a;\n                        do {\n                            a = ea(m, c, 4, o, n) | 0;\n                            if (a | 0) {\n                                break a;\n                            }\n                            c = n;\n                            m = b[c >> 2] | 0;\n                            c = b[c + 4 >> 2] | 0;\n                            f = f + 1 | 0;\n                            if (xb(m, c) | 0) {\n                                a = 9;\n                                break a;\n                            }\n                        }while ((f | 0) < (d | 0));\n                        l = e;\n                        b[l >> 2] = m;\n                        b[l + 4 >> 2] = c;\n                        l = d + -1 | 0;\n                        if (g) {\n                            k = 0;\n                            a = 1;\n                            do {\n                                f = 22384 + (k << 2) | 0;\n                                if ((k | 0) == 5) {\n                                    h = b[f >> 2] | 0;\n                                    g = 0;\n                                    f = a;\n                                    while(1){\n                                        a = n;\n                                        a = ea(b[a >> 2] | 0, b[a + 4 >> 2] | 0, h, o, n) | 0;\n                                        if (a | 0) {\n                                            break a;\n                                        }\n                                        if ((g | 0) != (l | 0)) {\n                                            j = n;\n                                            i = b[j >> 2] | 0;\n                                            j = b[j + 4 >> 2] | 0;\n                                            a = e + (f << 3) | 0;\n                                            b[a >> 2] = i;\n                                            b[a + 4 >> 2] = j;\n                                            if (!(xb(i, j) | 0)) {\n                                                a = f + 1 | 0;\n                                            } else {\n                                                a = 9;\n                                                break a;\n                                            }\n                                        } else {\n                                            a = f;\n                                        }\n                                        g = g + 1 | 0;\n                                        if ((g | 0) >= (d | 0)) {\n                                            break;\n                                        } else {\n                                            f = a;\n                                        }\n                                    }\n                                } else {\n                                    h = n;\n                                    j = b[f >> 2] | 0;\n                                    i = 0;\n                                    f = a;\n                                    g = b[h >> 2] | 0;\n                                    h = b[h + 4 >> 2] | 0;\n                                    while(1){\n                                        a = ea(g, h, j, o, n) | 0;\n                                        if (a | 0) {\n                                            break a;\n                                        }\n                                        h = n;\n                                        g = b[h >> 2] | 0;\n                                        h = b[h + 4 >> 2] | 0;\n                                        a = e + (f << 3) | 0;\n                                        b[a >> 2] = g;\n                                        b[a + 4 >> 2] = h;\n                                        a = f + 1 | 0;\n                                        if (xb(g, h) | 0) {\n                                            a = 9;\n                                            break a;\n                                        }\n                                        i = i + 1 | 0;\n                                        if ((i | 0) >= (d | 0)) {\n                                            break;\n                                        } else {\n                                            f = a;\n                                        }\n                                    }\n                                }\n                                k = k + 1 | 0;\n                            }while (k >>> 0 < 6);\n                            a = n;\n                            h = m;\n                            f = b[a >> 2] | 0;\n                            g = c;\n                            a = b[a + 4 >> 2] | 0;\n                        } else {\n                            h = m;\n                            f = m;\n                            g = c;\n                            a = c;\n                        }\n                    } else {\n                        h = e;\n                        b[h >> 2] = a;\n                        b[h + 4 >> 2] = c;\n                        h = a;\n                        f = a;\n                        g = c;\n                        a = c;\n                    }\n                    a = (h | 0) == (f | 0) & (g | 0) == (a | 0) ? 0 : 9;\n                } else {\n                    a = 9;\n                }\n            }while (0);\n            o = a;\n            T = p;\n            return o | 0;\n        }\n        function ha(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\n            i = T;\n            T = T + 48 | 0;\n            f = i + 16 | 0;\n            g = i + 8 | 0;\n            h = i;\n            if (d | 0) {\n                h = 15;\n                T = i;\n                return h | 0;\n            }\n            k = a;\n            j = b[k + 4 >> 2] | 0;\n            d = g;\n            b[d >> 2] = b[k >> 2];\n            b[d + 4 >> 2] = j;\n            Ec(g, f);\n            c = za(f, c, h) | 0;\n            if (!c) {\n                d = b[g >> 2] | 0;\n                g = b[a + 8 >> 2] | 0;\n                if ((g | 0) > 0) {\n                    f = b[a + 12 >> 2] | 0;\n                    c = 0;\n                    do {\n                        d = (b[f + (c << 3) >> 2] | 0) + d | 0;\n                        c = c + 1 | 0;\n                    }while ((c | 0) < (g | 0));\n                }\n                c = h;\n                f = b[c >> 2] | 0;\n                c = b[c + 4 >> 2] | 0;\n                g = ((d | 0) < 0) << 31 >> 31;\n                if ((c | 0) < (g | 0) | (c | 0) == (g | 0) & f >>> 0 < d >>> 0) {\n                    c = h;\n                    b[c >> 2] = d;\n                    b[c + 4 >> 2] = g;\n                    c = g;\n                } else {\n                    d = f;\n                }\n                j = ld(d | 0, c | 0, 12, 0) | 0;\n                k = H() | 0;\n                c = h;\n                b[c >> 2] = j;\n                b[c + 4 >> 2] = k;\n                c = e;\n                b[c >> 2] = j;\n                b[c + 4 >> 2] = k;\n                c = 0;\n            }\n            k = c;\n            T = i;\n            return k | 0;\n        }\n        function ia(a, c, d, f, g, h, i) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            g = g | 0;\n            h = h | 0;\n            i = i | 0;\n            var j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, I = 0, J = 0.0, K = 0.0, L = 0.0, M = 0.0;\n            I = T;\n            T = T + 64 | 0;\n            D = I + 48 | 0;\n            E = I + 32 | 0;\n            F = I + 24 | 0;\n            x = I + 8 | 0;\n            y = I;\n            k = b[a >> 2] | 0;\n            if ((k | 0) <= 0) {\n                G = 0;\n                T = I;\n                return G | 0;\n            }\n            z = a + 4 | 0;\n            A = D + 8 | 0;\n            B = E + 8 | 0;\n            C = x + 8 | 0;\n            j = 0;\n            v = 0;\n            while(1){\n                l = b[z >> 2] | 0;\n                u = l + (v << 4) | 0;\n                b[D >> 2] = b[u >> 2];\n                b[D + 4 >> 2] = b[u + 4 >> 2];\n                b[D + 8 >> 2] = b[u + 8 >> 2];\n                b[D + 12 >> 2] = b[u + 12 >> 2];\n                if ((v | 0) == (k + -1 | 0)) {\n                    b[E >> 2] = b[l >> 2];\n                    b[E + 4 >> 2] = b[l + 4 >> 2];\n                    b[E + 8 >> 2] = b[l + 8 >> 2];\n                    b[E + 12 >> 2] = b[l + 12 >> 2];\n                } else {\n                    u = l + (v + 1 << 4) | 0;\n                    b[E >> 2] = b[u >> 2];\n                    b[E + 4 >> 2] = b[u + 4 >> 2];\n                    b[E + 8 >> 2] = b[u + 8 >> 2];\n                    b[E + 12 >> 2] = b[u + 12 >> 2];\n                }\n                k = Aa(D, E, f, F) | 0;\n                a: do {\n                    if (!k) {\n                        l = F;\n                        k = b[l >> 2] | 0;\n                        l = b[l + 4 >> 2] | 0;\n                        if ((l | 0) > 0 | (l | 0) == 0 & k >>> 0 > 0) {\n                            t = 0;\n                            u = 0;\n                            b: while(1){\n                                M = +e[D >> 3];\n                                s = md(k | 0, l | 0, t | 0, u | 0) | 0;\n                                L = +(s >>> 0) + 4294967296.0 * +(H() | 0);\n                                J = +(k >>> 0) + 4294967296.0 * +(l | 0);\n                                K = +(t >>> 0) + 4294967296.0 * +(u | 0);\n                                e[x >> 3] = M * L / J + +e[E >> 3] * K / J;\n                                e[C >> 3] = +e[A >> 3] * L / J + +e[B >> 3] * K / J;\n                                k = Mb(x, f, y) | 0;\n                                if (k | 0) {\n                                    j = k;\n                                    break;\n                                }\n                                s = y;\n                                r = b[s >> 2] | 0;\n                                s = b[s + 4 >> 2] | 0;\n                                o = td(r | 0, s | 0, c | 0, d | 0) | 0;\n                                m = H() | 0;\n                                k = i + (o << 3) | 0;\n                                n = k;\n                                l = b[n >> 2] | 0;\n                                n = b[n + 4 >> 2] | 0;\n                                c: do {\n                                    if ((l | 0) == 0 & (n | 0) == 0) {\n                                        w = k;\n                                        G = 16;\n                                    } else {\n                                        p = 0;\n                                        q = 0;\n                                        while(1){\n                                            if ((p | 0) > (d | 0) | (p | 0) == (d | 0) & q >>> 0 > c >>> 0) {\n                                                j = 1;\n                                                break b;\n                                            }\n                                            if ((l | 0) == (r | 0) & (n | 0) == (s | 0)) {\n                                                break c;\n                                            }\n                                            k = ld(o | 0, m | 0, 1, 0) | 0;\n                                            o = sd(k | 0, H() | 0, c | 0, d | 0) | 0;\n                                            m = H() | 0;\n                                            q = ld(q | 0, p | 0, 1, 0) | 0;\n                                            p = H() | 0;\n                                            k = i + (o << 3) | 0;\n                                            n = k;\n                                            l = b[n >> 2] | 0;\n                                            n = b[n + 4 >> 2] | 0;\n                                            if ((l | 0) == 0 & (n | 0) == 0) {\n                                                w = k;\n                                                G = 16;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }while (0);\n                                if ((G | 0) == 16 ? (G = 0, !((r | 0) == 0 & (s | 0) == 0)) : 0) {\n                                    q = w;\n                                    b[q >> 2] = r;\n                                    b[q + 4 >> 2] = s;\n                                    q = h + (b[g >> 2] << 3) | 0;\n                                    b[q >> 2] = r;\n                                    b[q + 4 >> 2] = s;\n                                    q = g;\n                                    q = ld(b[q >> 2] | 0, b[q + 4 >> 2] | 0, 1, 0) | 0;\n                                    r = H() | 0;\n                                    s = g;\n                                    b[s >> 2] = q;\n                                    b[s + 4 >> 2] = r;\n                                }\n                                t = ld(t | 0, u | 0, 1, 0) | 0;\n                                u = H() | 0;\n                                l = F;\n                                k = b[l >> 2] | 0;\n                                l = b[l + 4 >> 2] | 0;\n                                if (!((l | 0) > (u | 0) | (l | 0) == (u | 0) & k >>> 0 > t >>> 0)) {\n                                    l = 1;\n                                    break a;\n                                }\n                            }\n                            l = 0;\n                        } else {\n                            l = 1;\n                        }\n                    } else {\n                        l = 0;\n                        j = k;\n                    }\n                }while (0);\n                v = v + 1 | 0;\n                if (!l) {\n                    G = 21;\n                    break;\n                }\n                k = b[a >> 2] | 0;\n                if ((v | 0) >= (k | 0)) {\n                    j = 0;\n                    G = 21;\n                    break;\n                }\n            }\n            if ((G | 0) == 21) {\n                T = I;\n                return j | 0;\n            }\n            return 0;\n        }\n        function ja(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, I = 0, J = 0, K = 0;\n            K = T;\n            T = T + 112 | 0;\n            F = K + 80 | 0;\n            j = K + 72 | 0;\n            G = K;\n            I = K + 56 | 0;\n            if (d | 0) {\n                J = 15;\n                T = K;\n                return J | 0;\n            }\n            k = a + 8 | 0;\n            J = id((b[k >> 2] << 5) + 32 | 0) | 0;\n            if (!J) {\n                J = 13;\n                T = K;\n                return J | 0;\n            }\n            Fc(a, J);\n            D = a;\n            E = b[D + 4 >> 2] | 0;\n            d = j;\n            b[d >> 2] = b[D >> 2];\n            b[d + 4 >> 2] = E;\n            Ec(j, F);\n            d = za(F, c, G) | 0;\n            if (!d) {\n                d = b[j >> 2] | 0;\n                g = b[k >> 2] | 0;\n                if ((g | 0) > 0) {\n                    h = b[a + 12 >> 2] | 0;\n                    f = 0;\n                    do {\n                        d = (b[h + (f << 3) >> 2] | 0) + d | 0;\n                        f = f + 1 | 0;\n                    }while ((f | 0) != (g | 0));\n                    f = d;\n                } else {\n                    f = d;\n                }\n                d = G;\n                g = b[d >> 2] | 0;\n                d = b[d + 4 >> 2] | 0;\n                h = ((f | 0) < 0) << 31 >> 31;\n                if ((d | 0) < (h | 0) | (d | 0) == (h | 0) & g >>> 0 < f >>> 0) {\n                    d = G;\n                    b[d >> 2] = f;\n                    b[d + 4 >> 2] = h;\n                    d = h;\n                } else {\n                    f = g;\n                }\n                D = ld(f | 0, d | 0, 12, 0) | 0;\n                E = H() | 0;\n                d = G;\n                b[d >> 2] = D;\n                b[d + 4 >> 2] = E;\n                d = 0;\n            } else {\n                D = 0;\n                E = 0;\n            }\n            if (d | 0) {\n                jd(J);\n                J = d;\n                T = K;\n                return J | 0;\n            }\n            f = kd(D, 8) | 0;\n            if (!f) {\n                jd(J);\n                J = 13;\n                T = K;\n                return J | 0;\n            }\n            i = kd(D, 8) | 0;\n            if (!i) {\n                jd(J);\n                jd(f);\n                J = 13;\n                T = K;\n                return J | 0;\n            }\n            B = F;\n            b[B >> 2] = 0;\n            b[B + 4 >> 2] = 0;\n            B = a;\n            C = b[B + 4 >> 2] | 0;\n            d = j;\n            b[d >> 2] = b[B >> 2];\n            b[d + 4 >> 2] = C;\n            d = ia(j, D, E, c, F, f, i) | 0;\n            a: do {\n                if (!d) {\n                    b: do {\n                        if ((b[k >> 2] | 0) > 0) {\n                            h = a + 12 | 0;\n                            g = 0;\n                            while(1){\n                                d = ia((b[h >> 2] | 0) + (g << 3) | 0, D, E, c, F, f, i) | 0;\n                                g = g + 1 | 0;\n                                if (d | 0) {\n                                    break;\n                                }\n                                if ((g | 0) >= (b[k >> 2] | 0)) {\n                                    break b;\n                                }\n                            }\n                            jd(f);\n                            jd(i);\n                            jd(J);\n                            break a;\n                        }\n                    }while (0);\n                    if ((E | 0) > 0 | (E | 0) == 0 & D >>> 0 > 0) {\n                        Bd(i | 0, 0, D << 3 | 0) | 0;\n                    }\n                    C = F;\n                    B = b[C + 4 >> 2] | 0;\n                    c: do {\n                        if ((B | 0) > 0 | (B | 0) == 0 & (b[C >> 2] | 0) >>> 0 > 0) {\n                            y = f;\n                            z = i;\n                            A = f;\n                            B = i;\n                            C = f;\n                            d = f;\n                            v = f;\n                            w = i;\n                            x = i;\n                            f = i;\n                            d: while(1){\n                                r = 0;\n                                s = 0;\n                                t = 0;\n                                u = 0;\n                                g = 0;\n                                h = 0;\n                                while(1){\n                                    i = G;\n                                    j = i + 56 | 0;\n                                    do {\n                                        b[i >> 2] = 0;\n                                        i = i + 4 | 0;\n                                    }while ((i | 0) < (j | 0));\n                                    c = y + (r << 3) | 0;\n                                    k = b[c >> 2] | 0;\n                                    c = b[c + 4 >> 2] | 0;\n                                    if (ca(k, c, 1, G, 0) | 0) {\n                                        i = G;\n                                        j = i + 56 | 0;\n                                        do {\n                                            b[i >> 2] = 0;\n                                            i = i + 4 | 0;\n                                        }while ((i | 0) < (j | 0));\n                                        i = kd(7, 4) | 0;\n                                        if (i | 0) {\n                                            da(k, c, 1, G, i, 7, 0, 0) | 0;\n                                            jd(i);\n                                        }\n                                    }\n                                    q = 0;\n                                    while(1){\n                                        p = G + (q << 3) | 0;\n                                        o = b[p >> 2] | 0;\n                                        p = b[p + 4 >> 2] | 0;\n                                        e: do {\n                                            if (!((o | 0) == 0 & (p | 0) == 0)) {\n                                                l = td(o | 0, p | 0, D | 0, E | 0) | 0;\n                                                k = H() | 0;\n                                                i = e + (l << 3) | 0;\n                                                c = i;\n                                                j = b[c >> 2] | 0;\n                                                c = b[c + 4 >> 2] | 0;\n                                                if (!((j | 0) == 0 & (c | 0) == 0)) {\n                                                    m = 0;\n                                                    n = 0;\n                                                    do {\n                                                        if ((m | 0) > (E | 0) | (m | 0) == (E | 0) & n >>> 0 > D >>> 0) {\n                                                            break d;\n                                                        }\n                                                        if ((j | 0) == (o | 0) & (c | 0) == (p | 0)) {\n                                                            i = g;\n                                                            j = h;\n                                                            break e;\n                                                        }\n                                                        i = ld(l | 0, k | 0, 1, 0) | 0;\n                                                        l = sd(i | 0, H() | 0, D | 0, E | 0) | 0;\n                                                        k = H() | 0;\n                                                        n = ld(n | 0, m | 0, 1, 0) | 0;\n                                                        m = H() | 0;\n                                                        i = e + (l << 3) | 0;\n                                                        c = i;\n                                                        j = b[c >> 2] | 0;\n                                                        c = b[c + 4 >> 2] | 0;\n                                                    }while (!((j | 0) == 0 & (c | 0) == 0));\n                                                }\n                                                if (!((o | 0) == 0 & (p | 0) == 0)) {\n                                                    Pb(o, p, I) | 0;\n                                                    if (Gc(a, J, I) | 0) {\n                                                        n = ld(g | 0, h | 0, 1, 0) | 0;\n                                                        h = H() | 0;\n                                                        m = i;\n                                                        b[m >> 2] = o;\n                                                        b[m + 4 >> 2] = p;\n                                                        g = z + (g << 3) | 0;\n                                                        b[g >> 2] = o;\n                                                        b[g + 4 >> 2] = p;\n                                                        g = n;\n                                                    }\n                                                    i = g;\n                                                    j = h;\n                                                } else {\n                                                    i = g;\n                                                    j = h;\n                                                }\n                                            } else {\n                                                i = g;\n                                                j = h;\n                                            }\n                                        }while (0);\n                                        q = q + 1 | 0;\n                                        if (q >>> 0 >= 7) {\n                                            break;\n                                        } else {\n                                            g = i;\n                                            h = j;\n                                        }\n                                    }\n                                    r = ld(r | 0, s | 0, 1, 0) | 0;\n                                    s = H() | 0;\n                                    t = ld(t | 0, u | 0, 1, 0) | 0;\n                                    u = H() | 0;\n                                    h = F;\n                                    g = b[h >> 2] | 0;\n                                    h = b[h + 4 >> 2] | 0;\n                                    if (!((u | 0) < (h | 0) | (u | 0) == (h | 0) & t >>> 0 < g >>> 0)) {\n                                        break;\n                                    } else {\n                                        g = i;\n                                        h = j;\n                                    }\n                                }\n                                if ((h | 0) > 0 | (h | 0) == 0 & g >>> 0 > 0) {\n                                    g = 0;\n                                    h = 0;\n                                    do {\n                                        u = y + (g << 3) | 0;\n                                        b[u >> 2] = 0;\n                                        b[u + 4 >> 2] = 0;\n                                        g = ld(g | 0, h | 0, 1, 0) | 0;\n                                        h = H() | 0;\n                                        u = F;\n                                        t = b[u + 4 >> 2] | 0;\n                                    }while ((h | 0) < (t | 0) | ((h | 0) == (t | 0) ? g >>> 0 < (b[u >> 2] | 0) >>> 0 : 0));\n                                }\n                                u = F;\n                                b[u >> 2] = i;\n                                b[u + 4 >> 2] = j;\n                                if ((j | 0) > 0 | (j | 0) == 0 & i >>> 0 > 0) {\n                                    q = f;\n                                    r = x;\n                                    s = C;\n                                    t = w;\n                                    u = z;\n                                    f = v;\n                                    x = d;\n                                    w = A;\n                                    v = q;\n                                    d = r;\n                                    C = B;\n                                    B = s;\n                                    A = t;\n                                    z = y;\n                                    y = u;\n                                } else {\n                                    break c;\n                                }\n                            }\n                            jd(A);\n                            jd(B);\n                            jd(J);\n                            d = 1;\n                            break a;\n                        } else {\n                            d = i;\n                        }\n                    }while (0);\n                    jd(J);\n                    jd(f);\n                    jd(d);\n                    d = 0;\n                } else {\n                    jd(f);\n                    jd(i);\n                    jd(J);\n                }\n            }while (0);\n            J = d;\n            T = K;\n            return J | 0;\n        }\n        function ka(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;\n            l = T;\n            T = T + 176 | 0;\n            j = l;\n            if ((c | 0) < 1) {\n                _c(d, 0, 0);\n                k = 0;\n                T = l;\n                return k | 0;\n            }\n            i = a;\n            i = vd(b[i >> 2] | 0, b[i + 4 >> 2] | 0, 52) | 0;\n            H() | 0;\n            _c(d, (c | 0) > 6 ? c : 6, i & 15);\n            i = 0;\n            while(1){\n                e = a + (i << 3) | 0;\n                e = Qb(b[e >> 2] | 0, b[e + 4 >> 2] | 0, j) | 0;\n                if (e | 0) {\n                    break;\n                }\n                e = b[j >> 2] | 0;\n                if ((e | 0) > 0) {\n                    h = 0;\n                    do {\n                        g = j + 8 + (h << 4) | 0;\n                        h = h + 1 | 0;\n                        e = j + 8 + (((h | 0) % (e | 0) | 0) << 4) | 0;\n                        f = dd(d, e, g) | 0;\n                        if (!f) {\n                            cd(d, g, e) | 0;\n                        } else {\n                            bd(d, f) | 0;\n                        }\n                        e = b[j >> 2] | 0;\n                    }while ((h | 0) < (e | 0));\n                }\n                i = i + 1 | 0;\n                if ((i | 0) >= (c | 0)) {\n                    e = 0;\n                    k = 13;\n                    break;\n                }\n            }\n            if ((k | 0) == 13) {\n                T = l;\n                return e | 0;\n            }\n            $c(d);\n            k = e;\n            T = l;\n            return k | 0;\n        }\n        function la(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0;\n            g = T;\n            T = T + 32 | 0;\n            e = g;\n            f = g + 16 | 0;\n            a = ka(a, c, f) | 0;\n            if (a | 0) {\n                d = a;\n                T = g;\n                return d | 0;\n            }\n            b[d >> 2] = 0;\n            b[d + 4 >> 2] = 0;\n            b[d + 8 >> 2] = 0;\n            a = ad(f) | 0;\n            if (a | 0) {\n                do {\n                    c = qc(d) | 0;\n                    do {\n                        rc(c, a) | 0;\n                        h = a + 16 | 0;\n                        b[e >> 2] = b[h >> 2];\n                        b[e + 4 >> 2] = b[h + 4 >> 2];\n                        b[e + 8 >> 2] = b[h + 8 >> 2];\n                        b[e + 12 >> 2] = b[h + 12 >> 2];\n                        bd(f, a) | 0;\n                        a = ed(f, e) | 0;\n                    }while ((a | 0) != 0);\n                    a = ad(f) | 0;\n                }while ((a | 0) != 0);\n            }\n            $c(f);\n            a = tc(d) | 0;\n            if (!a) {\n                h = 0;\n                T = g;\n                return h | 0;\n            }\n            sc(d);\n            h = a;\n            T = g;\n            return h | 0;\n        }\n        function ma(a) {\n            a = a | 0;\n            if (a >>> 0 > 121) {\n                a = 0;\n                return a | 0;\n            }\n            a = b[7696 + (a * 28 | 0) + 16 >> 2] | 0;\n            return a | 0;\n        }\n        function na(a) {\n            a = a | 0;\n            return (a | 0) == 4 | (a | 0) == 117 | 0;\n        }\n        function oa(a) {\n            a = a | 0;\n            return b[11120 + ((b[a >> 2] | 0) * 216 | 0) + ((b[a + 4 >> 2] | 0) * 72 | 0) + ((b[a + 8 >> 2] | 0) * 24 | 0) + (b[a + 12 >> 2] << 3) >> 2] | 0;\n        }\n        function pa(a) {\n            a = a | 0;\n            return b[11120 + ((b[a >> 2] | 0) * 216 | 0) + ((b[a + 4 >> 2] | 0) * 72 | 0) + ((b[a + 8 >> 2] | 0) * 24 | 0) + (b[a + 12 >> 2] << 3) + 4 >> 2] | 0;\n        }\n        function qa(a, c) {\n            a = a | 0;\n            c = c | 0;\n            a = 7696 + (a * 28 | 0) | 0;\n            b[c >> 2] = b[a >> 2];\n            b[c + 4 >> 2] = b[a + 4 >> 2];\n            b[c + 8 >> 2] = b[a + 8 >> 2];\n            b[c + 12 >> 2] = b[a + 12 >> 2];\n            return;\n        }\n        function ra(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0;\n            if (c >>> 0 > 20) {\n                c = -1;\n                return c | 0;\n            }\n            do {\n                if ((b[11120 + (c * 216 | 0) >> 2] | 0) != (a | 0)) {\n                    if ((b[11120 + (c * 216 | 0) + 8 >> 2] | 0) != (a | 0)) {\n                        if ((b[11120 + (c * 216 | 0) + 16 >> 2] | 0) != (a | 0)) {\n                            if ((b[11120 + (c * 216 | 0) + 24 >> 2] | 0) != (a | 0)) {\n                                if ((b[11120 + (c * 216 | 0) + 32 >> 2] | 0) != (a | 0)) {\n                                    if ((b[11120 + (c * 216 | 0) + 40 >> 2] | 0) != (a | 0)) {\n                                        if ((b[11120 + (c * 216 | 0) + 48 >> 2] | 0) != (a | 0)) {\n                                            if ((b[11120 + (c * 216 | 0) + 56 >> 2] | 0) != (a | 0)) {\n                                                if ((b[11120 + (c * 216 | 0) + 64 >> 2] | 0) != (a | 0)) {\n                                                    if ((b[11120 + (c * 216 | 0) + 72 >> 2] | 0) != (a | 0)) {\n                                                        if ((b[11120 + (c * 216 | 0) + 80 >> 2] | 0) != (a | 0)) {\n                                                            if ((b[11120 + (c * 216 | 0) + 88 >> 2] | 0) != (a | 0)) {\n                                                                if ((b[11120 + (c * 216 | 0) + 96 >> 2] | 0) != (a | 0)) {\n                                                                    if ((b[11120 + (c * 216 | 0) + 104 >> 2] | 0) != (a | 0)) {\n                                                                        if ((b[11120 + (c * 216 | 0) + 112 >> 2] | 0) != (a | 0)) {\n                                                                            if ((b[11120 + (c * 216 | 0) + 120 >> 2] | 0) != (a | 0)) {\n                                                                                if ((b[11120 + (c * 216 | 0) + 128 >> 2] | 0) != (a | 0)) {\n                                                                                    if ((b[11120 + (c * 216 | 0) + 136 >> 2] | 0) == (a | 0)) {\n                                                                                        a = 2;\n                                                                                        d = 1;\n                                                                                        e = 2;\n                                                                                    } else {\n                                                                                        if ((b[11120 + (c * 216 | 0) + 144 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 0;\n                                                                                            d = 2;\n                                                                                            e = 0;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 152 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 0;\n                                                                                            d = 2;\n                                                                                            e = 1;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 160 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 0;\n                                                                                            d = 2;\n                                                                                            e = 2;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 168 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 1;\n                                                                                            d = 2;\n                                                                                            e = 0;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 176 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 1;\n                                                                                            d = 2;\n                                                                                            e = 1;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 184 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 1;\n                                                                                            d = 2;\n                                                                                            e = 2;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 192 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 2;\n                                                                                            d = 2;\n                                                                                            e = 0;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 200 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 2;\n                                                                                            d = 2;\n                                                                                            e = 1;\n                                                                                            break;\n                                                                                        }\n                                                                                        if ((b[11120 + (c * 216 | 0) + 208 >> 2] | 0) == (a | 0)) {\n                                                                                            a = 2;\n                                                                                            d = 2;\n                                                                                            e = 2;\n                                                                                            break;\n                                                                                        } else {\n                                                                                            a = -1;\n                                                                                        }\n                                                                                        return a | 0;\n                                                                                    }\n                                                                                } else {\n                                                                                    a = 2;\n                                                                                    d = 1;\n                                                                                    e = 1;\n                                                                                }\n                                                                            } else {\n                                                                                a = 2;\n                                                                                d = 1;\n                                                                                e = 0;\n                                                                            }\n                                                                        } else {\n                                                                            a = 1;\n                                                                            d = 1;\n                                                                            e = 2;\n                                                                        }\n                                                                    } else {\n                                                                        a = 1;\n                                                                        d = 1;\n                                                                        e = 1;\n                                                                    }\n                                                                } else {\n                                                                    a = 1;\n                                                                    d = 1;\n                                                                    e = 0;\n                                                                }\n                                                            } else {\n                                                                a = 0;\n                                                                d = 1;\n                                                                e = 2;\n                                                            }\n                                                        } else {\n                                                            a = 0;\n                                                            d = 1;\n                                                            e = 1;\n                                                        }\n                                                    } else {\n                                                        a = 0;\n                                                        d = 1;\n                                                        e = 0;\n                                                    }\n                                                } else {\n                                                    a = 2;\n                                                    d = 0;\n                                                    e = 2;\n                                                }\n                                            } else {\n                                                a = 2;\n                                                d = 0;\n                                                e = 1;\n                                            }\n                                        } else {\n                                            a = 2;\n                                            d = 0;\n                                            e = 0;\n                                        }\n                                    } else {\n                                        a = 1;\n                                        d = 0;\n                                        e = 2;\n                                    }\n                                } else {\n                                    a = 1;\n                                    d = 0;\n                                    e = 1;\n                                }\n                            } else {\n                                a = 1;\n                                d = 0;\n                                e = 0;\n                            }\n                        } else {\n                            a = 0;\n                            d = 0;\n                            e = 2;\n                        }\n                    } else {\n                        a = 0;\n                        d = 0;\n                        e = 1;\n                    }\n                } else {\n                    a = 0;\n                    d = 0;\n                    e = 0;\n                }\n            }while (0);\n            c = b[11120 + (c * 216 | 0) + (d * 72 | 0) + (a * 24 | 0) + (e << 3) + 4 >> 2] | 0;\n            return c | 0;\n        }\n        function sa(a, c) {\n            a = a | 0;\n            c = c | 0;\n            if ((b[7696 + (a * 28 | 0) + 20 >> 2] | 0) == (c | 0)) {\n                c = 1;\n                return c | 0;\n            }\n            c = (b[7696 + (a * 28 | 0) + 24 >> 2] | 0) == (c | 0);\n            return c | 0;\n        }\n        function ta(a, c) {\n            a = a | 0;\n            c = c | 0;\n            return b[848 + (a * 28 | 0) + (c << 2) >> 2] | 0;\n        }\n        function ua(a, c) {\n            a = a | 0;\n            c = c | 0;\n            if ((b[848 + (a * 28 | 0) >> 2] | 0) == (c | 0)) {\n                c = 0;\n                return c | 0;\n            }\n            if ((b[848 + (a * 28 | 0) + 4 >> 2] | 0) == (c | 0)) {\n                c = 1;\n                return c | 0;\n            }\n            if ((b[848 + (a * 28 | 0) + 8 >> 2] | 0) == (c | 0)) {\n                c = 2;\n                return c | 0;\n            }\n            if ((b[848 + (a * 28 | 0) + 12 >> 2] | 0) == (c | 0)) {\n                c = 3;\n                return c | 0;\n            }\n            if ((b[848 + (a * 28 | 0) + 16 >> 2] | 0) == (c | 0)) {\n                c = 4;\n                return c | 0;\n            }\n            if ((b[848 + (a * 28 | 0) + 20 >> 2] | 0) == (c | 0)) {\n                c = 5;\n                return c | 0;\n            } else {\n                return ((b[848 + (a * 28 | 0) + 24 >> 2] | 0) == (c | 0) ? 6 : 7) | 0;\n            }\n            return 0;\n        }\n        function va() {\n            return 122;\n        }\n        function wa(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0;\n            c = 0;\n            do {\n                wd(c | 0, 0, 45) | 0;\n                e = H() | 0 | 134225919;\n                d = a + (c << 3) | 0;\n                b[d >> 2] = -1;\n                b[d + 4 >> 2] = e;\n                c = c + 1 | 0;\n            }while ((c | 0) != 122);\n            return 0;\n        }\n        function xa(a) {\n            a = a | 0;\n            return +e[a + 16 >> 3] < +e[a + 24 >> 3] | 0;\n        }\n        function ya(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0;\n            c = +e[b >> 3];\n            if (!(c >= +e[a + 8 >> 3])) {\n                b = 0;\n                return b | 0;\n            }\n            if (!(c <= +e[a >> 3])) {\n                b = 0;\n                return b | 0;\n            }\n            d = +e[a + 16 >> 3];\n            c = +e[a + 24 >> 3];\n            f = +e[b + 8 >> 3];\n            b = f >= c;\n            a = f <= d & 1;\n            if (d < c) {\n                if (b) {\n                    a = 1;\n                }\n            } else if (!b) {\n                a = 0;\n            }\n            b = (a | 0) != 0;\n            return b | 0;\n        }\n        function za(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0, l = 0, m = 0, n = 0, o = 0, r = 0, s = 0, t = 0, u = 0.0, v = 0.0;\n            t = T;\n            T = T + 288 | 0;\n            n = t + 264 | 0;\n            o = t + 96 | 0;\n            m = t;\n            k = m;\n            l = k + 96 | 0;\n            do {\n                b[k >> 2] = 0;\n                k = k + 4 | 0;\n            }while ((k | 0) < (l | 0));\n            c = Ub(c, m) | 0;\n            if (c | 0) {\n                s = c;\n                T = t;\n                return s | 0;\n            }\n            l = m;\n            m = b[l >> 2] | 0;\n            l = b[l + 4 >> 2] | 0;\n            Pb(m, l, n) | 0;\n            Qb(m, l, o) | 0;\n            j = +ac(n, o + 8 | 0);\n            e[n >> 3] = +e[a >> 3];\n            l = n + 8 | 0;\n            e[l >> 3] = +e[a + 16 >> 3];\n            e[o >> 3] = +e[a + 8 >> 3];\n            m = o + 8 | 0;\n            e[m >> 3] = +e[a + 24 >> 3];\n            h = +ac(n, o);\n            v = +e[l >> 3] - +e[m >> 3];\n            i = +q(+v);\n            u = +e[n >> 3] - +e[o >> 3];\n            g = +q(+u);\n            if (!(v == 0.0 | u == 0.0) ? (v = +xd(+i, +g), v = +A(+(h * h / +yd(+(v / +yd(+i, +g)), 3.0) / (j * (j * 2.59807621135) * .8))), e[f >> 3] = v, r = ~~v >>> 0, s = +q(v) >= 1.0 ? v > 0.0 ? ~~+C(+p(v / 4294967296.0), 4294967295.0) >>> 0 : ~~+A((v - +(~~v >>> 0)) / 4294967296.0) >>> 0 : 0, !((b[f + 4 >> 2] & 2146435072 | 0) == 2146435072)) : 0) {\n                o = (r | 0) == 0 & (s | 0) == 0;\n                c = d;\n                b[c >> 2] = o ? 1 : r;\n                b[c + 4 >> 2] = o ? 0 : s;\n                c = 0;\n            } else {\n                c = 1;\n            }\n            s = c;\n            T = t;\n            return s | 0;\n        }\n        function Aa(a, c, d, g) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            g = g | 0;\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0.0;\n            m = T;\n            T = T + 288 | 0;\n            j = m + 264 | 0;\n            k = m + 96 | 0;\n            l = m;\n            h = l;\n            i = h + 96 | 0;\n            do {\n                b[h >> 2] = 0;\n                h = h + 4 | 0;\n            }while ((h | 0) < (i | 0));\n            d = Ub(d, l) | 0;\n            if (d | 0) {\n                g = d;\n                T = m;\n                return g | 0;\n            }\n            d = l;\n            h = b[d >> 2] | 0;\n            d = b[d + 4 >> 2] | 0;\n            Pb(h, d, j) | 0;\n            Qb(h, d, k) | 0;\n            n = +ac(j, k + 8 | 0);\n            n = +A(+(+ac(a, c) / (n * 2.0)));\n            e[f >> 3] = n;\n            d = ~~n >>> 0;\n            h = +q(n) >= 1.0 ? n > 0.0 ? ~~+C(+p(n / 4294967296.0), 4294967295.0) >>> 0 : ~~+A((n - +(~~n >>> 0)) / 4294967296.0) >>> 0 : 0;\n            if ((b[f + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n                g = 1;\n                T = m;\n                return g | 0;\n            }\n            l = (d | 0) == 0 & (h | 0) == 0;\n            b[g >> 2] = l ? 1 : d;\n            b[g + 4 >> 2] = l ? 0 : h;\n            g = 0;\n            T = m;\n            return g | 0;\n        }\n        function Ba(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            b[a >> 2] = c;\n            b[a + 4 >> 2] = d;\n            b[a + 8 >> 2] = e;\n            return;\n        }\n        function Ca(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, f = 0, g = 0, h = 0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0, n = 0, o = 0.0;\n            n = c + 8 | 0;\n            b[n >> 2] = 0;\n            k = +e[a >> 3];\n            i = +q(+k);\n            l = +e[a + 8 >> 3];\n            j = +q(+l) / .8660254037844386;\n            i = i + j * .5;\n            d = ~~i;\n            a = ~~j;\n            i = i - +(d | 0);\n            j = j - +(a | 0);\n            do {\n                if (i < .5) {\n                    if (i < .3333333333333333) {\n                        b[c >> 2] = d;\n                        if (j < (i + 1.0) * .5) {\n                            b[c + 4 >> 2] = a;\n                            break;\n                        } else {\n                            a = a + 1 | 0;\n                            b[c + 4 >> 2] = a;\n                            break;\n                        }\n                    } else {\n                        o = 1.0 - i;\n                        a = (!(j < o) & 1) + a | 0;\n                        b[c + 4 >> 2] = a;\n                        if (o <= j & j < i * 2.0) {\n                            d = d + 1 | 0;\n                            b[c >> 2] = d;\n                            break;\n                        } else {\n                            b[c >> 2] = d;\n                            break;\n                        }\n                    }\n                } else {\n                    if (!(i < .6666666666666666)) {\n                        d = d + 1 | 0;\n                        b[c >> 2] = d;\n                        if (j < i * .5) {\n                            b[c + 4 >> 2] = a;\n                            break;\n                        } else {\n                            a = a + 1 | 0;\n                            b[c + 4 >> 2] = a;\n                            break;\n                        }\n                    }\n                    if (j < 1.0 - i) {\n                        b[c + 4 >> 2] = a;\n                        if (i * 2.0 + -1.0 < j) {\n                            b[c >> 2] = d;\n                            break;\n                        }\n                    } else {\n                        a = a + 1 | 0;\n                        b[c + 4 >> 2] = a;\n                    }\n                    d = d + 1 | 0;\n                    b[c >> 2] = d;\n                }\n            }while (0);\n            do {\n                if (k < 0.0) {\n                    if (!(a & 1)) {\n                        m = (a | 0) / 2 | 0;\n                        m = md(d | 0, ((d | 0) < 0) << 31 >> 31 | 0, m | 0, ((m | 0) < 0) << 31 >> 31 | 0) | 0;\n                        d = ~~(+(d | 0) - (+(m >>> 0) + 4294967296.0 * +(H() | 0)) * 2.0);\n                        b[c >> 2] = d;\n                        break;\n                    } else {\n                        m = (a + 1 | 0) / 2 | 0;\n                        m = md(d | 0, ((d | 0) < 0) << 31 >> 31 | 0, m | 0, ((m | 0) < 0) << 31 >> 31 | 0) | 0;\n                        d = ~~(+(d | 0) - ((+(m >>> 0) + 4294967296.0 * +(H() | 0)) * 2.0 + 1.0));\n                        b[c >> 2] = d;\n                        break;\n                    }\n                }\n            }while (0);\n            m = c + 4 | 0;\n            if (l < 0.0) {\n                d = d - ((a << 1 | 1 | 0) / 2 | 0) | 0;\n                b[c >> 2] = d;\n                a = 0 - a | 0;\n                b[m >> 2] = a;\n            }\n            f = a - d | 0;\n            if ((d | 0) < 0) {\n                g = 0 - d | 0;\n                b[m >> 2] = f;\n                b[n >> 2] = g;\n                b[c >> 2] = 0;\n                a = f;\n                d = 0;\n            } else {\n                g = 0;\n            }\n            if ((a | 0) < 0) {\n                d = d - a | 0;\n                b[c >> 2] = d;\n                g = g - a | 0;\n                b[n >> 2] = g;\n                b[m >> 2] = 0;\n                a = 0;\n            }\n            h = d - g | 0;\n            f = a - g | 0;\n            if ((g | 0) < 0) {\n                b[c >> 2] = h;\n                b[m >> 2] = f;\n                b[n >> 2] = 0;\n                a = f;\n                d = h;\n                g = 0;\n            }\n            f = (a | 0) < (d | 0) ? a : d;\n            f = (g | 0) < (f | 0) ? g : f;\n            if ((f | 0) <= 0) {\n                return;\n            }\n            b[c >> 2] = d - f;\n            b[m >> 2] = a - f;\n            b[n >> 2] = g - f;\n            return;\n        }\n        function Da(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\n            c = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            d = b[h >> 2] | 0;\n            if ((c | 0) < 0) {\n                d = d - c | 0;\n                b[h >> 2] = d;\n                g = a + 8 | 0;\n                b[g >> 2] = (b[g >> 2] | 0) - c;\n                b[a >> 2] = 0;\n                c = 0;\n            }\n            if ((d | 0) < 0) {\n                c = c - d | 0;\n                b[a >> 2] = c;\n                g = a + 8 | 0;\n                f = (b[g >> 2] | 0) - d | 0;\n                b[g >> 2] = f;\n                b[h >> 2] = 0;\n                d = 0;\n            } else {\n                f = a + 8 | 0;\n                g = f;\n                f = b[f >> 2] | 0;\n            }\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[a >> 2] = c;\n                d = d - f | 0;\n                b[h >> 2] = d;\n                b[g >> 2] = 0;\n                f = 0;\n            }\n            e = (d | 0) < (c | 0) ? d : c;\n            e = (f | 0) < (e | 0) ? f : e;\n            if ((e | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = c - e;\n            b[h >> 2] = d - e;\n            b[g >> 2] = f - e;\n            return;\n        }\n        function Ea(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0.0, f = 0;\n            f = b[a + 8 >> 2] | 0;\n            d = +((b[a + 4 >> 2] | 0) - f | 0);\n            e[c >> 3] = +((b[a >> 2] | 0) - f | 0) - d * .5;\n            e[c + 8 >> 3] = d * .8660254037844386;\n            return;\n        }\n        function Fa(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            b[d >> 2] = (b[c >> 2] | 0) + (b[a >> 2] | 0);\n            b[d + 4 >> 2] = (b[c + 4 >> 2] | 0) + (b[a + 4 >> 2] | 0);\n            b[d + 8 >> 2] = (b[c + 8 >> 2] | 0) + (b[a + 8 >> 2] | 0);\n            return;\n        }\n        function Ga(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            b[d >> 2] = (b[a >> 2] | 0) - (b[c >> 2] | 0);\n            b[d + 4 >> 2] = (b[a + 4 >> 2] | 0) - (b[c + 4 >> 2] | 0);\n            b[d + 8 >> 2] = (b[a + 8 >> 2] | 0) - (b[c + 8 >> 2] | 0);\n            return;\n        }\n        function Ha(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0;\n            d = B(b[a >> 2] | 0, c) | 0;\n            b[a >> 2] = d;\n            d = a + 4 | 0;\n            e = B(b[d >> 2] | 0, c) | 0;\n            b[d >> 2] = e;\n            a = a + 8 | 0;\n            c = B(b[a >> 2] | 0, c) | 0;\n            b[a >> 2] = c;\n            return;\n        }\n        function Ia(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = b[a >> 2] | 0;\n            i = (h | 0) < 0;\n            e = (b[a + 4 >> 2] | 0) - (i ? h : 0) | 0;\n            g = (e | 0) < 0;\n            f = (g ? 0 - e | 0 : 0) + ((b[a + 8 >> 2] | 0) - (i ? h : 0)) | 0;\n            d = (f | 0) < 0;\n            a = d ? 0 : f;\n            c = (g ? 0 : e) - (d ? f : 0) | 0;\n            f = (i ? 0 : h) - (g ? e : 0) - (d ? f : 0) | 0;\n            d = (c | 0) < (f | 0) ? c : f;\n            d = (a | 0) < (d | 0) ? a : d;\n            e = (d | 0) > 0;\n            a = a - (e ? d : 0) | 0;\n            c = c - (e ? d : 0) | 0;\n            a: do {\n                switch(f - (e ? d : 0) | 0){\n                    case 0:\n                        switch(c | 0){\n                            case 0:\n                                {\n                                    i = (a | 0) == 0 ? 0 : (a | 0) == 1 ? 1 : 7;\n                                    return i | 0;\n                                }\n                            case 1:\n                                {\n                                    i = (a | 0) == 0 ? 2 : (a | 0) == 1 ? 3 : 7;\n                                    return i | 0;\n                                }\n                            default:\n                                break a;\n                        }\n                    case 1:\n                        switch(c | 0){\n                            case 0:\n                                {\n                                    i = (a | 0) == 0 ? 4 : (a | 0) == 1 ? 5 : 7;\n                                    return i | 0;\n                                }\n                            case 1:\n                                {\n                                    if (!a) {\n                                        a = 6;\n                                    } else {\n                                        break a;\n                                    }\n                                    return a | 0;\n                                }\n                            default:\n                                break a;\n                        }\n                    default:\n                }\n            }while (0);\n            i = 7;\n            return i | 0;\n        }\n        function Ja(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = a + 8 | 0;\n            f = b[h >> 2] | 0;\n            g = (b[a >> 2] | 0) - f | 0;\n            i = a + 4 | 0;\n            f = (b[i >> 2] | 0) - f | 0;\n            do {\n                if (g >>> 0 > 715827881 | f >>> 0 > 715827881) {\n                    d = (g | 0) > 0;\n                    if (d) {\n                        if ((2147483647 - g | 0) < (g | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                        if ((2147483647 - (g << 1) | 0) < (g | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else {\n                        if ((-2147483648 - g | 0) > (g | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                        if ((-2147483648 - (g << 1) | 0) > (g | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    }\n                    c = g * 3 | 0;\n                    if ((f | 0) > 0) {\n                        if ((2147483647 - f | 0) < (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else if ((-2147483648 - f | 0) > (f | 0)) {\n                        i = 1;\n                        return i | 0;\n                    }\n                    e = f << 1;\n                    if ((g | 0) > -1) {\n                        if ((c | -2147483648 | 0) >= (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else if ((c ^ -2147483648 | 0) < (f | 0)) {\n                        i = 1;\n                        return i | 0;\n                    }\n                    if (d) {\n                        if ((2147483647 - g | 0) < (e | 0)) {\n                            c = 1;\n                        } else {\n                            d = e;\n                            break;\n                        }\n                        return c | 0;\n                    } else {\n                        if ((-2147483648 - g | 0) > (e | 0)) {\n                            c = 1;\n                        } else {\n                            d = e;\n                            break;\n                        }\n                        return c | 0;\n                    }\n                } else {\n                    d = f << 1;\n                    c = g * 3 | 0;\n                }\n            }while (0);\n            e = hd(+(c - f | 0) / 7.0) | 0;\n            b[a >> 2] = e;\n            f = hd(+(d + g | 0) / 7.0) | 0;\n            b[i >> 2] = f;\n            b[h >> 2] = 0;\n            d = (f | 0) < (e | 0);\n            c = d ? e : f;\n            d = d ? f : e;\n            do {\n                if ((d | 0) < 0) {\n                    if ((c | 0) > 0) {\n                        if ((c | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - c | 0) >= (d | 0))) {\n                            break;\n                        }\n                        I(23313, 22444, 355, 22455);\n                    }\n                    if ((d | 0) == -2147483648 | (-2147483648 - c | 0) > (d | 0)) {\n                        I(23313, 22444, 355, 22455);\n                    }\n                    if ((c | 0) > -1) {\n                        if ((c | -2147483648 | 0) < (d | 0)) {\n                            break;\n                        }\n                        I(23313, 22444, 355, 22455);\n                    } else {\n                        if ((c ^ -2147483648 | 0) >= (d | 0)) {\n                            break;\n                        }\n                        I(23313, 22444, 355, 22455);\n                    }\n                }\n            }while (0);\n            c = f - e | 0;\n            if ((e | 0) < 0) {\n                d = 0 - e | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = d;\n                b[a >> 2] = 0;\n                e = 0;\n            } else {\n                c = f;\n                d = 0;\n            }\n            if ((c | 0) < 0) {\n                e = e - c | 0;\n                b[a >> 2] = e;\n                d = d - c | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = 0;\n                c = 0;\n            }\n            g = e - d | 0;\n            f = c - d | 0;\n            if ((d | 0) < 0) {\n                b[a >> 2] = g;\n                b[i >> 2] = f;\n                b[h >> 2] = 0;\n                c = f;\n                f = g;\n                d = 0;\n            } else {\n                f = e;\n            }\n            e = (c | 0) < (f | 0) ? c : f;\n            e = (d | 0) < (e | 0) ? d : e;\n            if ((e | 0) <= 0) {\n                i = 0;\n                return i | 0;\n            }\n            b[a >> 2] = f - e;\n            b[i >> 2] = c - e;\n            b[h >> 2] = d - e;\n            i = 0;\n            return i | 0;\n        }\n        function Ka(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = a + 8 | 0;\n            f = b[h >> 2] | 0;\n            g = (b[a >> 2] | 0) - f | 0;\n            i = a + 4 | 0;\n            f = (b[i >> 2] | 0) - f | 0;\n            do {\n                if (g >>> 0 > 715827881 | f >>> 0 > 715827881) {\n                    d = (g | 0) > 0;\n                    if (d) {\n                        if ((2147483647 - g | 0) < (g | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else if ((-2147483648 - g | 0) > (g | 0)) {\n                        i = 1;\n                        return i | 0;\n                    }\n                    c = g << 1;\n                    if ((f | 0) > 0) {\n                        if ((2147483647 - f | 0) < (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                        if ((2147483647 - (f << 1) | 0) < (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else {\n                        if ((-2147483648 - f | 0) > (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                        if ((-2147483648 - (f << 1) | 0) > (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    }\n                    e = f * 3 | 0;\n                    if (d) {\n                        if ((2147483647 - c | 0) < (f | 0)) {\n                            i = 1;\n                            return i | 0;\n                        }\n                    } else if ((-2147483648 - c | 0) > (f | 0)) {\n                        i = 1;\n                        return i | 0;\n                    }\n                    if ((f | 0) > -1) {\n                        if ((e | -2147483648 | 0) < (g | 0)) {\n                            d = e;\n                            break;\n                        } else {\n                            c = 1;\n                        }\n                        return c | 0;\n                    } else {\n                        if ((e ^ -2147483648 | 0) < (g | 0)) {\n                            c = 1;\n                        } else {\n                            d = e;\n                            break;\n                        }\n                        return c | 0;\n                    }\n                } else {\n                    d = f * 3 | 0;\n                    c = g << 1;\n                }\n            }while (0);\n            e = hd(+(c + f | 0) / 7.0) | 0;\n            b[a >> 2] = e;\n            f = hd(+(d - g | 0) / 7.0) | 0;\n            b[i >> 2] = f;\n            b[h >> 2] = 0;\n            d = (f | 0) < (e | 0);\n            c = d ? e : f;\n            d = d ? f : e;\n            do {\n                if ((d | 0) < 0) {\n                    if ((c | 0) > 0) {\n                        if ((c | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - c | 0) >= (d | 0))) {\n                            break;\n                        }\n                        I(23313, 22444, 404, 22469);\n                    }\n                    if ((d | 0) == -2147483648 | (-2147483648 - c | 0) > (d | 0)) {\n                        I(23313, 22444, 404, 22469);\n                    }\n                    if ((c | 0) > -1) {\n                        if ((c | -2147483648 | 0) < (d | 0)) {\n                            break;\n                        }\n                        I(23313, 22444, 404, 22469);\n                    } else {\n                        if ((c ^ -2147483648 | 0) >= (d | 0)) {\n                            break;\n                        }\n                        I(23313, 22444, 404, 22469);\n                    }\n                }\n            }while (0);\n            c = f - e | 0;\n            if ((e | 0) < 0) {\n                d = 0 - e | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = d;\n                b[a >> 2] = 0;\n                e = 0;\n            } else {\n                c = f;\n                d = 0;\n            }\n            if ((c | 0) < 0) {\n                e = e - c | 0;\n                b[a >> 2] = e;\n                d = d - c | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = 0;\n                c = 0;\n            }\n            g = e - d | 0;\n            f = c - d | 0;\n            if ((d | 0) < 0) {\n                b[a >> 2] = g;\n                b[i >> 2] = f;\n                b[h >> 2] = 0;\n                c = f;\n                f = g;\n                d = 0;\n            } else {\n                f = e;\n            }\n            e = (c | 0) < (f | 0) ? c : f;\n            e = (d | 0) < (e | 0) ? d : e;\n            if ((e | 0) <= 0) {\n                i = 0;\n                return i | 0;\n            }\n            b[a >> 2] = f - e;\n            b[i >> 2] = c - e;\n            b[h >> 2] = d - e;\n            i = 0;\n            return i | 0;\n        }\n        function La(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = a + 8 | 0;\n            d = b[h >> 2] | 0;\n            c = (b[a >> 2] | 0) - d | 0;\n            i = a + 4 | 0;\n            d = (b[i >> 2] | 0) - d | 0;\n            e = hd(+((c * 3 | 0) - d | 0) / 7.0) | 0;\n            b[a >> 2] = e;\n            c = hd(+((d << 1) + c | 0) / 7.0) | 0;\n            b[i >> 2] = c;\n            b[h >> 2] = 0;\n            d = c - e | 0;\n            if ((e | 0) < 0) {\n                g = 0 - e | 0;\n                b[i >> 2] = d;\n                b[h >> 2] = g;\n                b[a >> 2] = 0;\n                c = d;\n                e = 0;\n                d = g;\n            } else {\n                d = 0;\n            }\n            if ((c | 0) < 0) {\n                e = e - c | 0;\n                b[a >> 2] = e;\n                d = d - c | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = 0;\n                c = 0;\n            }\n            g = e - d | 0;\n            f = c - d | 0;\n            if ((d | 0) < 0) {\n                b[a >> 2] = g;\n                b[i >> 2] = f;\n                b[h >> 2] = 0;\n                c = f;\n                f = g;\n                d = 0;\n            } else {\n                f = e;\n            }\n            e = (c | 0) < (f | 0) ? c : f;\n            e = (d | 0) < (e | 0) ? d : e;\n            if ((e | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = f - e;\n            b[i >> 2] = c - e;\n            b[h >> 2] = d - e;\n            return;\n        }\n        function Ma(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = a + 8 | 0;\n            d = b[h >> 2] | 0;\n            c = (b[a >> 2] | 0) - d | 0;\n            i = a + 4 | 0;\n            d = (b[i >> 2] | 0) - d | 0;\n            e = hd(+((c << 1) + d | 0) / 7.0) | 0;\n            b[a >> 2] = e;\n            c = hd(+((d * 3 | 0) - c | 0) / 7.0) | 0;\n            b[i >> 2] = c;\n            b[h >> 2] = 0;\n            d = c - e | 0;\n            if ((e | 0) < 0) {\n                g = 0 - e | 0;\n                b[i >> 2] = d;\n                b[h >> 2] = g;\n                b[a >> 2] = 0;\n                c = d;\n                e = 0;\n                d = g;\n            } else {\n                d = 0;\n            }\n            if ((c | 0) < 0) {\n                e = e - c | 0;\n                b[a >> 2] = e;\n                d = d - c | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = 0;\n                c = 0;\n            }\n            g = e - d | 0;\n            f = c - d | 0;\n            if ((d | 0) < 0) {\n                b[a >> 2] = g;\n                b[i >> 2] = f;\n                b[h >> 2] = 0;\n                c = f;\n                f = g;\n                d = 0;\n            } else {\n                f = e;\n            }\n            e = (c | 0) < (f | 0) ? c : f;\n            e = (d | 0) < (e | 0) ? d : e;\n            if ((e | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = f - e;\n            b[i >> 2] = c - e;\n            b[h >> 2] = d - e;\n            return;\n        }\n        function Na(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            c = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            d = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            e = b[i >> 2] | 0;\n            f = d + (c * 3 | 0) | 0;\n            b[a >> 2] = f;\n            d = e + (d * 3 | 0) | 0;\n            b[h >> 2] = d;\n            c = (e * 3 | 0) + c | 0;\n            b[i >> 2] = c;\n            e = d - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = e;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                d = e;\n                e = 0;\n            } else {\n                e = f;\n            }\n            if ((d | 0) < 0) {\n                e = e - d | 0;\n                b[a >> 2] = e;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = e - c | 0;\n            f = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = f;\n                b[i >> 2] = 0;\n                e = g;\n                c = 0;\n            } else {\n                f = d;\n            }\n            d = (f | 0) < (e | 0) ? f : e;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = e - d;\n            b[h >> 2] = f - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Oa(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            f = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            c = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            d = b[i >> 2] | 0;\n            e = (c * 3 | 0) + f | 0;\n            f = d + (f * 3 | 0) | 0;\n            b[a >> 2] = f;\n            b[h >> 2] = e;\n            c = (d * 3 | 0) + c | 0;\n            b[i >> 2] = c;\n            d = e - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                f = 0;\n            } else {\n                d = e;\n            }\n            if ((d | 0) < 0) {\n                f = f - d | 0;\n                b[a >> 2] = f;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = f - c | 0;\n            e = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = e;\n                b[i >> 2] = 0;\n                f = g;\n                c = 0;\n            } else {\n                e = d;\n            }\n            d = (e | 0) < (f | 0) ? e : f;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = f - d;\n            b[h >> 2] = e - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Pa(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            if ((c + -1 | 0) >>> 0 >= 6) {\n                return;\n            }\n            f = (b[15440 + (c * 12 | 0) >> 2] | 0) + (b[a >> 2] | 0) | 0;\n            b[a >> 2] = f;\n            i = a + 4 | 0;\n            e = (b[15440 + (c * 12 | 0) + 4 >> 2] | 0) + (b[i >> 2] | 0) | 0;\n            b[i >> 2] = e;\n            h = a + 8 | 0;\n            c = (b[15440 + (c * 12 | 0) + 8 >> 2] | 0) + (b[h >> 2] | 0) | 0;\n            b[h >> 2] = c;\n            d = e - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[i >> 2] = d;\n                b[h >> 2] = c;\n                b[a >> 2] = 0;\n                e = 0;\n            } else {\n                d = e;\n                e = f;\n            }\n            if ((d | 0) < 0) {\n                e = e - d | 0;\n                b[a >> 2] = e;\n                c = c - d | 0;\n                b[h >> 2] = c;\n                b[i >> 2] = 0;\n                d = 0;\n            }\n            g = e - c | 0;\n            f = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[i >> 2] = f;\n                b[h >> 2] = 0;\n                e = g;\n                c = 0;\n            } else {\n                f = d;\n            }\n            d = (f | 0) < (e | 0) ? f : e;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = e - d;\n            b[i >> 2] = f - d;\n            b[h >> 2] = c - d;\n            return;\n        }\n        function Qa(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            f = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            c = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            d = b[i >> 2] | 0;\n            e = c + f | 0;\n            f = d + f | 0;\n            b[a >> 2] = f;\n            b[h >> 2] = e;\n            c = d + c | 0;\n            b[i >> 2] = c;\n            d = e - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                e = 0;\n            } else {\n                d = e;\n                e = f;\n            }\n            if ((d | 0) < 0) {\n                e = e - d | 0;\n                b[a >> 2] = e;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = e - c | 0;\n            f = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = f;\n                b[i >> 2] = 0;\n                e = g;\n                c = 0;\n            } else {\n                f = d;\n            }\n            d = (f | 0) < (e | 0) ? f : e;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = e - d;\n            b[h >> 2] = f - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Ra(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            c = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            e = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            d = b[i >> 2] | 0;\n            f = e + c | 0;\n            b[a >> 2] = f;\n            e = d + e | 0;\n            b[h >> 2] = e;\n            c = d + c | 0;\n            b[i >> 2] = c;\n            d = e - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                e = 0;\n            } else {\n                d = e;\n                e = f;\n            }\n            if ((d | 0) < 0) {\n                e = e - d | 0;\n                b[a >> 2] = e;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = e - c | 0;\n            f = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = f;\n                b[i >> 2] = 0;\n                e = g;\n                c = 0;\n            } else {\n                f = d;\n            }\n            d = (f | 0) < (e | 0) ? f : e;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = e - d;\n            b[h >> 2] = f - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Sa(a) {\n            a = a | 0;\n            switch(a | 0){\n                case 1:\n                    {\n                        a = 5;\n                        break;\n                    }\n                case 5:\n                    {\n                        a = 4;\n                        break;\n                    }\n                case 4:\n                    {\n                        a = 6;\n                        break;\n                    }\n                case 6:\n                    {\n                        a = 2;\n                        break;\n                    }\n                case 2:\n                    {\n                        a = 3;\n                        break;\n                    }\n                case 3:\n                    {\n                        a = 1;\n                        break;\n                    }\n                default:\n            }\n            return a | 0;\n        }\n        function Ta(a) {\n            a = a | 0;\n            switch(a | 0){\n                case 1:\n                    {\n                        a = 3;\n                        break;\n                    }\n                case 3:\n                    {\n                        a = 2;\n                        break;\n                    }\n                case 2:\n                    {\n                        a = 6;\n                        break;\n                    }\n                case 6:\n                    {\n                        a = 4;\n                        break;\n                    }\n                case 4:\n                    {\n                        a = 5;\n                        break;\n                    }\n                case 5:\n                    {\n                        a = 1;\n                        break;\n                    }\n                default:\n            }\n            return a | 0;\n        }\n        function Ua(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            c = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            d = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            e = b[i >> 2] | 0;\n            f = d + (c << 1) | 0;\n            b[a >> 2] = f;\n            d = e + (d << 1) | 0;\n            b[h >> 2] = d;\n            c = (e << 1) + c | 0;\n            b[i >> 2] = c;\n            e = d - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = e;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                d = e;\n                e = 0;\n            } else {\n                e = f;\n            }\n            if ((d | 0) < 0) {\n                e = e - d | 0;\n                b[a >> 2] = e;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = e - c | 0;\n            f = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = f;\n                b[i >> 2] = 0;\n                e = g;\n                c = 0;\n            } else {\n                f = d;\n            }\n            d = (f | 0) < (e | 0) ? f : e;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = e - d;\n            b[h >> 2] = f - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Va(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            f = b[a >> 2] | 0;\n            h = a + 4 | 0;\n            c = b[h >> 2] | 0;\n            i = a + 8 | 0;\n            d = b[i >> 2] | 0;\n            e = (c << 1) + f | 0;\n            f = d + (f << 1) | 0;\n            b[a >> 2] = f;\n            b[h >> 2] = e;\n            c = (d << 1) + c | 0;\n            b[i >> 2] = c;\n            d = e - f | 0;\n            if ((f | 0) < 0) {\n                c = c - f | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = c;\n                b[a >> 2] = 0;\n                f = 0;\n            } else {\n                d = e;\n            }\n            if ((d | 0) < 0) {\n                f = f - d | 0;\n                b[a >> 2] = f;\n                c = c - d | 0;\n                b[i >> 2] = c;\n                b[h >> 2] = 0;\n                d = 0;\n            }\n            g = f - c | 0;\n            e = d - c | 0;\n            if ((c | 0) < 0) {\n                b[a >> 2] = g;\n                b[h >> 2] = e;\n                b[i >> 2] = 0;\n                f = g;\n                c = 0;\n            } else {\n                e = d;\n            }\n            d = (e | 0) < (f | 0) ? e : f;\n            d = (c | 0) < (d | 0) ? c : d;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = f - d;\n            b[h >> 2] = e - d;\n            b[i >> 2] = c - d;\n            return;\n        }\n        function Wa(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            h = (b[a >> 2] | 0) - (b[c >> 2] | 0) | 0;\n            i = (h | 0) < 0;\n            e = (b[a + 4 >> 2] | 0) - (b[c + 4 >> 2] | 0) - (i ? h : 0) | 0;\n            g = (e | 0) < 0;\n            f = (i ? 0 - h | 0 : 0) + (b[a + 8 >> 2] | 0) - (b[c + 8 >> 2] | 0) + (g ? 0 - e | 0 : 0) | 0;\n            a = (f | 0) < 0;\n            c = a ? 0 : f;\n            d = (g ? 0 : e) - (a ? f : 0) | 0;\n            f = (i ? 0 : h) - (g ? e : 0) - (a ? f : 0) | 0;\n            a = (d | 0) < (f | 0) ? d : f;\n            a = (c | 0) < (a | 0) ? c : a;\n            e = (a | 0) > 0;\n            c = c - (e ? a : 0) | 0;\n            d = d - (e ? a : 0) | 0;\n            a = f - (e ? a : 0) | 0;\n            a = (a | 0) > -1 ? a : 0 - a | 0;\n            d = (d | 0) > -1 ? d : 0 - d | 0;\n            c = (c | 0) > -1 ? c : 0 - c | 0;\n            c = (d | 0) > (c | 0) ? d : c;\n            return ((a | 0) > (c | 0) ? a : c) | 0;\n        }\n        function Xa(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0;\n            d = b[a + 8 >> 2] | 0;\n            b[c >> 2] = (b[a >> 2] | 0) - d;\n            b[c + 4 >> 2] = (b[a + 4 >> 2] | 0) - d;\n            return;\n        }\n        function Ya(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            e = b[a >> 2] | 0;\n            b[c >> 2] = e;\n            f = b[a + 4 >> 2] | 0;\n            h = c + 4 | 0;\n            b[h >> 2] = f;\n            i = c + 8 | 0;\n            b[i >> 2] = 0;\n            d = (f | 0) < (e | 0);\n            a = d ? e : f;\n            d = d ? f : e;\n            do {\n                if ((d | 0) < 0) {\n                    if ((a | 0) > 0) {\n                        if ((a | -2147483648 | 0) < (d | 0) & ((d | 0) != -2147483648 & (2147483647 - a | 0) >= (d | 0))) {\n                            break;\n                        } else {\n                            a = 1;\n                        }\n                        return a | 0;\n                    }\n                    if ((d | 0) == -2147483648 | (-2147483648 - a | 0) > (d | 0)) {\n                        c = 1;\n                        return c | 0;\n                    }\n                    if ((a | 0) > -1) {\n                        if ((a | -2147483648 | 0) < (d | 0)) {\n                            break;\n                        } else {\n                            a = 1;\n                        }\n                        return a | 0;\n                    } else {\n                        if ((a ^ -2147483648 | 0) < (d | 0)) {\n                            a = 1;\n                        } else {\n                            break;\n                        }\n                        return a | 0;\n                    }\n                }\n            }while (0);\n            a = f - e | 0;\n            if ((e | 0) < 0) {\n                d = 0 - e | 0;\n                b[h >> 2] = a;\n                b[i >> 2] = d;\n                b[c >> 2] = 0;\n                e = 0;\n            } else {\n                a = f;\n                d = 0;\n            }\n            if ((a | 0) < 0) {\n                e = e - a | 0;\n                b[c >> 2] = e;\n                d = d - a | 0;\n                b[i >> 2] = d;\n                b[h >> 2] = 0;\n                a = 0;\n            }\n            g = e - d | 0;\n            f = a - d | 0;\n            if ((d | 0) < 0) {\n                b[c >> 2] = g;\n                b[h >> 2] = f;\n                b[i >> 2] = 0;\n                a = f;\n                f = g;\n                d = 0;\n            } else {\n                f = e;\n            }\n            e = (a | 0) < (f | 0) ? a : f;\n            e = (d | 0) < (e | 0) ? d : e;\n            if ((e | 0) <= 0) {\n                c = 0;\n                return c | 0;\n            }\n            b[c >> 2] = f - e;\n            b[h >> 2] = a - e;\n            b[i >> 2] = d - e;\n            c = 0;\n            return c | 0;\n        }\n        function Za(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0;\n            c = a + 8 | 0;\n            f = b[c >> 2] | 0;\n            d = f - (b[a >> 2] | 0) | 0;\n            b[a >> 2] = d;\n            e = a + 4 | 0;\n            a = (b[e >> 2] | 0) - f | 0;\n            b[e >> 2] = a;\n            b[c >> 2] = 0 - (a + d);\n            return;\n        }\n        function _a(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            d = b[a >> 2] | 0;\n            c = 0 - d | 0;\n            b[a >> 2] = c;\n            h = a + 8 | 0;\n            b[h >> 2] = 0;\n            i = a + 4 | 0;\n            e = b[i >> 2] | 0;\n            f = e + d | 0;\n            if ((d | 0) > 0) {\n                b[i >> 2] = f;\n                b[h >> 2] = d;\n                b[a >> 2] = 0;\n                c = 0;\n                e = f;\n            } else {\n                d = 0;\n            }\n            if ((e | 0) < 0) {\n                g = c - e | 0;\n                b[a >> 2] = g;\n                d = d - e | 0;\n                b[h >> 2] = d;\n                b[i >> 2] = 0;\n                f = g - d | 0;\n                c = 0 - d | 0;\n                if ((d | 0) < 0) {\n                    b[a >> 2] = f;\n                    b[i >> 2] = c;\n                    b[h >> 2] = 0;\n                    e = c;\n                    d = 0;\n                } else {\n                    e = 0;\n                    f = g;\n                }\n            } else {\n                f = c;\n            }\n            c = (e | 0) < (f | 0) ? e : f;\n            c = (d | 0) < (c | 0) ? d : c;\n            if ((c | 0) <= 0) {\n                return;\n            }\n            b[a >> 2] = f - c;\n            b[i >> 2] = e - c;\n            b[h >> 2] = d - c;\n            return;\n        }\n        function $a(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0;\n            m = T;\n            T = T + 64 | 0;\n            l = m;\n            i = m + 56 | 0;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 134217728 & (0 == 0 & (e & 2013265920 | 0) == 134217728))) {\n                f = 5;\n                T = m;\n                return f | 0;\n            }\n            if ((a | 0) == (d | 0) & (c | 0) == (e | 0)) {\n                b[f >> 2] = 0;\n                f = 0;\n                T = m;\n                return f | 0;\n            }\n            h = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            h = h & 15;\n            k = vd(d | 0, e | 0, 52) | 0;\n            H() | 0;\n            if ((h | 0) != (k & 15 | 0)) {\n                f = 12;\n                T = m;\n                return f | 0;\n            }\n            g = h + -1 | 0;\n            if (h >>> 0 > 1) {\n                vb(a, c, g, l) | 0;\n                vb(d, e, g, i) | 0;\n                k = l;\n                j = b[k >> 2] | 0;\n                k = b[k + 4 >> 2] | 0;\n                a: do {\n                    if ((j | 0) == (b[i >> 2] | 0) ? (k | 0) == (b[i + 4 >> 2] | 0) : 0) {\n                        h = (h ^ 15) * 3 | 0;\n                        g = vd(a | 0, c | 0, h | 0) | 0;\n                        H() | 0;\n                        g = g & 7;\n                        h = vd(d | 0, e | 0, h | 0) | 0;\n                        H() | 0;\n                        h = h & 7;\n                        do {\n                            if (!((g | 0) == 0 | (h | 0) == 0)) {\n                                if ((g | 0) == 7) {\n                                    g = 5;\n                                } else {\n                                    if ((g | 0) == 1 | (h | 0) == 1 ? xb(j, k) | 0 : 0) {\n                                        g = 5;\n                                        break;\n                                    }\n                                    if ((b[15536 + (g << 2) >> 2] | 0) != (h | 0) ? (b[15568 + (g << 2) >> 2] | 0) != (h | 0) : 0) {\n                                        break a;\n                                    }\n                                    b[f >> 2] = 1;\n                                    g = 0;\n                                }\n                            } else {\n                                b[f >> 2] = 1;\n                                g = 0;\n                            }\n                        }while (0);\n                        f = g;\n                        T = m;\n                        return f | 0;\n                    }\n                }while (0);\n            }\n            g = l;\n            h = g + 56 | 0;\n            do {\n                b[g >> 2] = 0;\n                g = g + 4 | 0;\n            }while ((g | 0) < (h | 0));\n            aa(a, c, 1, l) | 0;\n            c = l;\n            if (((((!((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0) ? (c = l + 8 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 16 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 24 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 32 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) ? (c = l + 40 | 0, !((b[c >> 2] | 0) == (d | 0) ? (b[c + 4 >> 2] | 0) == (e | 0) : 0)) : 0) {\n                g = l + 48 | 0;\n                g = ((b[g >> 2] | 0) == (d | 0) ? (b[g + 4 >> 2] | 0) == (e | 0) : 0) & 1;\n            } else {\n                g = 1;\n            }\n            b[f >> 2] = g;\n            f = 0;\n            T = m;\n            return f | 0;\n        }\n        function ab(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            d = fa(a, c, d, e) | 0;\n            if ((d | 0) == 7) {\n                f = 11;\n                return f | 0;\n            }\n            e = wd(d | 0, 0, 56) | 0;\n            c = c & -2130706433 | (H() | 0) | 268435456;\n            b[f >> 2] = a | e;\n            b[f + 4 >> 2] = c;\n            f = 0;\n            return f | 0;\n        }\n        function bb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n                d = 6;\n                return d | 0;\n            }\n            b[d >> 2] = a;\n            b[d + 4 >> 2] = c & -2130706433 | 134217728;\n            d = 0;\n            return d | 0;\n        }\n        function cb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            f = T;\n            T = T + 16 | 0;\n            e = f;\n            b[e >> 2] = 0;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n                e = 6;\n                T = f;\n                return e | 0;\n            }\n            g = vd(a | 0, c | 0, 56) | 0;\n            H() | 0;\n            e = ea(a, c & -2130706433 | 134217728, g & 7, e, d) | 0;\n            T = f;\n            return e | 0;\n        }\n        function db(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0;\n            c = vd(a | 0, b | 0, 56) | 0;\n            H() | 0;\n            switch(c & 7){\n                case 0:\n                case 7:\n                    {\n                        c = 0;\n                        return c | 0;\n                    }\n                default:\n            }\n            c = b & -2130706433 | 134217728;\n            if (!(0 == 0 & (b & 2013265920 | 0) == 268435456)) {\n                c = 0;\n                return c | 0;\n            }\n            if (0 == 0 & (b & 117440512 | 0) == 16777216 & (xb(a, c) | 0) != 0) {\n                c = 0;\n                return c | 0;\n            }\n            c = ub(a, c) | 0;\n            return c | 0;\n        }\n        function eb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0;\n            f = T;\n            T = T + 16 | 0;\n            e = f;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n                e = 6;\n                T = f;\n                return e | 0;\n            }\n            g = c & -2130706433 | 134217728;\n            h = d;\n            b[h >> 2] = a;\n            b[h + 4 >> 2] = g;\n            b[e >> 2] = 0;\n            c = vd(a | 0, c | 0, 56) | 0;\n            H() | 0;\n            e = ea(a, g, c & 7, e, d + 8 | 0) | 0;\n            T = f;\n            return e | 0;\n        }\n        function fb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0;\n            f = (xb(a, c) | 0) == 0;\n            c = c & -2130706433;\n            e = d;\n            b[e >> 2] = f ? a : 0;\n            b[e + 4 >> 2] = f ? c | 285212672 : 0;\n            e = d + 8 | 0;\n            b[e >> 2] = a;\n            b[e + 4 >> 2] = c | 301989888;\n            e = d + 16 | 0;\n            b[e >> 2] = a;\n            b[e + 4 >> 2] = c | 318767104;\n            e = d + 24 | 0;\n            b[e >> 2] = a;\n            b[e + 4 >> 2] = c | 335544320;\n            e = d + 32 | 0;\n            b[e >> 2] = a;\n            b[e + 4 >> 2] = c | 352321536;\n            d = d + 40 | 0;\n            b[d >> 2] = a;\n            b[d + 4 >> 2] = c | 369098752;\n            return 0;\n        }\n        function gb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0;\n            h = T;\n            T = T + 16 | 0;\n            f = h;\n            g = c & -2130706433 | 134217728;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 268435456)) {\n                g = 6;\n                T = h;\n                return g | 0;\n            }\n            e = vd(a | 0, c | 0, 56) | 0;\n            H() | 0;\n            e = Uc(a, g, e & 7) | 0;\n            if ((e | 0) == -1) {\n                b[d >> 2] = 0;\n                g = 6;\n                T = h;\n                return g | 0;\n            }\n            if (Ob(a, g, f) | 0) {\n                I(23313, 22484, 282, 22499);\n            }\n            c = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            c = c & 15;\n            if (!(xb(a, g) | 0)) {\n                qb(f, c, e, 2, d);\n            } else {\n                mb(f, c, e, 2, d);\n            }\n            g = 0;\n            T = h;\n            return g | 0;\n        }\n        function hb(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            var d = 0, e = 0;\n            d = T;\n            T = T + 16 | 0;\n            e = d;\n            ib(a, b, c, e);\n            Ca(e, c + 4 | 0);\n            T = d;\n            return;\n        }\n        function ib(a, c, d, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            var g = 0.0, h = 0.0, i = 0.0, j = 0, k = 0;\n            j = T;\n            T = T + 16 | 0;\n            k = j;\n            jb(a, d, k);\n            h = +w(+(1.0 - +e[k >> 3] * .5));\n            if (h < 1.0e-16) {\n                b[f >> 2] = 0;\n                b[f + 4 >> 2] = 0;\n                b[f + 8 >> 2] = 0;\n                b[f + 12 >> 2] = 0;\n                T = j;\n                return;\n            }\n            k = b[d >> 2] | 0;\n            g = +e[15920 + (k * 24 | 0) >> 3];\n            g = +Zb(g - +Zb(+cc(15600 + (k << 4) | 0, a)));\n            if (!(Lb(c) | 0)) {\n                i = g;\n            } else {\n                i = +Zb(g + -.3334731722518321);\n            }\n            g = +v(+h) / .381966011250105;\n            if ((c | 0) > 0) {\n                a = 0;\n                do {\n                    g = g * 2.6457513110645907;\n                    a = a + 1 | 0;\n                }while ((a | 0) != (c | 0));\n            }\n            h = +t(+i) * g;\n            e[f >> 3] = h;\n            i = +u(+i) * g;\n            e[f + 8 >> 3] = i;\n            T = j;\n            return;\n        }\n        function jb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0, h = 0;\n            h = T;\n            T = T + 32 | 0;\n            g = h;\n            Tc(a, g);\n            b[c >> 2] = 0;\n            e[d >> 3] = 5.0;\n            f = +Sc(16400, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 0;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16424, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 1;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16448, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 2;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16472, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 3;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16496, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 4;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16520, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 5;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16544, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 6;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16568, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 7;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16592, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 8;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16616, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 9;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16640, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 10;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16664, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 11;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16688, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 12;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16712, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 13;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16736, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 14;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16760, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 15;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16784, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 16;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16808, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 17;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16832, g);\n            if (f < +e[d >> 3]) {\n                b[c >> 2] = 18;\n                e[d >> 3] = f;\n            }\n            f = +Sc(16856, g);\n            if (!(f < +e[d >> 3])) {\n                T = h;\n                return;\n            }\n            b[c >> 2] = 19;\n            e[d >> 3] = f;\n            T = h;\n            return;\n        }\n        function kb(a, c, d, f, g) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            g = g | 0;\n            var h = 0.0, i = 0.0;\n            h = +Pc(a);\n            if (h < 1.0e-16) {\n                c = 15600 + (c << 4) | 0;\n                b[g >> 2] = b[c >> 2];\n                b[g + 4 >> 2] = b[c + 4 >> 2];\n                b[g + 8 >> 2] = b[c + 8 >> 2];\n                b[g + 12 >> 2] = b[c + 12 >> 2];\n                return;\n            }\n            i = +z(+ +e[a + 8 >> 3], + +e[a >> 3]);\n            if ((d | 0) > 0) {\n                a = 0;\n                do {\n                    h = h / 2.6457513110645907;\n                    a = a + 1 | 0;\n                }while ((a | 0) != (d | 0));\n            }\n            if (!f) {\n                h = +y(+(h * .381966011250105));\n                if (Lb(d) | 0) {\n                    i = +Zb(i + .3334731722518321);\n                }\n            } else {\n                h = h / 3.0;\n                d = (Lb(d) | 0) == 0;\n                h = +y(+((d ? h : h / 2.6457513110645907) * .381966011250105));\n            }\n            dc(15600 + (c << 4) | 0, +Zb(+e[15920 + (c * 24 | 0) >> 3] - i), h, g);\n            return;\n        }\n        function lb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0;\n            e = T;\n            T = T + 16 | 0;\n            f = e;\n            Ea(a + 4 | 0, f);\n            kb(f, b[a >> 2] | 0, c, 0, d);\n            T = e;\n            return;\n        }\n        function mb(a, c, d, f, g) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            g = g | 0;\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0.0, J = 0.0;\n            G = T;\n            T = T + 272 | 0;\n            h = G + 256 | 0;\n            u = G + 240 | 0;\n            D = G;\n            E = G + 224 | 0;\n            F = G + 208 | 0;\n            v = G + 176 | 0;\n            w = G + 160 | 0;\n            x = G + 192 | 0;\n            y = G + 144 | 0;\n            z = G + 128 | 0;\n            A = G + 112 | 0;\n            B = G + 96 | 0;\n            C = G + 80 | 0;\n            b[h >> 2] = c;\n            b[u >> 2] = b[a >> 2];\n            b[u + 4 >> 2] = b[a + 4 >> 2];\n            b[u + 8 >> 2] = b[a + 8 >> 2];\n            b[u + 12 >> 2] = b[a + 12 >> 2];\n            nb(u, h, D);\n            b[g >> 2] = 0;\n            u = f + d + ((f | 0) == 5 & 1) | 0;\n            if ((u | 0) <= (d | 0)) {\n                T = G;\n                return;\n            }\n            k = b[h >> 2] | 0;\n            l = E + 4 | 0;\n            m = v + 4 | 0;\n            n = d + 5 | 0;\n            o = 16880 + (k << 2) | 0;\n            p = 16960 + (k << 2) | 0;\n            q = z + 8 | 0;\n            r = A + 8 | 0;\n            s = B + 8 | 0;\n            t = F + 4 | 0;\n            j = d;\n            a: while(1){\n                i = D + (((j | 0) % 5 | 0) << 4) | 0;\n                b[F >> 2] = b[i >> 2];\n                b[F + 4 >> 2] = b[i + 4 >> 2];\n                b[F + 8 >> 2] = b[i + 8 >> 2];\n                b[F + 12 >> 2] = b[i + 12 >> 2];\n                do {}while ((ob(F, k, 0, 1) | 0) == 2);\n                if ((j | 0) > (d | 0) & (Lb(c) | 0) != 0) {\n                    b[v >> 2] = b[F >> 2];\n                    b[v + 4 >> 2] = b[F + 4 >> 2];\n                    b[v + 8 >> 2] = b[F + 8 >> 2];\n                    b[v + 12 >> 2] = b[F + 12 >> 2];\n                    Ea(l, w);\n                    f = b[v >> 2] | 0;\n                    h = b[17040 + (f * 80 | 0) + (b[E >> 2] << 2) >> 2] | 0;\n                    b[v >> 2] = b[18640 + (f * 80 | 0) + (h * 20 | 0) >> 2];\n                    i = b[18640 + (f * 80 | 0) + (h * 20 | 0) + 16 >> 2] | 0;\n                    if ((i | 0) > 0) {\n                        a = 0;\n                        do {\n                            Qa(m);\n                            a = a + 1 | 0;\n                        }while ((a | 0) < (i | 0));\n                    }\n                    i = 18640 + (f * 80 | 0) + (h * 20 | 0) + 4 | 0;\n                    b[x >> 2] = b[i >> 2];\n                    b[x + 4 >> 2] = b[i + 4 >> 2];\n                    b[x + 8 >> 2] = b[i + 8 >> 2];\n                    Ha(x, (b[o >> 2] | 0) * 3 | 0);\n                    Fa(m, x, m);\n                    Da(m);\n                    Ea(m, y);\n                    H = +(b[p >> 2] | 0);\n                    e[z >> 3] = H * 3.0;\n                    e[q >> 3] = 0.0;\n                    J = H * -1.5;\n                    e[A >> 3] = J;\n                    e[r >> 3] = H * 2.598076211353316;\n                    e[B >> 3] = J;\n                    e[s >> 3] = H * -2.598076211353316;\n                    switch(b[17040 + ((b[v >> 2] | 0) * 80 | 0) + (b[F >> 2] << 2) >> 2] | 0){\n                        case 1:\n                            {\n                                a = A;\n                                f = z;\n                                break;\n                            }\n                        case 3:\n                            {\n                                a = B;\n                                f = A;\n                                break;\n                            }\n                        case 2:\n                            {\n                                a = z;\n                                f = B;\n                                break;\n                            }\n                        default:\n                            {\n                                a = 12;\n                                break a;\n                            }\n                    }\n                    Qc(w, y, f, a, C);\n                    kb(C, b[v >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n                    b[g >> 2] = (b[g >> 2] | 0) + 1;\n                }\n                if ((j | 0) < (n | 0)) {\n                    Ea(t, v);\n                    kb(v, b[F >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n                    b[g >> 2] = (b[g >> 2] | 0) + 1;\n                }\n                b[E >> 2] = b[F >> 2];\n                b[E + 4 >> 2] = b[F + 4 >> 2];\n                b[E + 8 >> 2] = b[F + 8 >> 2];\n                b[E + 12 >> 2] = b[F + 12 >> 2];\n                j = j + 1 | 0;\n                if ((j | 0) >= (u | 0)) {\n                    a = 3;\n                    break;\n                }\n            }\n            if ((a | 0) == 3) {\n                T = G;\n                return;\n            } else if ((a | 0) == 12) {\n                I(22522, 22569, 571, 22579);\n            }\n        }\n        function nb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 128 | 0;\n            e = j + 64 | 0;\n            f = j;\n            g = e;\n            h = 20240;\n            i = g + 60 | 0;\n            do {\n                b[g >> 2] = b[h >> 2];\n                g = g + 4 | 0;\n                h = h + 4 | 0;\n            }while ((g | 0) < (i | 0));\n            g = f;\n            h = 20304;\n            i = g + 60 | 0;\n            do {\n                b[g >> 2] = b[h >> 2];\n                g = g + 4 | 0;\n                h = h + 4 | 0;\n            }while ((g | 0) < (i | 0));\n            i = (Lb(b[c >> 2] | 0) | 0) == 0;\n            e = i ? e : f;\n            f = a + 4 | 0;\n            Ua(f);\n            Va(f);\n            if (Lb(b[c >> 2] | 0) | 0) {\n                Oa(f);\n                b[c >> 2] = (b[c >> 2] | 0) + 1;\n            }\n            b[d >> 2] = b[a >> 2];\n            c = d + 4 | 0;\n            Fa(f, e, c);\n            Da(c);\n            b[d + 16 >> 2] = b[a >> 2];\n            c = d + 20 | 0;\n            Fa(f, e + 12 | 0, c);\n            Da(c);\n            b[d + 32 >> 2] = b[a >> 2];\n            c = d + 36 | 0;\n            Fa(f, e + 24 | 0, c);\n            Da(c);\n            b[d + 48 >> 2] = b[a >> 2];\n            c = d + 52 | 0;\n            Fa(f, e + 36 | 0, c);\n            Da(c);\n            b[d + 64 >> 2] = b[a >> 2];\n            d = d + 68 | 0;\n            Fa(f, e + 48 | 0, d);\n            Da(d);\n            T = j;\n            return;\n        }\n        function ob(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\n            p = T;\n            T = T + 32 | 0;\n            n = p + 12 | 0;\n            i = p;\n            o = a + 4 | 0;\n            m = b[16960 + (c << 2) >> 2] | 0;\n            l = (e | 0) != 0;\n            m = l ? m * 3 | 0 : m;\n            f = b[o >> 2] | 0;\n            k = a + 8 | 0;\n            h = b[k >> 2] | 0;\n            if (l) {\n                g = a + 12 | 0;\n                e = b[g >> 2] | 0;\n                f = h + f + e | 0;\n                if ((f | 0) == (m | 0)) {\n                    o = 1;\n                    T = p;\n                    return o | 0;\n                } else {\n                    j = g;\n                }\n            } else {\n                j = a + 12 | 0;\n                e = b[j >> 2] | 0;\n                f = h + f + e | 0;\n            }\n            if ((f | 0) <= (m | 0)) {\n                o = 0;\n                T = p;\n                return o | 0;\n            }\n            do {\n                if ((e | 0) > 0) {\n                    e = b[a >> 2] | 0;\n                    if ((h | 0) > 0) {\n                        g = 18640 + (e * 80 | 0) + 60 | 0;\n                        e = a;\n                        break;\n                    }\n                    e = 18640 + (e * 80 | 0) + 40 | 0;\n                    if (!d) {\n                        g = e;\n                        e = a;\n                    } else {\n                        Ba(n, m, 0, 0);\n                        Ga(o, n, i);\n                        Ra(i);\n                        Fa(i, n, o);\n                        g = e;\n                        e = a;\n                    }\n                } else {\n                    g = 18640 + ((b[a >> 2] | 0) * 80 | 0) + 20 | 0;\n                    e = a;\n                }\n            }while (0);\n            b[e >> 2] = b[g >> 2];\n            f = g + 16 | 0;\n            if ((b[f >> 2] | 0) > 0) {\n                e = 0;\n                do {\n                    Qa(o);\n                    e = e + 1 | 0;\n                }while ((e | 0) < (b[f >> 2] | 0));\n            }\n            a = g + 4 | 0;\n            b[n >> 2] = b[a >> 2];\n            b[n + 4 >> 2] = b[a + 4 >> 2];\n            b[n + 8 >> 2] = b[a + 8 >> 2];\n            c = b[16880 + (c << 2) >> 2] | 0;\n            Ha(n, l ? c * 3 | 0 : c);\n            Fa(o, n, o);\n            Da(o);\n            if (l) {\n                e = ((b[k >> 2] | 0) + (b[o >> 2] | 0) + (b[j >> 2] | 0) | 0) == (m | 0) ? 1 : 2;\n            } else {\n                e = 2;\n            }\n            o = e;\n            T = p;\n            return o | 0;\n        }\n        function pb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0;\n            do {\n                c = ob(a, b, 0, 1) | 0;\n            }while ((c | 0) == 2);\n            return c | 0;\n        }\n        function qb(a, c, d, f, g) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            g = g | 0;\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0, B = 0, C = 0.0, D = 0.0;\n            B = T;\n            T = T + 240 | 0;\n            h = B + 224 | 0;\n            x = B + 208 | 0;\n            y = B;\n            z = B + 192 | 0;\n            A = B + 176 | 0;\n            s = B + 160 | 0;\n            t = B + 144 | 0;\n            u = B + 128 | 0;\n            v = B + 112 | 0;\n            w = B + 96 | 0;\n            b[h >> 2] = c;\n            b[x >> 2] = b[a >> 2];\n            b[x + 4 >> 2] = b[a + 4 >> 2];\n            b[x + 8 >> 2] = b[a + 8 >> 2];\n            b[x + 12 >> 2] = b[a + 12 >> 2];\n            rb(x, h, y);\n            b[g >> 2] = 0;\n            r = f + d + ((f | 0) == 6 & 1) | 0;\n            if ((r | 0) <= (d | 0)) {\n                T = B;\n                return;\n            }\n            k = b[h >> 2] | 0;\n            l = d + 6 | 0;\n            m = 16960 + (k << 2) | 0;\n            n = t + 8 | 0;\n            o = u + 8 | 0;\n            p = v + 8 | 0;\n            q = z + 4 | 0;\n            i = 0;\n            j = d;\n            f = -1;\n            a: while(1){\n                h = (j | 0) % 6 | 0;\n                a = y + (h << 4) | 0;\n                b[z >> 2] = b[a >> 2];\n                b[z + 4 >> 2] = b[a + 4 >> 2];\n                b[z + 8 >> 2] = b[a + 8 >> 2];\n                b[z + 12 >> 2] = b[a + 12 >> 2];\n                a = i;\n                i = ob(z, k, 0, 1) | 0;\n                if ((j | 0) > (d | 0) & (Lb(c) | 0) != 0 ? (a | 0) != 1 ? (b[z >> 2] | 0) != (f | 0) : 0 : 0) {\n                    Ea(y + (((h + 5 | 0) % 6 | 0) << 4) + 4 | 0, A);\n                    Ea(y + (h << 4) + 4 | 0, s);\n                    C = +(b[m >> 2] | 0);\n                    e[t >> 3] = C * 3.0;\n                    e[n >> 3] = 0.0;\n                    D = C * -1.5;\n                    e[u >> 3] = D;\n                    e[o >> 3] = C * 2.598076211353316;\n                    e[v >> 3] = D;\n                    e[p >> 3] = C * -2.598076211353316;\n                    h = b[x >> 2] | 0;\n                    switch(b[17040 + (h * 80 | 0) + (((f | 0) == (h | 0) ? b[z >> 2] | 0 : f) << 2) >> 2] | 0){\n                        case 1:\n                            {\n                                a = u;\n                                f = t;\n                                break;\n                            }\n                        case 3:\n                            {\n                                a = v;\n                                f = u;\n                                break;\n                            }\n                        case 2:\n                            {\n                                a = t;\n                                f = v;\n                                break;\n                            }\n                        default:\n                            {\n                                a = 8;\n                                break a;\n                            }\n                    }\n                    Qc(A, s, f, a, w);\n                    if (!(Rc(A, w) | 0) ? !(Rc(s, w) | 0) : 0) {\n                        kb(w, b[x >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n                        b[g >> 2] = (b[g >> 2] | 0) + 1;\n                    }\n                }\n                if ((j | 0) < (l | 0)) {\n                    Ea(q, A);\n                    kb(A, b[z >> 2] | 0, k, 1, g + 8 + (b[g >> 2] << 4) | 0);\n                    b[g >> 2] = (b[g >> 2] | 0) + 1;\n                }\n                j = j + 1 | 0;\n                if ((j | 0) >= (r | 0)) {\n                    a = 3;\n                    break;\n                } else {\n                    f = b[z >> 2] | 0;\n                }\n            }\n            if ((a | 0) == 3) {\n                T = B;\n                return;\n            } else if ((a | 0) == 8) {\n                I(22606, 22569, 736, 22651);\n            }\n        }\n        function rb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 160 | 0;\n            e = j + 80 | 0;\n            f = j;\n            g = e;\n            h = 20368;\n            i = g + 72 | 0;\n            do {\n                b[g >> 2] = b[h >> 2];\n                g = g + 4 | 0;\n                h = h + 4 | 0;\n            }while ((g | 0) < (i | 0));\n            g = f;\n            h = 20448;\n            i = g + 72 | 0;\n            do {\n                b[g >> 2] = b[h >> 2];\n                g = g + 4 | 0;\n                h = h + 4 | 0;\n            }while ((g | 0) < (i | 0));\n            i = (Lb(b[c >> 2] | 0) | 0) == 0;\n            e = i ? e : f;\n            f = a + 4 | 0;\n            Ua(f);\n            Va(f);\n            if (Lb(b[c >> 2] | 0) | 0) {\n                Oa(f);\n                b[c >> 2] = (b[c >> 2] | 0) + 1;\n            }\n            b[d >> 2] = b[a >> 2];\n            c = d + 4 | 0;\n            Fa(f, e, c);\n            Da(c);\n            b[d + 16 >> 2] = b[a >> 2];\n            c = d + 20 | 0;\n            Fa(f, e + 12 | 0, c);\n            Da(c);\n            b[d + 32 >> 2] = b[a >> 2];\n            c = d + 36 | 0;\n            Fa(f, e + 24 | 0, c);\n            Da(c);\n            b[d + 48 >> 2] = b[a >> 2];\n            c = d + 52 | 0;\n            Fa(f, e + 36 | 0, c);\n            Da(c);\n            b[d + 64 >> 2] = b[a >> 2];\n            c = d + 68 | 0;\n            Fa(f, e + 48 | 0, c);\n            Da(c);\n            b[d + 80 >> 2] = b[a >> 2];\n            d = d + 84 | 0;\n            Fa(f, e + 60 | 0, d);\n            Da(d);\n            T = j;\n            return;\n        }\n        function sb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            b = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            return b & 15 | 0;\n        }\n        function tb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            b = vd(a | 0, b | 0, 45) | 0;\n            H() | 0;\n            return b & 127 | 0;\n        }\n        function ub(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;\n            if (!(0 == 0 & (b & -16777216 | 0) == 134217728)) {\n                b = 0;\n                return b | 0;\n            }\n            g = vd(a | 0, b | 0, 45) | 0;\n            H() | 0;\n            g = g & 127;\n            if (g >>> 0 > 121) {\n                b = 0;\n                return b | 0;\n            }\n            c = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            c = c & 15;\n            do {\n                if (c | 0) {\n                    e = 1;\n                    d = 0;\n                    while(1){\n                        f = vd(a | 0, b | 0, (15 - e | 0) * 3 | 0) | 0;\n                        H() | 0;\n                        f = f & 7;\n                        if ((f | 0) != 0 & (d ^ 1)) {\n                            if ((f | 0) == 1 & (ma(g) | 0) != 0) {\n                                h = 0;\n                                d = 13;\n                                break;\n                            } else {\n                                d = 1;\n                            }\n                        }\n                        if ((f | 0) == 7) {\n                            h = 0;\n                            d = 13;\n                            break;\n                        }\n                        if (e >>> 0 < c >>> 0) {\n                            e = e + 1 | 0;\n                        } else {\n                            d = 9;\n                            break;\n                        }\n                    }\n                    if ((d | 0) == 9) {\n                        if ((c | 0) == 15) {\n                            h = 1;\n                        } else {\n                            break;\n                        }\n                        return h | 0;\n                    } else if ((d | 0) == 13) {\n                        return h | 0;\n                    }\n                }\n            }while (0);\n            while(1){\n                h = vd(a | 0, b | 0, (14 - c | 0) * 3 | 0) | 0;\n                H() | 0;\n                if (!((h & 7 | 0) == 7 & 0 == 0)) {\n                    h = 0;\n                    d = 13;\n                    break;\n                }\n                if (c >>> 0 < 14) {\n                    c = c + 1 | 0;\n                } else {\n                    h = 1;\n                    d = 13;\n                    break;\n                }\n            }\n            if ((d | 0) == 13) {\n                return h | 0;\n            }\n            return 0;\n        }\n        function vb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0;\n            g = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            g = g & 15;\n            if (d >>> 0 > 15) {\n                e = 4;\n                return e | 0;\n            }\n            if ((g | 0) < (d | 0)) {\n                e = 12;\n                return e | 0;\n            }\n            if ((g | 0) == (d | 0)) {\n                b[e >> 2] = a;\n                b[e + 4 >> 2] = c;\n                e = 0;\n                return e | 0;\n            }\n            f = wd(d | 0, 0, 52) | 0;\n            f = f | a;\n            a = H() | 0 | c & -15728641;\n            if ((g | 0) > (d | 0)) {\n                do {\n                    c = wd(7, 0, (14 - d | 0) * 3 | 0) | 0;\n                    d = d + 1 | 0;\n                    f = c | f;\n                    a = H() | 0 | a;\n                }while ((d | 0) < (g | 0));\n            }\n            b[e >> 2] = f;\n            b[e + 4 >> 2] = a;\n            e = 0;\n            return e | 0;\n        }\n        function wb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0;\n            g = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            g = g & 15;\n            if (!((d | 0) < 16 & (g | 0) <= (d | 0))) {\n                e = 4;\n                return e | 0;\n            }\n            f = d - g | 0;\n            d = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            a: do {\n                if (!(ma(d & 127) | 0)) {\n                    d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n                    f = H() | 0;\n                } else {\n                    b: do {\n                        if (g | 0) {\n                            d = 1;\n                            while(1){\n                                h = wd(7, 0, (15 - d | 0) * 3 | 0) | 0;\n                                if (!((h & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n                                    break;\n                                }\n                                if (d >>> 0 < g >>> 0) {\n                                    d = d + 1 | 0;\n                                } else {\n                                    break b;\n                                }\n                            }\n                            d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n                            f = H() | 0;\n                            break a;\n                        }\n                    }while (0);\n                    d = Cc(7, 0, f, ((f | 0) < 0) << 31 >> 31) | 0;\n                    d = rd(d | 0, H() | 0, 5, 0) | 0;\n                    d = ld(d | 0, H() | 0, -5, -1) | 0;\n                    d = pd(d | 0, H() | 0, 6, 0) | 0;\n                    d = ld(d | 0, H() | 0, 1, 0) | 0;\n                    f = H() | 0;\n                }\n            }while (0);\n            h = e;\n            b[h >> 2] = d;\n            b[h + 4 >> 2] = f;\n            h = 0;\n            return h | 0;\n        }\n        function xb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0;\n            e = vd(a | 0, b | 0, 45) | 0;\n            H() | 0;\n            if (!(ma(e & 127) | 0)) {\n                e = 0;\n                return e | 0;\n            }\n            e = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            e = e & 15;\n            a: do {\n                if (!e) {\n                    c = 0;\n                } else {\n                    d = 1;\n                    while(1){\n                        c = vd(a | 0, b | 0, (15 - d | 0) * 3 | 0) | 0;\n                        H() | 0;\n                        c = c & 7;\n                        if (c | 0) {\n                            break a;\n                        }\n                        if (d >>> 0 < e >>> 0) {\n                            d = d + 1 | 0;\n                        } else {\n                            c = 0;\n                            break;\n                        }\n                    }\n                }\n            }while (0);\n            e = (c | 0) == 0 & 1;\n            return e | 0;\n        }\n        function yb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0;\n            h = T;\n            T = T + 16 | 0;\n            g = h;\n            Xb(g, a, c, d);\n            c = g;\n            a = b[c >> 2] | 0;\n            c = b[c + 4 >> 2] | 0;\n            if ((a | 0) == 0 & (c | 0) == 0) {\n                T = h;\n                return 0;\n            }\n            f = 0;\n            d = 0;\n            do {\n                i = e + (f << 3) | 0;\n                b[i >> 2] = a;\n                b[i + 4 >> 2] = c;\n                f = ld(f | 0, d | 0, 1, 0) | 0;\n                d = H() | 0;\n                Yb(g);\n                i = g;\n                a = b[i >> 2] | 0;\n                c = b[i + 4 >> 2] | 0;\n            }while (!((a | 0) == 0 & (c | 0) == 0));\n            T = h;\n            return 0;\n        }\n        function zb(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            if ((d | 0) < (c | 0)) {\n                c = b;\n                d = a;\n                G(c | 0);\n                return d | 0;\n            }\n            c = wd(-1, -1, ((d - c | 0) * 3 | 0) + 3 | 0) | 0;\n            d = wd(~c | 0, ~(H() | 0) | 0, (15 - d | 0) * 3 | 0) | 0;\n            c = ~(H() | 0) & b;\n            d = ~d & a;\n            G(c | 0);\n            return d | 0;\n        }\n        function Ab(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0;\n            f = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            f = f & 15;\n            if (!((d | 0) < 16 & (f | 0) <= (d | 0))) {\n                e = 4;\n                return e | 0;\n            }\n            if ((f | 0) < (d | 0)) {\n                f = wd(-1, -1, ((d + -1 - f | 0) * 3 | 0) + 3 | 0) | 0;\n                f = wd(~f | 0, ~(H() | 0) | 0, (15 - d | 0) * 3 | 0) | 0;\n                c = ~(H() | 0) & c;\n                a = ~f & a;\n            }\n            f = wd(d | 0, 0, 52) | 0;\n            d = c & -15728641 | (H() | 0);\n            b[e >> 2] = a | f;\n            b[e + 4 >> 2] = d;\n            e = 0;\n            return e | 0;\n        }\n        function Bb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0;\n            if ((d | 0) == 0 & (e | 0) == 0) {\n                y = 0;\n                return y | 0;\n            }\n            f = a;\n            g = b[f >> 2] | 0;\n            f = b[f + 4 >> 2] | 0;\n            if (0 == 0 & (f & 15728640 | 0) == 0) {\n                if (!((e | 0) > 0 | (e | 0) == 0 & d >>> 0 > 0)) {\n                    y = 0;\n                    return y | 0;\n                }\n                y = c;\n                b[y >> 2] = g;\n                b[y + 4 >> 2] = f;\n                if ((d | 0) == 1 & (e | 0) == 0) {\n                    y = 0;\n                    return y | 0;\n                }\n                f = 1;\n                do {\n                    w = a + (f << 3) | 0;\n                    x = b[w + 4 >> 2] | 0;\n                    y = c + (f << 3) | 0;\n                    b[y >> 2] = b[w >> 2];\n                    b[y + 4 >> 2] = x;\n                    f = f + 1 | 0;\n                }while (0 < (e | 0) | 0 == (e | 0) & f >>> 0 < d >>> 0);\n                f = 0;\n                return f | 0;\n            }\n            v = d << 3;\n            x = id(v) | 0;\n            if (!x) {\n                y = 13;\n                return y | 0;\n            }\n            Ad(x | 0, a | 0, v | 0) | 0;\n            w = kd(d, 8) | 0;\n            if (!w) {\n                jd(x);\n                y = 13;\n                return y | 0;\n            }\n            a: do {\n                if (d | 0) {\n                    b: while(1){\n                        f = x;\n                        s = b[f >> 2] | 0;\n                        f = b[f + 4 >> 2] | 0;\n                        t = vd(s | 0, f | 0, 52) | 0;\n                        H() | 0;\n                        t = t & 15;\n                        u = t + -1 | 0;\n                        r = (d | 0) > 0;\n                        c: do {\n                            if ((t | 0) != 0 & r) {\n                                o = ((d | 0) < 0) << 31 >> 31;\n                                p = wd(u | 0, 0, 52) | 0;\n                                q = H() | 0;\n                                if (u >>> 0 > 15) {\n                                    if (!((s | 0) == 0 & (f | 0) == 0)) {\n                                        y = 17;\n                                        break b;\n                                    }\n                                    g = 0;\n                                    while(1){\n                                        g = g + 1 | 0;\n                                        if ((g | 0) >= (d | 0)) {\n                                            break c;\n                                        }\n                                        e = x + (g << 3) | 0;\n                                        q = b[e >> 2] | 0;\n                                        e = b[e + 4 >> 2] | 0;\n                                        if (!((q | 0) == 0 & (e | 0) == 0)) {\n                                            f = e;\n                                            y = 17;\n                                            break b;\n                                        }\n                                    }\n                                }\n                                g = 0;\n                                a = s;\n                                e = f;\n                                while(1){\n                                    if (!((a | 0) == 0 & (e | 0) == 0)) {\n                                        if (!(0 == 0 & (e & 117440512 | 0) == 0)) {\n                                            y = 22;\n                                            break b;\n                                        }\n                                        i = vd(a | 0, e | 0, 52) | 0;\n                                        H() | 0;\n                                        i = i & 15;\n                                        if ((i | 0) < (u | 0)) {\n                                            f = 12;\n                                            y = 28;\n                                            break b;\n                                        }\n                                        if ((i | 0) != (u | 0)) {\n                                            a = a | p;\n                                            e = e & -15728641 | q;\n                                            if (i >>> 0 >= t >>> 0) {\n                                                h = u;\n                                                do {\n                                                    n = wd(7, 0, (14 - h | 0) * 3 | 0) | 0;\n                                                    h = h + 1 | 0;\n                                                    a = n | a;\n                                                    e = H() | 0 | e;\n                                                }while (h >>> 0 < i >>> 0);\n                                            }\n                                        }\n                                        h = td(a | 0, e | 0, d | 0, o | 0) | 0;\n                                        H() | 0;\n                                        k = w + (h << 3) | 0;\n                                        i = k;\n                                        j = b[i >> 2] | 0;\n                                        i = b[i + 4 >> 2] | 0;\n                                        if ((j | 0) == 0 & (i | 0) == 0) {\n                                            h = k;\n                                        } else {\n                                            n = 0;\n                                            while(1){\n                                                if ((n | 0) > (d | 0)) {\n                                                    y = 32;\n                                                    break b;\n                                                }\n                                                if ((j | 0) == (a | 0) & (i & -117440513 | 0) == (e | 0)) {\n                                                    l = vd(j | 0, i | 0, 56) | 0;\n                                                    H() | 0;\n                                                    l = l & 7;\n                                                    m = l + 1 | 0;\n                                                    z = vd(j | 0, i | 0, 45) | 0;\n                                                    H() | 0;\n                                                    d: do {\n                                                        if (!(ma(z & 127) | 0)) {\n                                                            i = 7;\n                                                        } else {\n                                                            j = vd(j | 0, i | 0, 52) | 0;\n                                                            H() | 0;\n                                                            j = j & 15;\n                                                            if (!j) {\n                                                                i = 6;\n                                                                break;\n                                                            }\n                                                            i = 1;\n                                                            while(1){\n                                                                z = wd(7, 0, (15 - i | 0) * 3 | 0) | 0;\n                                                                if (!((z & a | 0) == 0 & ((H() | 0) & e | 0) == 0)) {\n                                                                    i = 7;\n                                                                    break d;\n                                                                }\n                                                                if (i >>> 0 < j >>> 0) {\n                                                                    i = i + 1 | 0;\n                                                                } else {\n                                                                    i = 6;\n                                                                    break;\n                                                                }\n                                                            }\n                                                        }\n                                                    }while (0);\n                                                    if ((l + 2 | 0) >>> 0 > i >>> 0) {\n                                                        y = 42;\n                                                        break b;\n                                                    }\n                                                    z = wd(m | 0, 0, 56) | 0;\n                                                    e = H() | 0 | e & -117440513;\n                                                    m = k;\n                                                    b[m >> 2] = 0;\n                                                    b[m + 4 >> 2] = 0;\n                                                    a = z | a;\n                                                } else {\n                                                    h = (h + 1 | 0) % (d | 0) | 0;\n                                                }\n                                                k = w + (h << 3) | 0;\n                                                i = k;\n                                                j = b[i >> 2] | 0;\n                                                i = b[i + 4 >> 2] | 0;\n                                                if ((j | 0) == 0 & (i | 0) == 0) {\n                                                    h = k;\n                                                    break;\n                                                } else {\n                                                    n = n + 1 | 0;\n                                                }\n                                            }\n                                        }\n                                        z = h;\n                                        b[z >> 2] = a;\n                                        b[z + 4 >> 2] = e;\n                                    }\n                                    g = g + 1 | 0;\n                                    if ((g | 0) >= (d | 0)) {\n                                        break c;\n                                    }\n                                    e = x + (g << 3) | 0;\n                                    a = b[e >> 2] | 0;\n                                    e = b[e + 4 >> 2] | 0;\n                                }\n                            }\n                        }while (0);\n                        if ((d + 5 | 0) >>> 0 < 11) {\n                            y = 85;\n                            break;\n                        }\n                        q = kd((d | 0) / 6 | 0, 8) | 0;\n                        if (!q) {\n                            y = 49;\n                            break;\n                        }\n                        e: do {\n                            if (r) {\n                                n = 0;\n                                m = 0;\n                                do {\n                                    i = w + (n << 3) | 0;\n                                    e = i;\n                                    g = b[e >> 2] | 0;\n                                    e = b[e + 4 >> 2] | 0;\n                                    if (!((g | 0) == 0 & (e | 0) == 0)) {\n                                        j = vd(g | 0, e | 0, 56) | 0;\n                                        H() | 0;\n                                        j = j & 7;\n                                        a = j + 1 | 0;\n                                        k = e & -117440513;\n                                        z = vd(g | 0, e | 0, 45) | 0;\n                                        H() | 0;\n                                        f: do {\n                                            if (ma(z & 127) | 0) {\n                                                l = vd(g | 0, e | 0, 52) | 0;\n                                                H() | 0;\n                                                l = l & 15;\n                                                if (l | 0) {\n                                                    h = 1;\n                                                    while(1){\n                                                        z = wd(7, 0, (15 - h | 0) * 3 | 0) | 0;\n                                                        if (!((g & z | 0) == 0 & (k & (H() | 0) | 0) == 0)) {\n                                                            break f;\n                                                        }\n                                                        if (h >>> 0 < l >>> 0) {\n                                                            h = h + 1 | 0;\n                                                        } else {\n                                                            break;\n                                                        }\n                                                    }\n                                                }\n                                                e = wd(a | 0, 0, 56) | 0;\n                                                g = e | g;\n                                                e = H() | 0 | k;\n                                                a = i;\n                                                b[a >> 2] = g;\n                                                b[a + 4 >> 2] = e;\n                                                a = j + 2 | 0;\n                                            }\n                                        }while (0);\n                                        if ((a | 0) == 7) {\n                                            z = q + (m << 3) | 0;\n                                            b[z >> 2] = g;\n                                            b[z + 4 >> 2] = e & -117440513;\n                                            m = m + 1 | 0;\n                                        }\n                                    }\n                                    n = n + 1 | 0;\n                                }while ((n | 0) != (d | 0));\n                                if (r) {\n                                    n = ((d | 0) < 0) << 31 >> 31;\n                                    o = wd(u | 0, 0, 52) | 0;\n                                    p = H() | 0;\n                                    if (u >>> 0 > 15) {\n                                        if (!((s | 0) == 0 & (f | 0) == 0)) {\n                                            f = 4;\n                                            y = 84;\n                                            break b;\n                                        }\n                                        f = 0;\n                                        while(1){\n                                            f = f + 1 | 0;\n                                            if ((f | 0) >= (d | 0)) {\n                                                g = 0;\n                                                f = m;\n                                                break e;\n                                            }\n                                            z = x + (f << 3) | 0;\n                                            if (!((b[z >> 2] | 0) == 0 & (b[z + 4 >> 2] | 0) == 0)) {\n                                                f = 4;\n                                                y = 84;\n                                                break b;\n                                            }\n                                        }\n                                    }\n                                    l = 0;\n                                    g = 0;\n                                    k = s;\n                                    while(1){\n                                        do {\n                                            if (!((k | 0) == 0 & (f | 0) == 0)) {\n                                                i = vd(k | 0, f | 0, 52) | 0;\n                                                H() | 0;\n                                                i = i & 15;\n                                                if ((i | 0) < (u | 0)) {\n                                                    f = 12;\n                                                    y = 84;\n                                                    break b;\n                                                }\n                                                do {\n                                                    if ((i | 0) == (u | 0)) {\n                                                        e = k;\n                                                        i = f;\n                                                    } else {\n                                                        e = k | o;\n                                                        a = f & -15728641 | p;\n                                                        if (i >>> 0 < t >>> 0) {\n                                                            i = a;\n                                                            break;\n                                                        }\n                                                        h = u;\n                                                        do {\n                                                            z = wd(7, 0, (14 - h | 0) * 3 | 0) | 0;\n                                                            h = h + 1 | 0;\n                                                            e = z | e;\n                                                            a = H() | 0 | a;\n                                                        }while (h >>> 0 < i >>> 0);\n                                                        i = a;\n                                                    }\n                                                }while (0);\n                                                h = td(e | 0, i | 0, d | 0, n | 0) | 0;\n                                                H() | 0;\n                                                a = 0;\n                                                while(1){\n                                                    if ((a | 0) > (d | 0)) {\n                                                        y = 77;\n                                                        break b;\n                                                    }\n                                                    z = w + (h << 3) | 0;\n                                                    j = b[z + 4 >> 2] | 0;\n                                                    if ((j & -117440513 | 0) == (i | 0) ? (b[z >> 2] | 0) == (e | 0) : 0) {\n                                                        y = 79;\n                                                        break;\n                                                    }\n                                                    h = (h + 1 | 0) % (d | 0) | 0;\n                                                    z = w + (h << 3) | 0;\n                                                    if ((b[z >> 2] | 0) == (e | 0) ? (b[z + 4 >> 2] | 0) == (i | 0) : 0) {\n                                                        break;\n                                                    } else {\n                                                        a = a + 1 | 0;\n                                                    }\n                                                }\n                                                if ((y | 0) == 79 ? (y = 0, 0 == 0 & (j & 117440512 | 0) == 100663296) : 0) {\n                                                    break;\n                                                }\n                                                z = c + (g << 3) | 0;\n                                                b[z >> 2] = k;\n                                                b[z + 4 >> 2] = f;\n                                                g = g + 1 | 0;\n                                            }\n                                        }while (0);\n                                        f = l + 1 | 0;\n                                        if ((f | 0) >= (d | 0)) {\n                                            f = m;\n                                            break e;\n                                        }\n                                        z = x + (f << 3) | 0;\n                                        l = f;\n                                        k = b[z >> 2] | 0;\n                                        f = b[z + 4 >> 2] | 0;\n                                    }\n                                } else {\n                                    g = 0;\n                                    f = m;\n                                }\n                            } else {\n                                g = 0;\n                                f = 0;\n                            }\n                        }while (0);\n                        Bd(w | 0, 0, v | 0) | 0;\n                        Ad(x | 0, q | 0, f << 3 | 0) | 0;\n                        jd(q);\n                        if (!f) {\n                            break a;\n                        } else {\n                            c = c + (g << 3) | 0;\n                            d = f;\n                        }\n                    }\n                    if ((y | 0) == 17) {\n                        if (0 == 0 & (f & 117440512 | 0) == 0) {\n                            f = 4;\n                            y = 28;\n                        } else {\n                            y = 22;\n                        }\n                    } else if ((y | 0) == 32) {\n                        I(23313, 22674, 362, 22684);\n                    } else if ((y | 0) == 42) {\n                        jd(x);\n                        jd(w);\n                        z = 10;\n                        return z | 0;\n                    } else if ((y | 0) == 49) {\n                        jd(x);\n                        jd(w);\n                        z = 13;\n                        return z | 0;\n                    } else if ((y | 0) == 77) {\n                        I(23313, 22674, 462, 22684);\n                    } else if ((y | 0) == 84) {\n                        jd(q);\n                        jd(x);\n                        jd(w);\n                        z = f;\n                        return z | 0;\n                    } else if ((y | 0) == 85) {\n                        Ad(c | 0, x | 0, d << 3 | 0) | 0;\n                        break;\n                    }\n                    if ((y | 0) == 22) {\n                        jd(x);\n                        jd(w);\n                        z = 5;\n                        return z | 0;\n                    } else if ((y | 0) == 28) {\n                        jd(x);\n                        jd(w);\n                        z = f;\n                        return z | 0;\n                    }\n                }\n            }while (0);\n            jd(x);\n            jd(w);\n            z = 0;\n            return z | 0;\n        }\n        function Cb(a, c, d, e, f, g, h) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            g = g | 0;\n            h = h | 0;\n            var i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\n            q = T;\n            T = T + 16 | 0;\n            p = q;\n            if (!((d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 0)) {\n                p = 0;\n                T = q;\n                return p | 0;\n            }\n            if ((h | 0) >= 16) {\n                p = 12;\n                T = q;\n                return p | 0;\n            }\n            n = 0;\n            o = 0;\n            m = 0;\n            i = 0;\n            a: while(1){\n                k = a + (n << 3) | 0;\n                j = b[k >> 2] | 0;\n                k = b[k + 4 >> 2] | 0;\n                l = vd(j | 0, k | 0, 52) | 0;\n                H() | 0;\n                if ((l & 15 | 0) > (h | 0)) {\n                    i = 12;\n                    j = 11;\n                    break;\n                }\n                Xb(p, j, k, h);\n                l = p;\n                k = b[l >> 2] | 0;\n                l = b[l + 4 >> 2] | 0;\n                if ((k | 0) == 0 & (l | 0) == 0) {\n                    j = m;\n                } else {\n                    j = m;\n                    do {\n                        if (!((i | 0) < (g | 0) | (i | 0) == (g | 0) & j >>> 0 < f >>> 0)) {\n                            j = 10;\n                            break a;\n                        }\n                        m = e + (j << 3) | 0;\n                        b[m >> 2] = k;\n                        b[m + 4 >> 2] = l;\n                        j = ld(j | 0, i | 0, 1, 0) | 0;\n                        i = H() | 0;\n                        Yb(p);\n                        m = p;\n                        k = b[m >> 2] | 0;\n                        l = b[m + 4 >> 2] | 0;\n                    }while (!((k | 0) == 0 & (l | 0) == 0));\n                }\n                n = ld(n | 0, o | 0, 1, 0) | 0;\n                o = H() | 0;\n                if (!((o | 0) < (d | 0) | (o | 0) == (d | 0) & n >>> 0 < c >>> 0)) {\n                    i = 0;\n                    j = 11;\n                    break;\n                } else {\n                    m = j;\n                }\n            }\n            if ((j | 0) == 10) {\n                p = 14;\n                T = q;\n                return p | 0;\n            } else if ((j | 0) == 11) {\n                T = q;\n                return i | 0;\n            }\n            return 0;\n        }\n        function Db(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0;\n            n = T;\n            T = T + 16 | 0;\n            m = n;\n            a: do {\n                if ((d | 0) > 0 | (d | 0) == 0 & c >>> 0 > 0) {\n                    k = 0;\n                    h = 0;\n                    g = 0;\n                    l = 0;\n                    while(1){\n                        j = a + (k << 3) | 0;\n                        i = b[j >> 2] | 0;\n                        j = b[j + 4 >> 2] | 0;\n                        if (!((i | 0) == 0 & (j | 0) == 0)) {\n                            j = (wb(i, j, e, m) | 0) == 0;\n                            i = m;\n                            h = ld(b[i >> 2] | 0, b[i + 4 >> 2] | 0, h | 0, g | 0) | 0;\n                            g = H() | 0;\n                            if (!j) {\n                                g = 12;\n                                break;\n                            }\n                        }\n                        k = ld(k | 0, l | 0, 1, 0) | 0;\n                        l = H() | 0;\n                        if (!((l | 0) < (d | 0) | (l | 0) == (d | 0) & k >>> 0 < c >>> 0)) {\n                            break a;\n                        }\n                    }\n                    T = n;\n                    return g | 0;\n                } else {\n                    h = 0;\n                    g = 0;\n                }\n            }while (0);\n            b[f >> 2] = h;\n            b[f + 4 >> 2] = g;\n            f = 0;\n            T = n;\n            return f | 0;\n        }\n        function Eb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            b = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            return b & 1 | 0;\n        }\n        function Fb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0;\n            e = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            e = e & 15;\n            if (!e) {\n                e = 0;\n                return e | 0;\n            }\n            d = 1;\n            while(1){\n                c = vd(a | 0, b | 0, (15 - d | 0) * 3 | 0) | 0;\n                H() | 0;\n                c = c & 7;\n                if (c | 0) {\n                    d = 5;\n                    break;\n                }\n                if (d >>> 0 < e >>> 0) {\n                    d = d + 1 | 0;\n                } else {\n                    c = 0;\n                    d = 5;\n                    break;\n                }\n            }\n            if ((d | 0) == 5) {\n                return c | 0;\n            }\n            return 0;\n        }\n        function Gb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            i = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            i = i & 15;\n            if (!i) {\n                h = b;\n                i = a;\n                G(h | 0);\n                return i | 0;\n            }\n            h = 1;\n            c = 0;\n            while(1){\n                f = (15 - h | 0) * 3 | 0;\n                d = wd(7, 0, f | 0) | 0;\n                e = H() | 0;\n                g = vd(a | 0, b | 0, f | 0) | 0;\n                H() | 0;\n                f = wd(Sa(g & 7) | 0, 0, f | 0) | 0;\n                g = H() | 0;\n                a = f | a & ~d;\n                b = g | b & ~e;\n                a: do {\n                    if (!c) {\n                        if (!((f & d | 0) == 0 & (g & e | 0) == 0)) {\n                            d = vd(a | 0, b | 0, 52) | 0;\n                            H() | 0;\n                            d = d & 15;\n                            if (!d) {\n                                c = 1;\n                            } else {\n                                c = 1;\n                                b: while(1){\n                                    g = vd(a | 0, b | 0, (15 - c | 0) * 3 | 0) | 0;\n                                    H() | 0;\n                                    switch(g & 7){\n                                        case 1:\n                                            break b;\n                                        case 0:\n                                            break;\n                                        default:\n                                            {\n                                                c = 1;\n                                                break a;\n                                            }\n                                    }\n                                    if (c >>> 0 < d >>> 0) {\n                                        c = c + 1 | 0;\n                                    } else {\n                                        c = 1;\n                                        break a;\n                                    }\n                                }\n                                c = 1;\n                                while(1){\n                                    g = (15 - c | 0) * 3 | 0;\n                                    e = vd(a | 0, b | 0, g | 0) | 0;\n                                    H() | 0;\n                                    f = wd(7, 0, g | 0) | 0;\n                                    b = b & ~(H() | 0);\n                                    g = wd(Sa(e & 7) | 0, 0, g | 0) | 0;\n                                    a = a & ~f | g;\n                                    b = b | (H() | 0);\n                                    if (c >>> 0 < d >>> 0) {\n                                        c = c + 1 | 0;\n                                    } else {\n                                        c = 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        } else {\n                            c = 0;\n                        }\n                    }\n                }while (0);\n                if (h >>> 0 < i >>> 0) {\n                    h = h + 1 | 0;\n                } else {\n                    break;\n                }\n            }\n            G(b | 0);\n            return a | 0;\n        }\n        function Hb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0;\n            d = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            d = d & 15;\n            if (!d) {\n                c = b;\n                d = a;\n                G(c | 0);\n                return d | 0;\n            }\n            c = 1;\n            while(1){\n                f = (15 - c | 0) * 3 | 0;\n                g = vd(a | 0, b | 0, f | 0) | 0;\n                H() | 0;\n                e = wd(7, 0, f | 0) | 0;\n                b = b & ~(H() | 0);\n                f = wd(Sa(g & 7) | 0, 0, f | 0) | 0;\n                a = f | a & ~e;\n                b = H() | 0 | b;\n                if (c >>> 0 < d >>> 0) {\n                    c = c + 1 | 0;\n                } else {\n                    break;\n                }\n            }\n            G(b | 0);\n            return a | 0;\n        }\n        function Ib(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0;\n            i = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            i = i & 15;\n            if (!i) {\n                h = b;\n                i = a;\n                G(h | 0);\n                return i | 0;\n            }\n            h = 1;\n            c = 0;\n            while(1){\n                f = (15 - h | 0) * 3 | 0;\n                d = wd(7, 0, f | 0) | 0;\n                e = H() | 0;\n                g = vd(a | 0, b | 0, f | 0) | 0;\n                H() | 0;\n                f = wd(Ta(g & 7) | 0, 0, f | 0) | 0;\n                g = H() | 0;\n                a = f | a & ~d;\n                b = g | b & ~e;\n                a: do {\n                    if (!c) {\n                        if (!((f & d | 0) == 0 & (g & e | 0) == 0)) {\n                            d = vd(a | 0, b | 0, 52) | 0;\n                            H() | 0;\n                            d = d & 15;\n                            if (!d) {\n                                c = 1;\n                            } else {\n                                c = 1;\n                                b: while(1){\n                                    g = vd(a | 0, b | 0, (15 - c | 0) * 3 | 0) | 0;\n                                    H() | 0;\n                                    switch(g & 7){\n                                        case 1:\n                                            break b;\n                                        case 0:\n                                            break;\n                                        default:\n                                            {\n                                                c = 1;\n                                                break a;\n                                            }\n                                    }\n                                    if (c >>> 0 < d >>> 0) {\n                                        c = c + 1 | 0;\n                                    } else {\n                                        c = 1;\n                                        break a;\n                                    }\n                                }\n                                c = 1;\n                                while(1){\n                                    e = (15 - c | 0) * 3 | 0;\n                                    f = wd(7, 0, e | 0) | 0;\n                                    g = b & ~(H() | 0);\n                                    b = vd(a | 0, b | 0, e | 0) | 0;\n                                    H() | 0;\n                                    b = wd(Ta(b & 7) | 0, 0, e | 0) | 0;\n                                    a = a & ~f | b;\n                                    b = g | (H() | 0);\n                                    if (c >>> 0 < d >>> 0) {\n                                        c = c + 1 | 0;\n                                    } else {\n                                        c = 1;\n                                        break;\n                                    }\n                                }\n                            }\n                        } else {\n                            c = 0;\n                        }\n                    }\n                }while (0);\n                if (h >>> 0 < i >>> 0) {\n                    h = h + 1 | 0;\n                } else {\n                    break;\n                }\n            }\n            G(b | 0);\n            return a | 0;\n        }\n        function Jb(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0;\n            d = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            d = d & 15;\n            if (!d) {\n                c = b;\n                d = a;\n                G(c | 0);\n                return d | 0;\n            }\n            c = 1;\n            while(1){\n                g = (15 - c | 0) * 3 | 0;\n                f = wd(7, 0, g | 0) | 0;\n                e = b & ~(H() | 0);\n                b = vd(a | 0, b | 0, g | 0) | 0;\n                H() | 0;\n                b = wd(Ta(b & 7) | 0, 0, g | 0) | 0;\n                a = b | a & ~f;\n                b = H() | 0 | e;\n                if (c >>> 0 < d >>> 0) {\n                    c = c + 1 | 0;\n                } else {\n                    break;\n                }\n            }\n            G(b | 0);\n            return a | 0;\n        }\n        function Kb(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;\n            j = T;\n            T = T + 64 | 0;\n            i = j + 40 | 0;\n            e = j + 24 | 0;\n            f = j + 12 | 0;\n            g = j;\n            wd(c | 0, 0, 52) | 0;\n            d = H() | 0 | 134225919;\n            if (!c) {\n                if ((b[a + 4 >> 2] | 0) > 2) {\n                    h = 0;\n                    i = 0;\n                    G(h | 0);\n                    T = j;\n                    return i | 0;\n                }\n                if ((b[a + 8 >> 2] | 0) > 2) {\n                    h = 0;\n                    i = 0;\n                    G(h | 0);\n                    T = j;\n                    return i | 0;\n                }\n                if ((b[a + 12 >> 2] | 0) > 2) {\n                    h = 0;\n                    i = 0;\n                    G(h | 0);\n                    T = j;\n                    return i | 0;\n                }\n                wd(oa(a) | 0, 0, 45) | 0;\n                h = H() | 0 | d;\n                i = -1;\n                G(h | 0);\n                T = j;\n                return i | 0;\n            }\n            b[i >> 2] = b[a >> 2];\n            b[i + 4 >> 2] = b[a + 4 >> 2];\n            b[i + 8 >> 2] = b[a + 8 >> 2];\n            b[i + 12 >> 2] = b[a + 12 >> 2];\n            h = i + 4 | 0;\n            if ((c | 0) > 0) {\n                a = -1;\n                while(1){\n                    b[e >> 2] = b[h >> 2];\n                    b[e + 4 >> 2] = b[h + 4 >> 2];\n                    b[e + 8 >> 2] = b[h + 8 >> 2];\n                    if (!(c & 1)) {\n                        Ma(h);\n                        b[f >> 2] = b[h >> 2];\n                        b[f + 4 >> 2] = b[h + 4 >> 2];\n                        b[f + 8 >> 2] = b[h + 8 >> 2];\n                        Oa(f);\n                    } else {\n                        La(h);\n                        b[f >> 2] = b[h >> 2];\n                        b[f + 4 >> 2] = b[h + 4 >> 2];\n                        b[f + 8 >> 2] = b[h + 8 >> 2];\n                        Na(f);\n                    }\n                    Ga(e, f, g);\n                    Da(g);\n                    l = (15 - c | 0) * 3 | 0;\n                    k = wd(7, 0, l | 0) | 0;\n                    d = d & ~(H() | 0);\n                    l = wd(Ia(g) | 0, 0, l | 0) | 0;\n                    a = l | a & ~k;\n                    d = H() | 0 | d;\n                    if ((c | 0) > 1) {\n                        c = c + -1 | 0;\n                    } else {\n                        break;\n                    }\n                }\n            } else {\n                a = -1;\n            }\n            a: do {\n                if (((b[h >> 2] | 0) <= 2 ? (b[i + 8 >> 2] | 0) <= 2 : 0) ? (b[i + 12 >> 2] | 0) <= 2 : 0) {\n                    e = oa(i) | 0;\n                    c = wd(e | 0, 0, 45) | 0;\n                    c = c | a;\n                    a = H() | 0 | d & -1040385;\n                    g = pa(i) | 0;\n                    if (!(ma(e) | 0)) {\n                        if ((g | 0) <= 0) {\n                            break;\n                        }\n                        f = 0;\n                        while(1){\n                            e = vd(c | 0, a | 0, 52) | 0;\n                            H() | 0;\n                            e = e & 15;\n                            if (e) {\n                                d = 1;\n                                while(1){\n                                    l = (15 - d | 0) * 3 | 0;\n                                    i = vd(c | 0, a | 0, l | 0) | 0;\n                                    H() | 0;\n                                    k = wd(7, 0, l | 0) | 0;\n                                    a = a & ~(H() | 0);\n                                    l = wd(Sa(i & 7) | 0, 0, l | 0) | 0;\n                                    c = c & ~k | l;\n                                    a = a | (H() | 0);\n                                    if (d >>> 0 < e >>> 0) {\n                                        d = d + 1 | 0;\n                                    } else {\n                                        break;\n                                    }\n                                }\n                            }\n                            f = f + 1 | 0;\n                            if ((f | 0) == (g | 0)) {\n                                break a;\n                            }\n                        }\n                    }\n                    f = vd(c | 0, a | 0, 52) | 0;\n                    H() | 0;\n                    f = f & 15;\n                    b: do {\n                        if (f) {\n                            d = 1;\n                            c: while(1){\n                                l = vd(c | 0, a | 0, (15 - d | 0) * 3 | 0) | 0;\n                                H() | 0;\n                                switch(l & 7){\n                                    case 1:\n                                        break c;\n                                    case 0:\n                                        break;\n                                    default:\n                                        break b;\n                                }\n                                if (d >>> 0 < f >>> 0) {\n                                    d = d + 1 | 0;\n                                } else {\n                                    break b;\n                                }\n                            }\n                            if (sa(e, b[i >> 2] | 0) | 0) {\n                                d = 1;\n                                while(1){\n                                    i = (15 - d | 0) * 3 | 0;\n                                    k = wd(7, 0, i | 0) | 0;\n                                    l = a & ~(H() | 0);\n                                    a = vd(c | 0, a | 0, i | 0) | 0;\n                                    H() | 0;\n                                    a = wd(Ta(a & 7) | 0, 0, i | 0) | 0;\n                                    c = c & ~k | a;\n                                    a = l | (H() | 0);\n                                    if (d >>> 0 < f >>> 0) {\n                                        d = d + 1 | 0;\n                                    } else {\n                                        break;\n                                    }\n                                }\n                            } else {\n                                d = 1;\n                                while(1){\n                                    l = (15 - d | 0) * 3 | 0;\n                                    i = vd(c | 0, a | 0, l | 0) | 0;\n                                    H() | 0;\n                                    k = wd(7, 0, l | 0) | 0;\n                                    a = a & ~(H() | 0);\n                                    l = wd(Sa(i & 7) | 0, 0, l | 0) | 0;\n                                    c = c & ~k | l;\n                                    a = a | (H() | 0);\n                                    if (d >>> 0 < f >>> 0) {\n                                        d = d + 1 | 0;\n                                    } else {\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }while (0);\n                    if ((g | 0) > 0) {\n                        d = 0;\n                        do {\n                            c = Gb(c, a) | 0;\n                            a = H() | 0;\n                            d = d + 1 | 0;\n                        }while ((d | 0) != (g | 0));\n                    }\n                } else {\n                    c = 0;\n                    a = 0;\n                }\n            }while (0);\n            k = a;\n            l = c;\n            G(k | 0);\n            T = j;\n            return l | 0;\n        }\n        function Lb(a) {\n            a = a | 0;\n            return (a | 0) % 2 | 0 | 0;\n        }\n        function Mb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0;\n            f = T;\n            T = T + 16 | 0;\n            e = f;\n            if (c >>> 0 > 15) {\n                e = 4;\n                T = f;\n                return e | 0;\n            }\n            if ((b[a + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n                e = 3;\n                T = f;\n                return e | 0;\n            }\n            if ((b[a + 8 + 4 >> 2] & 2146435072 | 0) == 2146435072) {\n                e = 3;\n                T = f;\n                return e | 0;\n            }\n            hb(a, c, e);\n            c = Kb(e, c) | 0;\n            e = H() | 0;\n            b[d >> 2] = c;\n            b[d + 4 >> 2] = e;\n            if ((c | 0) == 0 & (e | 0) == 0) {\n                I(23313, 22674, 786, 22697);\n            }\n            e = 0;\n            T = f;\n            return e | 0;\n        }\n        function Nb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0;\n            f = d + 4 | 0;\n            g = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            g = g & 15;\n            h = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            e = (g | 0) == 0;\n            if (!(ma(h & 127) | 0)) {\n                if (e) {\n                    h = 0;\n                    return h | 0;\n                }\n                if ((b[f >> 2] | 0) == 0 ? (b[d + 8 >> 2] | 0) == 0 : 0) {\n                    e = (b[d + 12 >> 2] | 0) != 0 & 1;\n                } else {\n                    e = 1;\n                }\n            } else if (e) {\n                h = 1;\n                return h | 0;\n            } else {\n                e = 1;\n            }\n            d = 1;\n            while(1){\n                if (!(d & 1)) {\n                    Oa(f);\n                } else {\n                    Na(f);\n                }\n                h = vd(a | 0, c | 0, (15 - d | 0) * 3 | 0) | 0;\n                H() | 0;\n                Pa(f, h & 7);\n                if (d >>> 0 < g >>> 0) {\n                    d = d + 1 | 0;\n                } else {\n                    break;\n                }\n            }\n            return e | 0;\n        }\n        function Ob(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0;\n            l = T;\n            T = T + 16 | 0;\n            j = l;\n            k = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            k = k & 127;\n            if (k >>> 0 > 121) {\n                b[d >> 2] = 0;\n                b[d + 4 >> 2] = 0;\n                b[d + 8 >> 2] = 0;\n                b[d + 12 >> 2] = 0;\n                k = 5;\n                T = l;\n                return k | 0;\n            }\n            a: do {\n                if ((ma(k) | 0) != 0 ? (g = vd(a | 0, c | 0, 52) | 0, H() | 0, g = g & 15, (g | 0) != 0) : 0) {\n                    e = 1;\n                    b: while(1){\n                        i = vd(a | 0, c | 0, (15 - e | 0) * 3 | 0) | 0;\n                        H() | 0;\n                        switch(i & 7){\n                            case 5:\n                                break b;\n                            case 0:\n                                break;\n                            default:\n                                {\n                                    e = c;\n                                    break a;\n                                }\n                        }\n                        if (e >>> 0 < g >>> 0) {\n                            e = e + 1 | 0;\n                        } else {\n                            e = c;\n                            break a;\n                        }\n                    }\n                    f = 1;\n                    e = c;\n                    while(1){\n                        c = (15 - f | 0) * 3 | 0;\n                        h = wd(7, 0, c | 0) | 0;\n                        i = e & ~(H() | 0);\n                        e = vd(a | 0, e | 0, c | 0) | 0;\n                        H() | 0;\n                        e = wd(Ta(e & 7) | 0, 0, c | 0) | 0;\n                        a = a & ~h | e;\n                        e = i | (H() | 0);\n                        if (f >>> 0 < g >>> 0) {\n                            f = f + 1 | 0;\n                        } else {\n                            break;\n                        }\n                    }\n                } else {\n                    e = c;\n                }\n            }while (0);\n            i = 7696 + (k * 28 | 0) | 0;\n            b[d >> 2] = b[i >> 2];\n            b[d + 4 >> 2] = b[i + 4 >> 2];\n            b[d + 8 >> 2] = b[i + 8 >> 2];\n            b[d + 12 >> 2] = b[i + 12 >> 2];\n            if (!(Nb(a, e, d) | 0)) {\n                k = 0;\n                T = l;\n                return k | 0;\n            }\n            h = d + 4 | 0;\n            b[j >> 2] = b[h >> 2];\n            b[j + 4 >> 2] = b[h + 4 >> 2];\n            b[j + 8 >> 2] = b[h + 8 >> 2];\n            g = vd(a | 0, e | 0, 52) | 0;\n            H() | 0;\n            i = g & 15;\n            if (!(g & 1)) {\n                g = i;\n            } else {\n                Oa(h);\n                g = i + 1 | 0;\n            }\n            if (!(ma(k) | 0)) {\n                e = 0;\n            } else {\n                c: do {\n                    if (!i) {\n                        e = 0;\n                    } else {\n                        c = 1;\n                        while(1){\n                            f = vd(a | 0, e | 0, (15 - c | 0) * 3 | 0) | 0;\n                            H() | 0;\n                            f = f & 7;\n                            if (f | 0) {\n                                e = f;\n                                break c;\n                            }\n                            if (c >>> 0 < i >>> 0) {\n                                c = c + 1 | 0;\n                            } else {\n                                e = 0;\n                                break;\n                            }\n                        }\n                    }\n                }while (0);\n                e = (e | 0) == 4 & 1;\n            }\n            if (!(ob(d, g, e, 0) | 0)) {\n                if ((g | 0) != (i | 0)) {\n                    b[h >> 2] = b[j >> 2];\n                    b[h + 4 >> 2] = b[j + 4 >> 2];\n                    b[h + 8 >> 2] = b[j + 8 >> 2];\n                }\n            } else {\n                if (ma(k) | 0) {\n                    do {}while ((ob(d, g, 0, 0) | 0) != 0);\n                }\n                if ((g | 0) != (i | 0)) {\n                    Ma(h);\n                }\n            }\n            k = 0;\n            T = l;\n            return k | 0;\n        }\n        function Pb(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0;\n            f = T;\n            T = T + 16 | 0;\n            d = f;\n            e = Ob(a, b, d) | 0;\n            if (e | 0) {\n                T = f;\n                return e | 0;\n            }\n            e = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            lb(d, e & 15, c);\n            e = 0;\n            T = f;\n            return e | 0;\n        }\n        function Qb(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0;\n            g = T;\n            T = T + 16 | 0;\n            f = g;\n            d = Ob(a, b, f) | 0;\n            if (d | 0) {\n                f = d;\n                T = g;\n                return f | 0;\n            }\n            d = vd(a | 0, b | 0, 45) | 0;\n            H() | 0;\n            d = (ma(d & 127) | 0) == 0;\n            e = vd(a | 0, b | 0, 52) | 0;\n            H() | 0;\n            e = e & 15;\n            a: do {\n                if (!d) {\n                    if (e | 0) {\n                        d = 1;\n                        while(1){\n                            h = wd(7, 0, (15 - d | 0) * 3 | 0) | 0;\n                            if (!((h & a | 0) == 0 & ((H() | 0) & b | 0) == 0)) {\n                                break a;\n                            }\n                            if (d >>> 0 < e >>> 0) {\n                                d = d + 1 | 0;\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                    mb(f, e, 0, 5, c);\n                    h = 0;\n                    T = g;\n                    return h | 0;\n                }\n            }while (0);\n            qb(f, e, 0, 6, c);\n            h = 0;\n            T = g;\n            return h | 0;\n        }\n        function Rb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            f = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            if (!(ma(f & 127) | 0)) {\n                f = 2;\n                b[d >> 2] = f;\n                return 0;\n            }\n            f = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            f = f & 15;\n            if (!f) {\n                f = 5;\n                b[d >> 2] = f;\n                return 0;\n            }\n            e = 1;\n            while(1){\n                g = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n                if (!((g & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n                    e = 2;\n                    a = 6;\n                    break;\n                }\n                if (e >>> 0 < f >>> 0) {\n                    e = e + 1 | 0;\n                } else {\n                    e = 5;\n                    a = 6;\n                    break;\n                }\n            }\n            if ((a | 0) == 6) {\n                b[d >> 2] = e;\n                return 0;\n            }\n            return 0;\n        }\n        function Sb(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0;\n            m = T;\n            T = T + 128 | 0;\n            k = m + 112 | 0;\n            g = m + 96 | 0;\n            l = m;\n            f = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            i = f & 15;\n            b[k >> 2] = i;\n            h = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            h = h & 127;\n            a: do {\n                if (ma(h) | 0) {\n                    if (i | 0) {\n                        e = 1;\n                        while(1){\n                            j = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n                            if (!((j & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n                                f = 0;\n                                break a;\n                            }\n                            if (e >>> 0 < i >>> 0) {\n                                e = e + 1 | 0;\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                    if (!(f & 1)) {\n                        j = wd(i + 1 | 0, 0, 52) | 0;\n                        l = H() | 0 | c & -15728641;\n                        k = wd(7, 0, (14 - i | 0) * 3 | 0) | 0;\n                        l = Sb((j | a) & ~k, l & ~(H() | 0), d) | 0;\n                        T = m;\n                        return l | 0;\n                    } else {\n                        f = 1;\n                    }\n                } else {\n                    f = 0;\n                }\n            }while (0);\n            e = Ob(a, c, g) | 0;\n            if (!e) {\n                if (f) {\n                    nb(g, k, l);\n                    j = 5;\n                } else {\n                    rb(g, k, l);\n                    j = 6;\n                }\n                b: do {\n                    if (ma(h) | 0) {\n                        if (!i) {\n                            a = 5;\n                        } else {\n                            e = 1;\n                            while(1){\n                                h = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n                                if (!((h & a | 0) == 0 & ((H() | 0) & c | 0) == 0)) {\n                                    a = 2;\n                                    break b;\n                                }\n                                if (e >>> 0 < i >>> 0) {\n                                    e = e + 1 | 0;\n                                } else {\n                                    a = 5;\n                                    break;\n                                }\n                            }\n                        }\n                    } else {\n                        a = 2;\n                    }\n                }while (0);\n                Bd(d | 0, -1, a << 2 | 0) | 0;\n                c: do {\n                    if (f) {\n                        g = 0;\n                        while(1){\n                            h = l + (g << 4) | 0;\n                            pb(h, b[k >> 2] | 0) | 0;\n                            h = b[h >> 2] | 0;\n                            i = b[d >> 2] | 0;\n                            if ((i | 0) == -1 | (i | 0) == (h | 0)) {\n                                e = d;\n                            } else {\n                                f = 0;\n                                do {\n                                    f = f + 1 | 0;\n                                    if (f >>> 0 >= a >>> 0) {\n                                        e = 1;\n                                        break c;\n                                    }\n                                    e = d + (f << 2) | 0;\n                                    i = b[e >> 2] | 0;\n                                }while (!((i | 0) == -1 | (i | 0) == (h | 0)));\n                            }\n                            b[e >> 2] = h;\n                            g = g + 1 | 0;\n                            if (g >>> 0 >= j >>> 0) {\n                                e = 0;\n                                break;\n                            }\n                        }\n                    } else {\n                        g = 0;\n                        while(1){\n                            h = l + (g << 4) | 0;\n                            ob(h, b[k >> 2] | 0, 0, 1) | 0;\n                            h = b[h >> 2] | 0;\n                            i = b[d >> 2] | 0;\n                            if ((i | 0) == -1 | (i | 0) == (h | 0)) {\n                                e = d;\n                            } else {\n                                f = 0;\n                                do {\n                                    f = f + 1 | 0;\n                                    if (f >>> 0 >= a >>> 0) {\n                                        e = 1;\n                                        break c;\n                                    }\n                                    e = d + (f << 2) | 0;\n                                    i = b[e >> 2] | 0;\n                                }while (!((i | 0) == -1 | (i | 0) == (h | 0)));\n                            }\n                            b[e >> 2] = h;\n                            g = g + 1 | 0;\n                            if (g >>> 0 >= j >>> 0) {\n                                e = 0;\n                                break;\n                            }\n                        }\n                    }\n                }while (0);\n            }\n            l = e;\n            T = m;\n            return l | 0;\n        }\n        function Tb() {\n            return 12;\n        }\n        function Ub(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            if (a >>> 0 > 15) {\n                i = 4;\n                return i | 0;\n            }\n            wd(a | 0, 0, 52) | 0;\n            i = H() | 0 | 134225919;\n            if (!a) {\n                d = 0;\n                e = 0;\n                do {\n                    if (ma(e) | 0) {\n                        wd(e | 0, 0, 45) | 0;\n                        h = i | (H() | 0);\n                        a = c + (d << 3) | 0;\n                        b[a >> 2] = -1;\n                        b[a + 4 >> 2] = h;\n                        d = d + 1 | 0;\n                    }\n                    e = e + 1 | 0;\n                }while ((e | 0) != 122);\n                d = 0;\n                return d | 0;\n            }\n            d = 0;\n            h = 0;\n            do {\n                if (ma(h) | 0) {\n                    wd(h | 0, 0, 45) | 0;\n                    e = 1;\n                    f = -1;\n                    g = i | (H() | 0);\n                    while(1){\n                        j = wd(7, 0, (15 - e | 0) * 3 | 0) | 0;\n                        f = f & ~j;\n                        g = g & ~(H() | 0);\n                        if ((e | 0) == (a | 0)) {\n                            break;\n                        } else {\n                            e = e + 1 | 0;\n                        }\n                    }\n                    j = c + (d << 3) | 0;\n                    b[j >> 2] = f;\n                    b[j + 4 >> 2] = g;\n                    d = d + 1 | 0;\n                }\n                h = h + 1 | 0;\n            }while ((h | 0) != 122);\n            d = 0;\n            return d | 0;\n        }\n        function Vb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0;\n            t = T;\n            T = T + 16 | 0;\n            r = t;\n            s = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            s = s & 15;\n            if (d >>> 0 > 15) {\n                s = 4;\n                T = t;\n                return s | 0;\n            }\n            if ((s | 0) < (d | 0)) {\n                s = 12;\n                T = t;\n                return s | 0;\n            }\n            if ((s | 0) != (d | 0)) {\n                g = wd(d | 0, 0, 52) | 0;\n                g = g | a;\n                i = H() | 0 | c & -15728641;\n                if ((s | 0) > (d | 0)) {\n                    j = d;\n                    do {\n                        q = wd(7, 0, (14 - j | 0) * 3 | 0) | 0;\n                        j = j + 1 | 0;\n                        g = q | g;\n                        i = H() | 0 | i;\n                    }while ((j | 0) < (s | 0));\n                    q = g;\n                } else {\n                    q = g;\n                }\n            } else {\n                q = a;\n                i = c;\n            }\n            p = vd(q | 0, i | 0, 45) | 0;\n            H() | 0;\n            a: do {\n                if (ma(p & 127) | 0) {\n                    j = vd(q | 0, i | 0, 52) | 0;\n                    H() | 0;\n                    j = j & 15;\n                    if (j | 0) {\n                        g = 1;\n                        while(1){\n                            p = wd(7, 0, (15 - g | 0) * 3 | 0) | 0;\n                            if (!((p & q | 0) == 0 & ((H() | 0) & i | 0) == 0)) {\n                                k = 33;\n                                break a;\n                            }\n                            if (g >>> 0 < j >>> 0) {\n                                g = g + 1 | 0;\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                    p = e;\n                    b[p >> 2] = 0;\n                    b[p + 4 >> 2] = 0;\n                    if ((s | 0) > (d | 0)) {\n                        p = c & -15728641;\n                        o = s;\n                        while(1){\n                            n = o;\n                            o = o + -1 | 0;\n                            if (o >>> 0 > 15 | (s | 0) < (o | 0)) {\n                                k = 19;\n                                break;\n                            }\n                            if ((s | 0) != (o | 0)) {\n                                g = wd(o | 0, 0, 52) | 0;\n                                g = g | a;\n                                j = H() | 0 | p;\n                                if ((s | 0) < (n | 0)) {\n                                    m = g;\n                                } else {\n                                    k = o;\n                                    do {\n                                        m = wd(7, 0, (14 - k | 0) * 3 | 0) | 0;\n                                        k = k + 1 | 0;\n                                        g = m | g;\n                                        j = H() | 0 | j;\n                                    }while ((k | 0) < (s | 0));\n                                    m = g;\n                                }\n                            } else {\n                                m = a;\n                                j = c;\n                            }\n                            l = vd(m | 0, j | 0, 45) | 0;\n                            H() | 0;\n                            if (!(ma(l & 127) | 0)) {\n                                g = 0;\n                            } else {\n                                l = vd(m | 0, j | 0, 52) | 0;\n                                H() | 0;\n                                l = l & 15;\n                                b: do {\n                                    if (!l) {\n                                        g = 0;\n                                    } else {\n                                        k = 1;\n                                        while(1){\n                                            g = vd(m | 0, j | 0, (15 - k | 0) * 3 | 0) | 0;\n                                            H() | 0;\n                                            g = g & 7;\n                                            if (g | 0) {\n                                                break b;\n                                            }\n                                            if (k >>> 0 < l >>> 0) {\n                                                k = k + 1 | 0;\n                                            } else {\n                                                g = 0;\n                                                break;\n                                            }\n                                        }\n                                    }\n                                }while (0);\n                                g = (g | 0) == 0 & 1;\n                            }\n                            j = vd(a | 0, c | 0, (15 - n | 0) * 3 | 0) | 0;\n                            H() | 0;\n                            j = j & 7;\n                            if ((j | 0) == 7) {\n                                f = 5;\n                                k = 42;\n                                break;\n                            }\n                            g = (g | 0) != 0;\n                            if ((j | 0) == 1 & g) {\n                                f = 5;\n                                k = 42;\n                                break;\n                            }\n                            m = j + (((j | 0) != 0 & g) << 31 >> 31) | 0;\n                            if (m | 0) {\n                                k = s - n | 0;\n                                k = Cc(7, 0, k, ((k | 0) < 0) << 31 >> 31) | 0;\n                                l = H() | 0;\n                                if (g) {\n                                    g = rd(k | 0, l | 0, 5, 0) | 0;\n                                    g = ld(g | 0, H() | 0, -5, -1) | 0;\n                                    g = pd(g | 0, H() | 0, 6, 0) | 0;\n                                    g = ld(g | 0, H() | 0, 1, 0) | 0;\n                                    j = H() | 0;\n                                } else {\n                                    g = k;\n                                    j = l;\n                                }\n                                n = m + -1 | 0;\n                                n = rd(k | 0, l | 0, n | 0, ((n | 0) < 0) << 31 >> 31 | 0) | 0;\n                                n = ld(g | 0, j | 0, n | 0, H() | 0) | 0;\n                                m = H() | 0;\n                                l = e;\n                                l = ld(n | 0, m | 0, b[l >> 2] | 0, b[l + 4 >> 2] | 0) | 0;\n                                m = H() | 0;\n                                n = e;\n                                b[n >> 2] = l;\n                                b[n + 4 >> 2] = m;\n                            }\n                            if ((o | 0) <= (d | 0)) {\n                                k = 37;\n                                break;\n                            }\n                        }\n                        if ((k | 0) == 19) {\n                            I(23313, 22674, 1099, 22710);\n                        } else if ((k | 0) == 37) {\n                            h = e;\n                            f = b[h + 4 >> 2] | 0;\n                            h = b[h >> 2] | 0;\n                            break;\n                        } else if ((k | 0) == 42) {\n                            T = t;\n                            return f | 0;\n                        }\n                    } else {\n                        f = 0;\n                        h = 0;\n                    }\n                } else {\n                    k = 33;\n                }\n            }while (0);\n            c: do {\n                if ((k | 0) == 33) {\n                    p = e;\n                    b[p >> 2] = 0;\n                    b[p + 4 >> 2] = 0;\n                    if ((s | 0) > (d | 0)) {\n                        g = s;\n                        while(1){\n                            f = vd(a | 0, c | 0, (15 - g | 0) * 3 | 0) | 0;\n                            H() | 0;\n                            f = f & 7;\n                            if ((f | 0) == 7) {\n                                f = 5;\n                                break;\n                            }\n                            h = s - g | 0;\n                            h = Cc(7, 0, h, ((h | 0) < 0) << 31 >> 31) | 0;\n                            f = rd(h | 0, H() | 0, f | 0, 0) | 0;\n                            h = H() | 0;\n                            p = e;\n                            h = ld(b[p >> 2] | 0, b[p + 4 >> 2] | 0, f | 0, h | 0) | 0;\n                            f = H() | 0;\n                            p = e;\n                            b[p >> 2] = h;\n                            b[p + 4 >> 2] = f;\n                            g = g + -1 | 0;\n                            if ((g | 0) <= (d | 0)) {\n                                break c;\n                            }\n                        }\n                        T = t;\n                        return f | 0;\n                    } else {\n                        f = 0;\n                        h = 0;\n                    }\n                }\n            }while (0);\n            if (wb(q, i, s, r) | 0) {\n                I(23313, 22674, 1063, 22725);\n            }\n            s = r;\n            r = b[s + 4 >> 2] | 0;\n            if (((f | 0) > -1 | (f | 0) == -1 & h >>> 0 > 4294967295) & ((r | 0) > (f | 0) | ((r | 0) == (f | 0) ? (b[s >> 2] | 0) >>> 0 > h >>> 0 : 0))) {\n                s = 0;\n                T = t;\n                return s | 0;\n            } else {\n                I(23313, 22674, 1139, 22710);\n            }\n            return 0;\n        }\n        function Wb(a, c, d, e, f, g) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            g = g | 0;\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0;\n            m = T;\n            T = T + 16 | 0;\n            h = m;\n            if (f >>> 0 > 15) {\n                g = 4;\n                T = m;\n                return g | 0;\n            }\n            i = vd(d | 0, e | 0, 52) | 0;\n            H() | 0;\n            i = i & 15;\n            if ((i | 0) > (f | 0)) {\n                g = 12;\n                T = m;\n                return g | 0;\n            }\n            if (wb(d, e, f, h) | 0) {\n                I(23313, 22674, 1063, 22725);\n            }\n            l = h;\n            k = b[l + 4 >> 2] | 0;\n            if (!(((c | 0) > -1 | (c | 0) == -1 & a >>> 0 > 4294967295) & ((k | 0) > (c | 0) | ((k | 0) == (c | 0) ? (b[l >> 2] | 0) >>> 0 > a >>> 0 : 0)))) {\n                g = 2;\n                T = m;\n                return g | 0;\n            }\n            l = f - i | 0;\n            f = wd(f | 0, 0, 52) | 0;\n            j = H() | 0 | e & -15728641;\n            k = g;\n            b[k >> 2] = f | d;\n            b[k + 4 >> 2] = j;\n            k = vd(d | 0, e | 0, 45) | 0;\n            H() | 0;\n            a: do {\n                if (ma(k & 127) | 0) {\n                    if (i | 0) {\n                        h = 1;\n                        while(1){\n                            k = wd(7, 0, (15 - h | 0) * 3 | 0) | 0;\n                            if (!((k & d | 0) == 0 & ((H() | 0) & e | 0) == 0)) {\n                                break a;\n                            }\n                            if (h >>> 0 < i >>> 0) {\n                                h = h + 1 | 0;\n                            } else {\n                                break;\n                            }\n                        }\n                    }\n                    if ((l | 0) < 1) {\n                        g = 0;\n                        T = m;\n                        return g | 0;\n                    }\n                    k = i ^ 15;\n                    e = -1;\n                    j = 1;\n                    h = 1;\n                    while(1){\n                        i = l - j | 0;\n                        i = Cc(7, 0, i, ((i | 0) < 0) << 31 >> 31) | 0;\n                        d = H() | 0;\n                        do {\n                            if (h) {\n                                h = rd(i | 0, d | 0, 5, 0) | 0;\n                                h = ld(h | 0, H() | 0, -5, -1) | 0;\n                                h = pd(h | 0, H() | 0, 6, 0) | 0;\n                                f = H() | 0;\n                                if ((c | 0) > (f | 0) | (c | 0) == (f | 0) & a >>> 0 > h >>> 0) {\n                                    c = ld(a | 0, c | 0, -1, -1) | 0;\n                                    c = md(c | 0, H() | 0, h | 0, f | 0) | 0;\n                                    h = H() | 0;\n                                    n = g;\n                                    p = b[n >> 2] | 0;\n                                    n = b[n + 4 >> 2] | 0;\n                                    q = (k + e | 0) * 3 | 0;\n                                    o = wd(7, 0, q | 0) | 0;\n                                    n = n & ~(H() | 0);\n                                    e = pd(c | 0, h | 0, i | 0, d | 0) | 0;\n                                    a = H() | 0;\n                                    f = ld(e | 0, a | 0, 2, 0) | 0;\n                                    q = wd(f | 0, H() | 0, q | 0) | 0;\n                                    n = H() | 0 | n;\n                                    f = g;\n                                    b[f >> 2] = q | p & ~o;\n                                    b[f + 4 >> 2] = n;\n                                    a = rd(e | 0, a | 0, i | 0, d | 0) | 0;\n                                    a = md(c | 0, h | 0, a | 0, H() | 0) | 0;\n                                    h = 0;\n                                    c = H() | 0;\n                                    break;\n                                } else {\n                                    q = g;\n                                    o = b[q >> 2] | 0;\n                                    q = b[q + 4 >> 2] | 0;\n                                    p = wd(7, 0, (k + e | 0) * 3 | 0) | 0;\n                                    q = q & ~(H() | 0);\n                                    h = g;\n                                    b[h >> 2] = o & ~p;\n                                    b[h + 4 >> 2] = q;\n                                    h = 1;\n                                    break;\n                                }\n                            } else {\n                                o = g;\n                                f = b[o >> 2] | 0;\n                                o = b[o + 4 >> 2] | 0;\n                                e = (k + e | 0) * 3 | 0;\n                                n = wd(7, 0, e | 0) | 0;\n                                o = o & ~(H() | 0);\n                                q = pd(a | 0, c | 0, i | 0, d | 0) | 0;\n                                h = H() | 0;\n                                e = wd(q | 0, h | 0, e | 0) | 0;\n                                o = H() | 0 | o;\n                                p = g;\n                                b[p >> 2] = e | f & ~n;\n                                b[p + 4 >> 2] = o;\n                                h = rd(q | 0, h | 0, i | 0, d | 0) | 0;\n                                a = md(a | 0, c | 0, h | 0, H() | 0) | 0;\n                                h = 0;\n                                c = H() | 0;\n                            }\n                        }while (0);\n                        if ((l | 0) > (j | 0)) {\n                            e = ~j;\n                            j = j + 1 | 0;\n                        } else {\n                            c = 0;\n                            break;\n                        }\n                    }\n                    T = m;\n                    return c | 0;\n                }\n            }while (0);\n            if ((l | 0) < 1) {\n                q = 0;\n                T = m;\n                return q | 0;\n            }\n            f = i ^ 15;\n            h = 1;\n            while(1){\n                p = l - h | 0;\n                p = Cc(7, 0, p, ((p | 0) < 0) << 31 >> 31) | 0;\n                q = H() | 0;\n                j = g;\n                d = b[j >> 2] | 0;\n                j = b[j + 4 >> 2] | 0;\n                i = (f - h | 0) * 3 | 0;\n                e = wd(7, 0, i | 0) | 0;\n                j = j & ~(H() | 0);\n                n = pd(a | 0, c | 0, p | 0, q | 0) | 0;\n                o = H() | 0;\n                i = wd(n | 0, o | 0, i | 0) | 0;\n                j = H() | 0 | j;\n                k = g;\n                b[k >> 2] = i | d & ~e;\n                b[k + 4 >> 2] = j;\n                q = rd(n | 0, o | 0, p | 0, q | 0) | 0;\n                a = md(a | 0, c | 0, q | 0, H() | 0) | 0;\n                c = H() | 0;\n                if ((l | 0) <= (h | 0)) {\n                    c = 0;\n                    break;\n                } else {\n                    h = h + 1 | 0;\n                }\n            }\n            T = m;\n            return c | 0;\n        }\n        function Xb(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0;\n            f = vd(c | 0, d | 0, 52) | 0;\n            H() | 0;\n            f = f & 15;\n            if ((c | 0) == 0 & (d | 0) == 0 | ((e | 0) > 15 | (f | 0) > (e | 0))) {\n                e = -1;\n                f = -1;\n                c = 0;\n                d = 0;\n            } else {\n                g = zb(c, d, f + 1 | 0, e) | 0;\n                d = (H() | 0) & -15728641;\n                c = wd(e | 0, 0, 52) | 0;\n                c = g | c;\n                d = d | (H() | 0);\n                g = (xb(c, d) | 0) == 0;\n                e = g ? -1 : e;\n            }\n            g = a;\n            b[g >> 2] = c;\n            b[g + 4 >> 2] = d;\n            b[a + 8 >> 2] = f;\n            b[a + 12 >> 2] = e;\n            return;\n        }\n        function Yb(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\n            d = a;\n            c = b[d >> 2] | 0;\n            d = b[d + 4 >> 2] | 0;\n            if ((c | 0) == 0 & (d | 0) == 0) {\n                return;\n            }\n            e = vd(c | 0, d | 0, 52) | 0;\n            H() | 0;\n            e = e & 15;\n            i = wd(1, 0, (e ^ 15) * 3 | 0) | 0;\n            c = ld(i | 0, H() | 0, c | 0, d | 0) | 0;\n            d = H() | 0;\n            i = a;\n            b[i >> 2] = c;\n            b[i + 4 >> 2] = d;\n            i = a + 8 | 0;\n            h = b[i >> 2] | 0;\n            if ((e | 0) < (h | 0)) {\n                return;\n            }\n            j = a + 12 | 0;\n            g = e;\n            while(1){\n                if ((g | 0) == (h | 0)) {\n                    e = 5;\n                    break;\n                }\n                k = (g | 0) == (b[j >> 2] | 0);\n                f = (15 - g | 0) * 3 | 0;\n                e = vd(c | 0, d | 0, f | 0) | 0;\n                H() | 0;\n                e = e & 7;\n                if (k & ((e | 0) == 1 & 0 == 0)) {\n                    e = 7;\n                    break;\n                }\n                if (!((e | 0) == 7 & 0 == 0)) {\n                    e = 10;\n                    break;\n                }\n                k = wd(1, 0, f | 0) | 0;\n                c = ld(c | 0, d | 0, k | 0, H() | 0) | 0;\n                d = H() | 0;\n                k = a;\n                b[k >> 2] = c;\n                b[k + 4 >> 2] = d;\n                if ((g | 0) > (h | 0)) {\n                    g = g + -1 | 0;\n                } else {\n                    e = 10;\n                    break;\n                }\n            }\n            if ((e | 0) == 5) {\n                k = a;\n                b[k >> 2] = 0;\n                b[k + 4 >> 2] = 0;\n                b[i >> 2] = -1;\n                b[j >> 2] = -1;\n                return;\n            } else if ((e | 0) == 7) {\n                h = wd(1, 0, f | 0) | 0;\n                h = ld(c | 0, d | 0, h | 0, H() | 0) | 0;\n                i = H() | 0;\n                k = a;\n                b[k >> 2] = h;\n                b[k + 4 >> 2] = i;\n                b[j >> 2] = g + -1;\n                return;\n            } else if ((e | 0) == 10) {\n                return;\n            }\n        }\n        function Zb(a) {\n            a = +a;\n            var b = 0.0;\n            b = a < 0.0 ? a + 6.283185307179586 : a;\n            return +(!(a >= 6.283185307179586) ? b : b + -6.283185307179586);\n        }\n        function _b(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (!(+q(+(+e[a >> 3] - +e[b >> 3])) < 1.7453292519943298e-11)) {\n                b = 0;\n                return b | 0;\n            }\n            b = +q(+(+e[a + 8 >> 3] - +e[b + 8 >> 3])) < 1.7453292519943298e-11;\n            return b | 0;\n        }\n        function $b(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0, g = 0.0;\n            f = +e[b >> 3];\n            d = +e[a >> 3];\n            g = +u(+((f - d) * .5));\n            c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n            c = g * g + c * (+t(+f) * +t(+d) * c);\n            return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0);\n        }\n        function ac(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0, g = 0.0;\n            f = +e[b >> 3];\n            d = +e[a >> 3];\n            g = +u(+((f - d) * .5));\n            c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n            c = g * g + c * (+t(+f) * +t(+d) * c);\n            return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0 * 6371.007180918475);\n        }\n        function bc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0, g = 0.0;\n            f = +e[b >> 3];\n            d = +e[a >> 3];\n            g = +u(+((f - d) * .5));\n            c = +u(+((+e[b + 8 >> 3] - +e[a + 8 >> 3]) * .5));\n            c = g * g + c * (+t(+f) * +t(+d) * c);\n            return +(+z(+ +r(+c), + +r(+(1.0 - c))) * 2.0 * 6371.007180918475 * 1.0e3);\n        }\n        function cc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0, g = 0.0, h = 0.0;\n            g = +e[b >> 3];\n            d = +t(+g);\n            f = +e[b + 8 >> 3] - +e[a + 8 >> 3];\n            h = d * +u(+f);\n            c = +e[a >> 3];\n            return + +z(+h, +(+u(+g) * +t(+c) - +t(+f) * (d * +u(+c))));\n        }\n        function dc(a, c, d, f) {\n            a = a | 0;\n            c = +c;\n            d = +d;\n            f = f | 0;\n            var g = 0, h = 0.0, i = 0.0, j = 0.0;\n            if (d < 1.0e-16) {\n                b[f >> 2] = b[a >> 2];\n                b[f + 4 >> 2] = b[a + 4 >> 2];\n                b[f + 8 >> 2] = b[a + 8 >> 2];\n                b[f + 12 >> 2] = b[a + 12 >> 2];\n                return;\n            }\n            h = c < 0.0 ? c + 6.283185307179586 : c;\n            h = !(c >= 6.283185307179586) ? h : h + -6.283185307179586;\n            do {\n                if (h < 1.0e-16) {\n                    c = +e[a >> 3] + d;\n                    e[f >> 3] = c;\n                    g = f;\n                } else {\n                    g = +q(+(h + -3.141592653589793)) < 1.0e-16;\n                    c = +e[a >> 3];\n                    if (g) {\n                        c = c - d;\n                        e[f >> 3] = c;\n                        g = f;\n                        break;\n                    }\n                    i = +t(+d);\n                    d = +u(+d);\n                    c = i * +u(+c) + +t(+h) * (d * +t(+c));\n                    c = c > 1.0 ? 1.0 : c;\n                    c = +x(+(c < -1.0 ? -1.0 : c));\n                    e[f >> 3] = c;\n                    if (+q(+(c + -1.5707963267948966)) < 1.0e-16) {\n                        e[f >> 3] = 1.5707963267948966;\n                        e[f + 8 >> 3] = 0.0;\n                        return;\n                    }\n                    if (+q(+(c + 1.5707963267948966)) < 1.0e-16) {\n                        e[f >> 3] = -1.5707963267948966;\n                        e[f + 8 >> 3] = 0.0;\n                        return;\n                    }\n                    j = +t(+c);\n                    h = d * +u(+h) / j;\n                    d = +e[a >> 3];\n                    c = (i - +u(+c) * +u(+d)) / +t(+d) / j;\n                    i = h > 1.0 ? 1.0 : h;\n                    c = c > 1.0 ? 1.0 : c;\n                    c = +e[a + 8 >> 3] + +z(+(i < -1.0 ? -1.0 : i), +(c < -1.0 ? -1.0 : c));\n                    if (c > 3.141592653589793) {\n                        do {\n                            c = c + -6.283185307179586;\n                        }while (c > 3.141592653589793);\n                    }\n                    if (c < -3.141592653589793) {\n                        do {\n                            c = c + 6.283185307179586;\n                        }while (c < -3.141592653589793);\n                    }\n                    e[f + 8 >> 3] = c;\n                    return;\n                }\n            }while (0);\n            if (+q(+(c + -1.5707963267948966)) < 1.0e-16) {\n                e[g >> 3] = 1.5707963267948966;\n                e[f + 8 >> 3] = 0.0;\n                return;\n            }\n            if (+q(+(c + 1.5707963267948966)) < 1.0e-16) {\n                e[g >> 3] = -1.5707963267948966;\n                e[f + 8 >> 3] = 0.0;\n                return;\n            }\n            c = +e[a + 8 >> 3];\n            if (c > 3.141592653589793) {\n                do {\n                    c = c + -6.283185307179586;\n                }while (c > 3.141592653589793);\n            }\n            if (c < -3.141592653589793) {\n                do {\n                    c = c + 6.283185307179586;\n                }while (c < -3.141592653589793);\n            }\n            e[f + 8 >> 3] = c;\n            return;\n        }\n        function ec(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (a >>> 0 > 15) {\n                b = 4;\n                return b | 0;\n            }\n            e[b >> 3] = +e[20528 + (a << 3) >> 3];\n            b = 0;\n            return b | 0;\n        }\n        function fc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (a >>> 0 > 15) {\n                b = 4;\n                return b | 0;\n            }\n            e[b >> 3] = +e[20656 + (a << 3) >> 3];\n            b = 0;\n            return b | 0;\n        }\n        function gc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (a >>> 0 > 15) {\n                b = 4;\n                return b | 0;\n            }\n            e[b >> 3] = +e[20784 + (a << 3) >> 3];\n            b = 0;\n            return b | 0;\n        }\n        function hc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (a >>> 0 > 15) {\n                b = 4;\n                return b | 0;\n            }\n            e[b >> 3] = +e[20912 + (a << 3) >> 3];\n            b = 0;\n            return b | 0;\n        }\n        function ic(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0;\n            if (a >>> 0 > 15) {\n                c = 4;\n                return c | 0;\n            }\n            d = Cc(7, 0, a, ((a | 0) < 0) << 31 >> 31) | 0;\n            d = rd(d | 0, H() | 0, 120, 0) | 0;\n            a = H() | 0;\n            b[c >> 2] = d | 2;\n            b[c + 4 >> 2] = a;\n            c = 0;\n            return c | 0;\n        }\n        function jc(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            var d = 0.0, f = 0.0, g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0.0, n = 0.0;\n            n = +e[b >> 3];\n            l = +e[a >> 3];\n            j = +u(+((n - l) * .5));\n            g = +e[b + 8 >> 3];\n            k = +e[a + 8 >> 3];\n            h = +u(+((g - k) * .5));\n            i = +t(+l);\n            m = +t(+n);\n            h = j * j + h * (m * i * h);\n            h = +z(+ +r(+h), + +r(+(1.0 - h))) * 2.0;\n            j = +e[c >> 3];\n            n = +u(+((j - n) * .5));\n            d = +e[c + 8 >> 3];\n            g = +u(+((d - g) * .5));\n            f = +t(+j);\n            g = n * n + g * (m * f * g);\n            g = +z(+ +r(+g), + +r(+(1.0 - g))) * 2.0;\n            j = +u(+((l - j) * .5));\n            d = +u(+((k - d) * .5));\n            d = j * j + d * (i * f * d);\n            d = +z(+ +r(+d), + +r(+(1.0 - d))) * 2.0;\n            f = (h + g + d) * .5;\n            return +(+y(+ +r(+(+v(+(f * .5)) * +v(+((f - h) * .5)) * +v(+((f - g) * .5)) * +v(+((f - d) * .5))))) * 4.0);\n        }\n        function kc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 192 | 0;\n            h = j + 168 | 0;\n            i = j;\n            g = Pb(a, c, h) | 0;\n            if (g | 0) {\n                d = g;\n                T = j;\n                return d | 0;\n            }\n            if (Qb(a, c, i) | 0) {\n                I(23313, 22742, 386, 22751);\n            }\n            c = b[i >> 2] | 0;\n            if ((c | 0) > 0) {\n                f = +jc(i + 8 | 0, i + 8 + (((c | 0) != 1 & 1) << 4) | 0, h) + 0.0;\n                if ((c | 0) != 1) {\n                    a = 1;\n                    do {\n                        g = a;\n                        a = a + 1 | 0;\n                        f = f + +jc(i + 8 + (g << 4) | 0, i + 8 + (((a | 0) % (c | 0) | 0) << 4) | 0, h);\n                    }while ((a | 0) < (c | 0));\n                }\n            } else {\n                f = 0.0;\n            }\n            e[d >> 3] = f;\n            d = 0;\n            T = j;\n            return d | 0;\n        }\n        function lc(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            a = kc(a, b, c) | 0;\n            if (a | 0) {\n                return a | 0;\n            }\n            e[c >> 3] = +e[c >> 3] * 6371.007180918475 * 6371.007180918475;\n            return a | 0;\n        }\n        function mc(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            a = kc(a, b, c) | 0;\n            if (a | 0) {\n                return a | 0;\n            }\n            e[c >> 3] = +e[c >> 3] * 6371.007180918475 * 6371.007180918475 * 1.0e3 * 1.0e3;\n            return a | 0;\n        }\n        function nc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0.0, h = 0.0, i = 0, j = 0, k = 0.0, l = 0.0, m = 0.0;\n            j = T;\n            T = T + 176 | 0;\n            i = j;\n            a = gb(a, c, i) | 0;\n            if (a | 0) {\n                i = a;\n                T = j;\n                return i | 0;\n            }\n            e[d >> 3] = 0.0;\n            a = b[i >> 2] | 0;\n            if ((a | 0) <= 1) {\n                i = 0;\n                T = j;\n                return i | 0;\n            }\n            c = a + -1 | 0;\n            a = 0;\n            f = +e[i + 8 >> 3];\n            g = +e[i + 16 >> 3];\n            h = 0.0;\n            do {\n                a = a + 1 | 0;\n                l = f;\n                f = +e[i + 8 + (a << 4) >> 3];\n                m = +u(+((f - l) * .5));\n                k = g;\n                g = +e[i + 8 + (a << 4) + 8 >> 3];\n                k = +u(+((g - k) * .5));\n                k = m * m + k * (+t(+f) * +t(+l) * k);\n                h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n            }while ((a | 0) < (c | 0));\n            e[d >> 3] = h;\n            i = 0;\n            T = j;\n            return i | 0;\n        }\n        function oc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0.0, h = 0.0, i = 0, j = 0, k = 0.0, l = 0.0, m = 0.0;\n            j = T;\n            T = T + 176 | 0;\n            i = j;\n            a = gb(a, c, i) | 0;\n            if (a | 0) {\n                i = a;\n                h = +e[d >> 3];\n                h = h * 6371.007180918475;\n                e[d >> 3] = h;\n                T = j;\n                return i | 0;\n            }\n            e[d >> 3] = 0.0;\n            a = b[i >> 2] | 0;\n            if ((a | 0) <= 1) {\n                i = 0;\n                h = 0.0;\n                h = h * 6371.007180918475;\n                e[d >> 3] = h;\n                T = j;\n                return i | 0;\n            }\n            c = a + -1 | 0;\n            a = 0;\n            f = +e[i + 8 >> 3];\n            g = +e[i + 16 >> 3];\n            h = 0.0;\n            do {\n                a = a + 1 | 0;\n                l = f;\n                f = +e[i + 8 + (a << 4) >> 3];\n                m = +u(+((f - l) * .5));\n                k = g;\n                g = +e[i + 8 + (a << 4) + 8 >> 3];\n                k = +u(+((g - k) * .5));\n                k = m * m + k * (+t(+l) * +t(+f) * k);\n                h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n            }while ((a | 0) != (c | 0));\n            e[d >> 3] = h;\n            i = 0;\n            m = h;\n            m = m * 6371.007180918475;\n            e[d >> 3] = m;\n            T = j;\n            return i | 0;\n        }\n        function pc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0.0, h = 0.0, i = 0, j = 0, k = 0.0, l = 0.0, m = 0.0;\n            j = T;\n            T = T + 176 | 0;\n            i = j;\n            a = gb(a, c, i) | 0;\n            if (a | 0) {\n                i = a;\n                h = +e[d >> 3];\n                h = h * 6371.007180918475;\n                h = h * 1.0e3;\n                e[d >> 3] = h;\n                T = j;\n                return i | 0;\n            }\n            e[d >> 3] = 0.0;\n            a = b[i >> 2] | 0;\n            if ((a | 0) <= 1) {\n                i = 0;\n                h = 0.0;\n                h = h * 6371.007180918475;\n                h = h * 1.0e3;\n                e[d >> 3] = h;\n                T = j;\n                return i | 0;\n            }\n            c = a + -1 | 0;\n            a = 0;\n            f = +e[i + 8 >> 3];\n            g = +e[i + 16 >> 3];\n            h = 0.0;\n            do {\n                a = a + 1 | 0;\n                l = f;\n                f = +e[i + 8 + (a << 4) >> 3];\n                m = +u(+((f - l) * .5));\n                k = g;\n                g = +e[i + 8 + (a << 4) + 8 >> 3];\n                k = +u(+((g - k) * .5));\n                k = m * m + k * (+t(+l) * +t(+f) * k);\n                h = h + +z(+ +r(+k), + +r(+(1.0 - k))) * 2.0;\n            }while ((a | 0) != (c | 0));\n            e[d >> 3] = h;\n            i = 0;\n            m = h;\n            m = m * 6371.007180918475;\n            m = m * 1.0e3;\n            e[d >> 3] = m;\n            T = j;\n            return i | 0;\n        }\n        function qc(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0;\n            c = kd(1, 12) | 0;\n            if (!c) {\n                I(22832, 22787, 49, 22845);\n            }\n            d = a + 4 | 0;\n            e = b[d >> 2] | 0;\n            if (e | 0) {\n                e = e + 8 | 0;\n                b[e >> 2] = c;\n                b[d >> 2] = c;\n                return c | 0;\n            }\n            if (b[a >> 2] | 0) {\n                I(22862, 22787, 61, 22885);\n            }\n            e = a;\n            b[e >> 2] = c;\n            b[d >> 2] = c;\n            return c | 0;\n        }\n        function rc(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0;\n            e = id(24) | 0;\n            if (!e) {\n                I(22899, 22787, 78, 22913);\n            }\n            b[e >> 2] = b[c >> 2];\n            b[e + 4 >> 2] = b[c + 4 >> 2];\n            b[e + 8 >> 2] = b[c + 8 >> 2];\n            b[e + 12 >> 2] = b[c + 12 >> 2];\n            b[e + 16 >> 2] = 0;\n            c = a + 4 | 0;\n            d = b[c >> 2] | 0;\n            if (d | 0) {\n                b[d + 16 >> 2] = e;\n                b[c >> 2] = e;\n                return e | 0;\n            }\n            if (b[a >> 2] | 0) {\n                I(22928, 22787, 82, 22913);\n            }\n            b[a >> 2] = e;\n            b[c >> 2] = e;\n            return e | 0;\n        }\n        function sc(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0;\n            if (!a) {\n                return;\n            }\n            e = 1;\n            while(1){\n                c = b[a >> 2] | 0;\n                if (c | 0) {\n                    do {\n                        d = b[c >> 2] | 0;\n                        if (d | 0) {\n                            do {\n                                f = d;\n                                d = b[d + 16 >> 2] | 0;\n                                jd(f);\n                            }while ((d | 0) != 0);\n                        }\n                        f = c;\n                        c = b[c + 8 >> 2] | 0;\n                        jd(f);\n                    }while ((c | 0) != 0);\n                }\n                c = a;\n                a = b[a + 8 >> 2] | 0;\n                if (!e) {\n                    jd(c);\n                }\n                if (!a) {\n                    break;\n                } else {\n                    e = 0;\n                }\n            }\n            return;\n        }\n        function tc(a) {\n            a = a | 0;\n            var c = 0, d = 0, f = 0, g = 0, h = 0.0, i = 0, j = 0.0, k = 0.0, l = 0, m = 0, n = 0, o = 0, p = 0, r = 0, s = 0.0, t = 0.0, u = 0.0, v = 0.0, w = 0.0, x = 0.0, y = 0, z = 0, A = 0, B = 0, C = 0, D = 0, E = 0, F = 0, G = 0, H = 0, J = 0, K = 0;\n            g = a + 8 | 0;\n            if (b[g >> 2] | 0) {\n                K = 1;\n                return K | 0;\n            }\n            f = b[a >> 2] | 0;\n            if (!f) {\n                K = 0;\n                return K | 0;\n            }\n            c = f;\n            d = 0;\n            do {\n                d = d + 1 | 0;\n                c = b[c + 8 >> 2] | 0;\n            }while ((c | 0) != 0);\n            if (d >>> 0 < 2) {\n                K = 0;\n                return K | 0;\n            }\n            H = id(d << 2) | 0;\n            if (!H) {\n                I(22948, 22787, 317, 22967);\n            }\n            G = id(d << 5) | 0;\n            if (!G) {\n                I(22989, 22787, 321, 22967);\n            }\n            b[a >> 2] = 0;\n            z = a + 4 | 0;\n            b[z >> 2] = 0;\n            b[g >> 2] = 0;\n            d = 0;\n            F = 0;\n            y = 0;\n            n = 0;\n            a: while(1){\n                m = b[f >> 2] | 0;\n                if (m) {\n                    h = 0.0;\n                    i = m;\n                    do {\n                        k = +e[i + 8 >> 3];\n                        c = i;\n                        i = b[i + 16 >> 2] | 0;\n                        l = (i | 0) == 0;\n                        g = l ? m : i;\n                        j = +e[g + 8 >> 3];\n                        if (+q(+(k - j)) > 3.141592653589793) {\n                            K = 14;\n                            break;\n                        }\n                        h = h + (j - k) * (+e[c >> 3] + +e[g >> 3]);\n                    }while (!l);\n                    if ((K | 0) == 14) {\n                        K = 0;\n                        h = 0.0;\n                        c = m;\n                        do {\n                            x = +e[c + 8 >> 3];\n                            E = c + 16 | 0;\n                            D = b[E >> 2] | 0;\n                            D = (D | 0) == 0 ? m : D;\n                            w = +e[D + 8 >> 3];\n                            h = h + (+e[c >> 3] + +e[D >> 3]) * ((w < 0.0 ? w + 6.283185307179586 : w) - (x < 0.0 ? x + 6.283185307179586 : x));\n                            c = b[((c | 0) == 0 ? f : E) >> 2] | 0;\n                        }while ((c | 0) != 0);\n                    }\n                    if (h > 0.0) {\n                        b[H + (F << 2) >> 2] = f;\n                        F = F + 1 | 0;\n                        g = y;\n                        c = n;\n                    } else {\n                        K = 19;\n                    }\n                } else {\n                    K = 19;\n                }\n                if ((K | 0) == 19) {\n                    K = 0;\n                    do {\n                        if (!d) {\n                            if (!n) {\n                                if (!(b[a >> 2] | 0)) {\n                                    g = z;\n                                    i = a;\n                                    c = f;\n                                    d = a;\n                                    break;\n                                } else {\n                                    K = 27;\n                                    break a;\n                                }\n                            } else {\n                                g = z;\n                                i = n + 8 | 0;\n                                c = f;\n                                d = a;\n                                break;\n                            }\n                        } else {\n                            c = d + 8 | 0;\n                            if (b[c >> 2] | 0) {\n                                K = 21;\n                                break a;\n                            }\n                            d = kd(1, 12) | 0;\n                            if (!d) {\n                                K = 23;\n                                break a;\n                            }\n                            b[c >> 2] = d;\n                            g = d + 4 | 0;\n                            i = d;\n                            c = n;\n                        }\n                    }while (0);\n                    b[i >> 2] = f;\n                    b[g >> 2] = f;\n                    i = G + (y << 5) | 0;\n                    l = b[f >> 2] | 0;\n                    if (l) {\n                        m = G + (y << 5) + 8 | 0;\n                        e[m >> 3] = 1797693134862315708145274.0e284;\n                        n = G + (y << 5) + 24 | 0;\n                        e[n >> 3] = 1797693134862315708145274.0e284;\n                        e[i >> 3] = -1797693134862315708145274.0e284;\n                        o = G + (y << 5) + 16 | 0;\n                        e[o >> 3] = -1797693134862315708145274.0e284;\n                        u = 1797693134862315708145274.0e284;\n                        v = -1797693134862315708145274.0e284;\n                        g = 0;\n                        p = l;\n                        k = 1797693134862315708145274.0e284;\n                        s = 1797693134862315708145274.0e284;\n                        t = -1797693134862315708145274.0e284;\n                        j = -1797693134862315708145274.0e284;\n                        while(1){\n                            h = +e[p >> 3];\n                            x = +e[p + 8 >> 3];\n                            p = b[p + 16 >> 2] | 0;\n                            r = (p | 0) == 0;\n                            w = +e[(r ? l : p) + 8 >> 3];\n                            if (h < k) {\n                                e[m >> 3] = h;\n                                k = h;\n                            }\n                            if (x < s) {\n                                e[n >> 3] = x;\n                                s = x;\n                            }\n                            if (h > t) {\n                                e[i >> 3] = h;\n                            } else {\n                                h = t;\n                            }\n                            if (x > j) {\n                                e[o >> 3] = x;\n                                j = x;\n                            }\n                            u = x > 0.0 & x < u ? x : u;\n                            v = x < 0.0 & x > v ? x : v;\n                            g = g | +q(+(x - w)) > 3.141592653589793;\n                            if (r) {\n                                break;\n                            } else {\n                                t = h;\n                            }\n                        }\n                        if (g) {\n                            e[o >> 3] = v;\n                            e[n >> 3] = u;\n                        }\n                    } else {\n                        b[i >> 2] = 0;\n                        b[i + 4 >> 2] = 0;\n                        b[i + 8 >> 2] = 0;\n                        b[i + 12 >> 2] = 0;\n                        b[i + 16 >> 2] = 0;\n                        b[i + 20 >> 2] = 0;\n                        b[i + 24 >> 2] = 0;\n                        b[i + 28 >> 2] = 0;\n                    }\n                    g = y + 1 | 0;\n                }\n                E = f + 8 | 0;\n                f = b[E >> 2] | 0;\n                b[E >> 2] = 0;\n                if (!f) {\n                    K = 45;\n                    break;\n                } else {\n                    y = g;\n                    n = c;\n                }\n            }\n            if ((K | 0) == 21) {\n                I(22765, 22787, 35, 22799);\n            } else if ((K | 0) == 23) {\n                I(22819, 22787, 37, 22799);\n            } else if ((K | 0) == 27) {\n                I(22862, 22787, 61, 22885);\n            } else if ((K | 0) == 45) {\n                b: do {\n                    if ((F | 0) > 0) {\n                        E = (g | 0) == 0;\n                        C = g << 2;\n                        D = (a | 0) == 0;\n                        B = 0;\n                        c = 0;\n                        while(1){\n                            A = b[H + (B << 2) >> 2] | 0;\n                            if (!E) {\n                                y = id(C) | 0;\n                                if (!y) {\n                                    K = 50;\n                                    break;\n                                }\n                                z = id(C) | 0;\n                                if (!z) {\n                                    K = 52;\n                                    break;\n                                }\n                                c: do {\n                                    if (!D) {\n                                        g = 0;\n                                        d = 0;\n                                        i = a;\n                                        while(1){\n                                            f = G + (g << 5) | 0;\n                                            if (uc(b[i >> 2] | 0, f, b[A >> 2] | 0) | 0) {\n                                                b[y + (d << 2) >> 2] = i;\n                                                b[z + (d << 2) >> 2] = f;\n                                                r = d + 1 | 0;\n                                            } else {\n                                                r = d;\n                                            }\n                                            i = b[i + 8 >> 2] | 0;\n                                            if (!i) {\n                                                break;\n                                            } else {\n                                                g = g + 1 | 0;\n                                                d = r;\n                                            }\n                                        }\n                                        if ((r | 0) > 0) {\n                                            f = b[y >> 2] | 0;\n                                            if ((r | 0) == 1) {\n                                                d = f;\n                                            } else {\n                                                o = 0;\n                                                p = -1;\n                                                d = f;\n                                                n = f;\n                                                while(1){\n                                                    l = b[n >> 2] | 0;\n                                                    f = 0;\n                                                    i = 0;\n                                                    while(1){\n                                                        g = b[b[y + (i << 2) >> 2] >> 2] | 0;\n                                                        if ((g | 0) == (l | 0)) {\n                                                            m = f;\n                                                        } else {\n                                                            m = f + ((uc(g, b[z + (i << 2) >> 2] | 0, b[l >> 2] | 0) | 0) & 1) | 0;\n                                                        }\n                                                        i = i + 1 | 0;\n                                                        if ((i | 0) == (r | 0)) {\n                                                            break;\n                                                        } else {\n                                                            f = m;\n                                                        }\n                                                    }\n                                                    g = (m | 0) > (p | 0);\n                                                    d = g ? n : d;\n                                                    f = o + 1 | 0;\n                                                    if ((f | 0) == (r | 0)) {\n                                                        break c;\n                                                    }\n                                                    o = f;\n                                                    p = g ? m : p;\n                                                    n = b[y + (f << 2) >> 2] | 0;\n                                                }\n                                            }\n                                        } else {\n                                            d = 0;\n                                        }\n                                    } else {\n                                        d = 0;\n                                    }\n                                }while (0);\n                                jd(y);\n                                jd(z);\n                                if (d) {\n                                    g = d + 4 | 0;\n                                    f = b[g >> 2] | 0;\n                                    if (!f) {\n                                        if (b[d >> 2] | 0) {\n                                            K = 70;\n                                            break;\n                                        }\n                                    } else {\n                                        d = f + 8 | 0;\n                                    }\n                                    b[d >> 2] = A;\n                                    b[g >> 2] = A;\n                                } else {\n                                    K = 73;\n                                }\n                            } else {\n                                K = 73;\n                            }\n                            if ((K | 0) == 73) {\n                                K = 0;\n                                c = b[A >> 2] | 0;\n                                if (c | 0) {\n                                    do {\n                                        z = c;\n                                        c = b[c + 16 >> 2] | 0;\n                                        jd(z);\n                                    }while ((c | 0) != 0);\n                                }\n                                jd(A);\n                                c = 1;\n                            }\n                            B = B + 1 | 0;\n                            if ((B | 0) >= (F | 0)) {\n                                J = c;\n                                break b;\n                            }\n                        }\n                        if ((K | 0) == 50) {\n                            I(23004, 22787, 249, 23023);\n                        } else if ((K | 0) == 52) {\n                            I(23042, 22787, 252, 23023);\n                        } else if ((K | 0) == 70) {\n                            I(22862, 22787, 61, 22885);\n                        }\n                    } else {\n                        J = 0;\n                    }\n                }while (0);\n                jd(H);\n                jd(G);\n                K = J;\n                return K | 0;\n            }\n            return 0;\n        }\n        function uc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0;\n            if (!(ya(c, d) | 0)) {\n                a = 0;\n                return a | 0;\n            }\n            c = xa(c) | 0;\n            f = +e[d >> 3];\n            g = +e[d + 8 >> 3];\n            g = c & g < 0.0 ? g + 6.283185307179586 : g;\n            a = b[a >> 2] | 0;\n            if (!a) {\n                a = 0;\n                return a | 0;\n            }\n            if (c) {\n                c = 0;\n                l = g;\n                d = a;\n                a: while(1){\n                    while(1){\n                        i = +e[d >> 3];\n                        g = +e[d + 8 >> 3];\n                        d = d + 16 | 0;\n                        m = b[d >> 2] | 0;\n                        m = (m | 0) == 0 ? a : m;\n                        h = +e[m >> 3];\n                        j = +e[m + 8 >> 3];\n                        if (i > h) {\n                            k = i;\n                            i = j;\n                        } else {\n                            k = h;\n                            h = i;\n                            i = g;\n                            g = j;\n                        }\n                        f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n                        if (!(f < h | f > k)) {\n                            break;\n                        }\n                        d = b[d >> 2] | 0;\n                        if (!d) {\n                            d = 22;\n                            break a;\n                        }\n                    }\n                    j = i < 0.0 ? i + 6.283185307179586 : i;\n                    i = g < 0.0 ? g + 6.283185307179586 : g;\n                    l = j == l | i == l ? l + -2.220446049250313e-16 : l;\n                    k = j + (i - j) * ((f - h) / (k - h));\n                    if ((k < 0.0 ? k + 6.283185307179586 : k) > l) {\n                        c = c ^ 1;\n                    }\n                    d = b[d >> 2] | 0;\n                    if (!d) {\n                        d = 22;\n                        break;\n                    }\n                }\n                if ((d | 0) == 22) {\n                    return c | 0;\n                }\n            } else {\n                c = 0;\n                l = g;\n                d = a;\n                b: while(1){\n                    while(1){\n                        i = +e[d >> 3];\n                        g = +e[d + 8 >> 3];\n                        d = d + 16 | 0;\n                        m = b[d >> 2] | 0;\n                        m = (m | 0) == 0 ? a : m;\n                        h = +e[m >> 3];\n                        j = +e[m + 8 >> 3];\n                        if (i > h) {\n                            k = i;\n                            i = j;\n                        } else {\n                            k = h;\n                            h = i;\n                            i = g;\n                            g = j;\n                        }\n                        f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n                        if (!(f < h | f > k)) {\n                            break;\n                        }\n                        d = b[d >> 2] | 0;\n                        if (!d) {\n                            d = 22;\n                            break b;\n                        }\n                    }\n                    l = i == l | g == l ? l + -2.220446049250313e-16 : l;\n                    if (i + (g - i) * ((f - h) / (k - h)) > l) {\n                        c = c ^ 1;\n                    }\n                    d = b[d >> 2] | 0;\n                    if (!d) {\n                        d = 22;\n                        break;\n                    }\n                }\n                if ((d | 0) == 22) {\n                    return c | 0;\n                }\n            }\n            return 0;\n        }\n        function vc(c, d, e, f, g) {\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            g = g | 0;\n            var h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n            u = T;\n            T = T + 32 | 0;\n            t = u + 16 | 0;\n            s = u;\n            h = vd(c | 0, d | 0, 52) | 0;\n            H() | 0;\n            h = h & 15;\n            p = vd(e | 0, f | 0, 52) | 0;\n            H() | 0;\n            if ((h | 0) != (p & 15 | 0)) {\n                t = 12;\n                T = u;\n                return t | 0;\n            }\n            l = vd(c | 0, d | 0, 45) | 0;\n            H() | 0;\n            l = l & 127;\n            m = vd(e | 0, f | 0, 45) | 0;\n            H() | 0;\n            m = m & 127;\n            if (l >>> 0 > 121 | m >>> 0 > 121) {\n                t = 5;\n                T = u;\n                return t | 0;\n            }\n            p = (l | 0) != (m | 0);\n            if (p) {\n                j = ua(l, m) | 0;\n                if ((j | 0) == 7) {\n                    t = 1;\n                    T = u;\n                    return t | 0;\n                }\n                k = ua(m, l) | 0;\n                if ((k | 0) == 7) {\n                    I(23066, 23090, 161, 23100);\n                } else {\n                    q = j;\n                    i = k;\n                }\n            } else {\n                q = 0;\n                i = 0;\n            }\n            n = ma(l) | 0;\n            o = ma(m) | 0;\n            b[t >> 2] = 0;\n            b[t + 4 >> 2] = 0;\n            b[t + 8 >> 2] = 0;\n            b[t + 12 >> 2] = 0;\n            do {\n                if (!q) {\n                    Nb(e, f, t) | 0;\n                    if ((n | 0) != 0 & (o | 0) != 0) {\n                        if ((m | 0) != (l | 0)) {\n                            I(23173, 23090, 261, 23100);\n                        }\n                        i = Fb(c, d) | 0;\n                        h = Fb(e, f) | 0;\n                        if (!((i | 0) == 7 | (h | 0) == 7)) {\n                            if (!(a[21872 + (i * 7 | 0) + h >> 0] | 0)) {\n                                i = b[21040 + (i * 28 | 0) + (h << 2) >> 2] | 0;\n                                if ((i | 0) > 0) {\n                                    j = t + 4 | 0;\n                                    h = 0;\n                                    do {\n                                        Ra(j);\n                                        h = h + 1 | 0;\n                                    }while ((h | 0) != (i | 0));\n                                    r = 51;\n                                } else {\n                                    r = 51;\n                                }\n                            } else {\n                                h = 1;\n                            }\n                        } else {\n                            h = 5;\n                        }\n                    } else {\n                        r = 51;\n                    }\n                } else {\n                    m = b[4272 + (l * 28 | 0) + (q << 2) >> 2] | 0;\n                    j = (m | 0) > 0;\n                    if (!o) {\n                        if (j) {\n                            l = 0;\n                            k = e;\n                            j = f;\n                            do {\n                                k = Jb(k, j) | 0;\n                                j = H() | 0;\n                                i = Ta(i) | 0;\n                                l = l + 1 | 0;\n                            }while ((l | 0) != (m | 0));\n                            m = i;\n                            l = k;\n                            k = j;\n                        } else {\n                            m = i;\n                            l = e;\n                            k = f;\n                        }\n                    } else if (j) {\n                        l = 0;\n                        k = e;\n                        j = f;\n                        do {\n                            k = Ib(k, j) | 0;\n                            j = H() | 0;\n                            i = Ta(i) | 0;\n                            if ((i | 0) == 1) {\n                                i = Ta(1) | 0;\n                            }\n                            l = l + 1 | 0;\n                        }while ((l | 0) != (m | 0));\n                        m = i;\n                        l = k;\n                        k = j;\n                    } else {\n                        m = i;\n                        l = e;\n                        k = f;\n                    }\n                    Nb(l, k, t) | 0;\n                    if (!p) {\n                        I(23115, 23090, 191, 23100);\n                    }\n                    j = (n | 0) != 0;\n                    i = (o | 0) != 0;\n                    if (j & i) {\n                        I(23142, 23090, 192, 23100);\n                    }\n                    if (!j) {\n                        if (i) {\n                            i = Fb(l, k) | 0;\n                            if ((i | 0) == 7) {\n                                h = 5;\n                                break;\n                            }\n                            if (a[21872 + (i * 7 | 0) + m >> 0] | 0) {\n                                h = 1;\n                                break;\n                            }\n                            l = 0;\n                            k = b[21040 + (m * 28 | 0) + (i << 2) >> 2] | 0;\n                        } else {\n                            l = 0;\n                            k = 0;\n                        }\n                    } else {\n                        i = Fb(c, d) | 0;\n                        if ((i | 0) == 7) {\n                            h = 5;\n                            break;\n                        }\n                        if (a[21872 + (i * 7 | 0) + q >> 0] | 0) {\n                            h = 1;\n                            break;\n                        }\n                        k = b[21040 + (i * 28 | 0) + (q << 2) >> 2] | 0;\n                        l = k;\n                    }\n                    if ((l | k | 0) < 0) {\n                        h = 5;\n                    } else {\n                        if ((k | 0) > 0) {\n                            j = t + 4 | 0;\n                            i = 0;\n                            do {\n                                Ra(j);\n                                i = i + 1 | 0;\n                            }while ((i | 0) != (k | 0));\n                        }\n                        b[s >> 2] = 0;\n                        b[s + 4 >> 2] = 0;\n                        b[s + 8 >> 2] = 0;\n                        Pa(s, q);\n                        if (h | 0) {\n                            while(1){\n                                if (!(Lb(h) | 0)) {\n                                    Oa(s);\n                                } else {\n                                    Na(s);\n                                }\n                                if ((h | 0) > 1) {\n                                    h = h + -1 | 0;\n                                } else {\n                                    break;\n                                }\n                            }\n                        }\n                        if ((l | 0) > 0) {\n                            h = 0;\n                            do {\n                                Ra(s);\n                                h = h + 1 | 0;\n                            }while ((h | 0) != (l | 0));\n                        }\n                        r = t + 4 | 0;\n                        Fa(r, s, r);\n                        Da(r);\n                        r = 51;\n                    }\n                }\n            }while (0);\n            if ((r | 0) == 51) {\n                h = t + 4 | 0;\n                b[g >> 2] = b[h >> 2];\n                b[g + 4 >> 2] = b[h + 4 >> 2];\n                b[g + 8 >> 2] = b[h + 8 >> 2];\n                h = 0;\n            }\n            t = h;\n            T = u;\n            return t | 0;\n        }\n        function wc(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n            q = T;\n            T = T + 48 | 0;\n            k = q + 36 | 0;\n            h = q + 24 | 0;\n            i = q + 12 | 0;\n            j = q;\n            f = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            f = f & 15;\n            n = vd(a | 0, c | 0, 45) | 0;\n            H() | 0;\n            n = n & 127;\n            if (n >>> 0 > 121) {\n                e = 5;\n                T = q;\n                return e | 0;\n            }\n            l = ma(n) | 0;\n            wd(f | 0, 0, 52) | 0;\n            r = H() | 0 | 134225919;\n            g = e;\n            b[g >> 2] = -1;\n            b[g + 4 >> 2] = r;\n            if (!f) {\n                f = Ia(d) | 0;\n                if ((f | 0) == 7) {\n                    r = 1;\n                    T = q;\n                    return r | 0;\n                }\n                f = ta(n, f) | 0;\n                if ((f | 0) == 127) {\n                    r = 1;\n                    T = q;\n                    return r | 0;\n                }\n                o = wd(f | 0, 0, 45) | 0;\n                p = H() | 0;\n                n = e;\n                p = b[n + 4 >> 2] & -1040385 | p;\n                r = e;\n                b[r >> 2] = b[n >> 2] | o;\n                b[r + 4 >> 2] = p;\n                r = 0;\n                T = q;\n                return r | 0;\n            }\n            b[k >> 2] = b[d >> 2];\n            b[k + 4 >> 2] = b[d + 4 >> 2];\n            b[k + 8 >> 2] = b[d + 8 >> 2];\n            d = f;\n            while(1){\n                g = d;\n                d = d + -1 | 0;\n                b[h >> 2] = b[k >> 2];\n                b[h + 4 >> 2] = b[k + 4 >> 2];\n                b[h + 8 >> 2] = b[k + 8 >> 2];\n                if (!(Lb(g) | 0)) {\n                    f = Ka(k) | 0;\n                    if (f | 0) {\n                        d = 13;\n                        break;\n                    }\n                    b[i >> 2] = b[k >> 2];\n                    b[i + 4 >> 2] = b[k + 4 >> 2];\n                    b[i + 8 >> 2] = b[k + 8 >> 2];\n                    Oa(i);\n                } else {\n                    f = Ja(k) | 0;\n                    if (f | 0) {\n                        d = 13;\n                        break;\n                    }\n                    b[i >> 2] = b[k >> 2];\n                    b[i + 4 >> 2] = b[k + 4 >> 2];\n                    b[i + 8 >> 2] = b[k + 8 >> 2];\n                    Na(i);\n                }\n                Ga(h, i, j);\n                Da(j);\n                f = e;\n                t = b[f >> 2] | 0;\n                f = b[f + 4 >> 2] | 0;\n                u = (15 - g | 0) * 3 | 0;\n                s = wd(7, 0, u | 0) | 0;\n                f = f & ~(H() | 0);\n                u = wd(Ia(j) | 0, 0, u | 0) | 0;\n                f = H() | 0 | f;\n                r = e;\n                b[r >> 2] = u | t & ~s;\n                b[r + 4 >> 2] = f;\n                if ((g | 0) <= 1) {\n                    d = 14;\n                    break;\n                }\n            }\n            a: do {\n                if ((d | 0) != 13) {\n                    if ((d | 0) == 14) {\n                        if (((b[k >> 2] | 0) <= 1 ? (b[k + 4 >> 2] | 0) <= 1 : 0) ? (b[k + 8 >> 2] | 0) <= 1 : 0) {\n                            d = Ia(k) | 0;\n                            f = ta(n, d) | 0;\n                            if ((f | 0) == 127) {\n                                j = 0;\n                            } else {\n                                j = ma(f) | 0;\n                            }\n                            b: do {\n                                if (!d) {\n                                    if ((l | 0) != 0 & (j | 0) != 0) {\n                                        d = Fb(a, c) | 0;\n                                        g = e;\n                                        g = Fb(b[g >> 2] | 0, b[g + 4 >> 2] | 0) | 0;\n                                        if ((d | 0) == 7 | (g | 0) == 7) {\n                                            f = 5;\n                                            break a;\n                                        }\n                                        g = b[21248 + (d * 28 | 0) + (g << 2) >> 2] | 0;\n                                        if ((g | 0) < 0) {\n                                            f = 5;\n                                            break a;\n                                        }\n                                        if (!g) {\n                                            d = 59;\n                                        } else {\n                                            i = e;\n                                            d = 0;\n                                            h = b[i >> 2] | 0;\n                                            i = b[i + 4 >> 2] | 0;\n                                            do {\n                                                h = Hb(h, i) | 0;\n                                                i = H() | 0;\n                                                u = e;\n                                                b[u >> 2] = h;\n                                                b[u + 4 >> 2] = i;\n                                                d = d + 1 | 0;\n                                            }while ((d | 0) < (g | 0));\n                                            d = 58;\n                                        }\n                                    } else {\n                                        d = 58;\n                                    }\n                                } else {\n                                    if (l) {\n                                        f = Fb(a, c) | 0;\n                                        if ((f | 0) == 7) {\n                                            f = 5;\n                                            break a;\n                                        }\n                                        g = b[21248 + (f * 28 | 0) + (d << 2) >> 2] | 0;\n                                        if ((g | 0) > 0) {\n                                            f = d;\n                                            d = 0;\n                                            do {\n                                                f = Sa(f) | 0;\n                                                d = d + 1 | 0;\n                                            }while ((d | 0) != (g | 0));\n                                        } else {\n                                            f = d;\n                                        }\n                                        if ((f | 0) == 1) {\n                                            f = 9;\n                                            break a;\n                                        }\n                                        d = ta(n, f) | 0;\n                                        if ((d | 0) == 127) {\n                                            I(23200, 23090, 411, 23230);\n                                        }\n                                        if (!(ma(d) | 0)) {\n                                            p = d;\n                                            o = g;\n                                            m = f;\n                                        } else {\n                                            I(23245, 23090, 412, 23230);\n                                        }\n                                    } else {\n                                        p = f;\n                                        o = 0;\n                                        m = d;\n                                    }\n                                    i = b[4272 + (n * 28 | 0) + (m << 2) >> 2] | 0;\n                                    if ((i | 0) <= -1) {\n                                        I(23276, 23090, 419, 23230);\n                                    }\n                                    if (!j) {\n                                        if ((o | 0) < 0) {\n                                            f = 5;\n                                            break a;\n                                        }\n                                        if (o | 0) {\n                                            g = e;\n                                            f = 0;\n                                            d = b[g >> 2] | 0;\n                                            g = b[g + 4 >> 2] | 0;\n                                            do {\n                                                d = Hb(d, g) | 0;\n                                                g = H() | 0;\n                                                u = e;\n                                                b[u >> 2] = d;\n                                                b[u + 4 >> 2] = g;\n                                                f = f + 1 | 0;\n                                            }while ((f | 0) < (o | 0));\n                                        }\n                                        if ((i | 0) <= 0) {\n                                            f = p;\n                                            d = 58;\n                                            break;\n                                        }\n                                        g = e;\n                                        f = 0;\n                                        d = b[g >> 2] | 0;\n                                        g = b[g + 4 >> 2] | 0;\n                                        while(1){\n                                            d = Hb(d, g) | 0;\n                                            g = H() | 0;\n                                            u = e;\n                                            b[u >> 2] = d;\n                                            b[u + 4 >> 2] = g;\n                                            f = f + 1 | 0;\n                                            if ((f | 0) == (i | 0)) {\n                                                f = p;\n                                                d = 58;\n                                                break b;\n                                            }\n                                        }\n                                    }\n                                    h = ua(p, n) | 0;\n                                    if ((h | 0) == 7) {\n                                        I(23066, 23090, 428, 23230);\n                                    }\n                                    f = e;\n                                    d = b[f >> 2] | 0;\n                                    f = b[f + 4 >> 2] | 0;\n                                    if ((i | 0) > 0) {\n                                        g = 0;\n                                        do {\n                                            d = Hb(d, f) | 0;\n                                            f = H() | 0;\n                                            u = e;\n                                            b[u >> 2] = d;\n                                            b[u + 4 >> 2] = f;\n                                            g = g + 1 | 0;\n                                        }while ((g | 0) != (i | 0));\n                                    }\n                                    f = Fb(d, f) | 0;\n                                    if ((f | 0) == 7) {\n                                        I(23313, 23090, 440, 23230);\n                                    }\n                                    d = na(p) | 0;\n                                    d = b[(d ? 21664 : 21456) + (h * 28 | 0) + (f << 2) >> 2] | 0;\n                                    if ((d | 0) < 0) {\n                                        I(23313, 23090, 454, 23230);\n                                    }\n                                    if (!d) {\n                                        f = p;\n                                        d = 58;\n                                    } else {\n                                        h = e;\n                                        f = 0;\n                                        g = b[h >> 2] | 0;\n                                        h = b[h + 4 >> 2] | 0;\n                                        do {\n                                            g = Gb(g, h) | 0;\n                                            h = H() | 0;\n                                            u = e;\n                                            b[u >> 2] = g;\n                                            b[u + 4 >> 2] = h;\n                                            f = f + 1 | 0;\n                                        }while ((f | 0) < (d | 0));\n                                        f = p;\n                                        d = 58;\n                                    }\n                                }\n                            }while (0);\n                            if ((d | 0) == 58) {\n                                if (j) {\n                                    d = 59;\n                                }\n                            }\n                            if ((d | 0) == 59) {\n                                u = e;\n                                if ((Fb(b[u >> 2] | 0, b[u + 4 >> 2] | 0) | 0) == 1) {\n                                    f = 9;\n                                    break;\n                                }\n                            }\n                            u = e;\n                            s = b[u >> 2] | 0;\n                            u = b[u + 4 >> 2] & -1040385;\n                            t = wd(f | 0, 0, 45) | 0;\n                            u = u | (H() | 0);\n                            f = e;\n                            b[f >> 2] = s | t;\n                            b[f + 4 >> 2] = u;\n                            f = 0;\n                        } else {\n                            f = 1;\n                        }\n                    }\n                }\n            }while (0);\n            u = f;\n            T = q;\n            return u | 0;\n        }\n        function xc(a, b, c, d, e, f) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0;\n            h = T;\n            T = T + 16 | 0;\n            g = h;\n            if (!e) {\n                a = vc(a, b, c, d, g) | 0;\n                if (!a) {\n                    Xa(g, f);\n                    a = 0;\n                }\n            } else {\n                a = 15;\n            }\n            T = h;\n            return a | 0;\n        }\n        function yc(a, b, c, d, e) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0;\n            g = T;\n            T = T + 16 | 0;\n            f = g;\n            if (!d) {\n                c = Ya(c, f) | 0;\n                if (!c) {\n                    c = wc(a, b, f, e) | 0;\n                }\n            } else {\n                c = 15;\n            }\n            T = g;\n            return c | 0;\n        }\n        function zc(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 32 | 0;\n            h = j + 12 | 0;\n            i = j;\n            g = vc(a, c, a, c, h) | 0;\n            if (g | 0) {\n                i = g;\n                T = j;\n                return i | 0;\n            }\n            a = vc(a, c, d, e, i) | 0;\n            if (a | 0) {\n                i = a;\n                T = j;\n                return i | 0;\n            }\n            h = Wa(h, i) | 0;\n            i = f;\n            b[i >> 2] = h;\n            b[i + 4 >> 2] = ((h | 0) < 0) << 31 >> 31;\n            i = 0;\n            T = j;\n            return i | 0;\n        }\n        function Ac(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 32 | 0;\n            h = j + 12 | 0;\n            i = j;\n            g = vc(a, c, a, c, h) | 0;\n            if (!g) {\n                g = vc(a, c, d, e, i) | 0;\n                if (!g) {\n                    e = Wa(h, i) | 0;\n                    e = ld(e | 0, ((e | 0) < 0) << 31 >> 31 | 0, 1, 0) | 0;\n                    h = H() | 0;\n                    i = f;\n                    b[i >> 2] = e;\n                    b[i + 4 >> 2] = h;\n                    i = 0;\n                    T = j;\n                    return i | 0;\n                }\n            }\n            i = g;\n            T = j;\n            return i | 0;\n        }\n        function Bc(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0.0, k = 0.0, l = 0, m = 0, n = 0, o = 0, p = 0.0, r = 0.0, s = 0.0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0.0;\n            z = T;\n            T = T + 48 | 0;\n            h = z + 24 | 0;\n            i = z + 12 | 0;\n            y = z;\n            g = vc(a, c, a, c, h) | 0;\n            if (!g) {\n                g = vc(a, c, d, e, i) | 0;\n                if (!g) {\n                    w = Wa(h, i) | 0;\n                    x = ((w | 0) < 0) << 31 >> 31;\n                    b[h >> 2] = 0;\n                    b[h + 4 >> 2] = 0;\n                    b[h + 8 >> 2] = 0;\n                    b[i >> 2] = 0;\n                    b[i + 4 >> 2] = 0;\n                    b[i + 8 >> 2] = 0;\n                    if (vc(a, c, a, c, h) | 0) {\n                        I(23313, 23090, 691, 23299);\n                    }\n                    if (vc(a, c, d, e, i) | 0) {\n                        I(23313, 23090, 696, 23299);\n                    }\n                    Za(h);\n                    Za(i);\n                    if (!w) {\n                        g = h + 4 | 0;\n                        d = h + 8 | 0;\n                        t = g;\n                        u = d;\n                        v = h;\n                        e = b[h >> 2] | 0;\n                        g = b[g >> 2] | 0;\n                        d = b[d >> 2] | 0;\n                        r = 0.0;\n                        s = 0.0;\n                        p = 0.0;\n                    } else {\n                        m = b[h >> 2] | 0;\n                        p = +(w | 0);\n                        t = h + 4 | 0;\n                        n = b[t >> 2] | 0;\n                        u = h + 8 | 0;\n                        o = b[u >> 2] | 0;\n                        v = h;\n                        e = m;\n                        g = n;\n                        d = o;\n                        r = +((b[i >> 2] | 0) - m | 0) / p;\n                        s = +((b[i + 4 >> 2] | 0) - n | 0) / p;\n                        p = +((b[i + 8 >> 2] | 0) - o | 0) / p;\n                    }\n                    b[y >> 2] = e;\n                    o = y + 4 | 0;\n                    b[o >> 2] = g;\n                    n = y + 8 | 0;\n                    b[n >> 2] = d;\n                    a: do {\n                        if ((w | 0) < 0) {\n                            g = 0;\n                        } else {\n                            l = 0;\n                            m = 0;\n                            g = e;\n                            while(1){\n                                k = +(m >>> 0) + 4294967296.0 * +(l | 0);\n                                A = r * k + +(g | 0);\n                                j = s * k + +(b[t >> 2] | 0);\n                                k = p * k + +(b[u >> 2] | 0);\n                                d = ~~+zd(+A);\n                                h = ~~+zd(+j);\n                                g = ~~+zd(+k);\n                                A = +q(+(+(d | 0) - A));\n                                j = +q(+(+(h | 0) - j));\n                                k = +q(+(+(g | 0) - k));\n                                do {\n                                    if (!(A > j & A > k)) {\n                                        i = 0 - d | 0;\n                                        if (j > k) {\n                                            e = i - g | 0;\n                                            break;\n                                        } else {\n                                            e = h;\n                                            g = i - h | 0;\n                                            break;\n                                        }\n                                    } else {\n                                        d = 0 - (h + g) | 0;\n                                        e = h;\n                                    }\n                                }while (0);\n                                b[y >> 2] = d;\n                                b[o >> 2] = e;\n                                b[n >> 2] = g;\n                                _a(y);\n                                g = wc(a, c, y, f + (m << 3) | 0) | 0;\n                                if (g | 0) {\n                                    break a;\n                                }\n                                if (!((l | 0) < (x | 0) | (l | 0) == (x | 0) & m >>> 0 < w >>> 0)) {\n                                    g = 0;\n                                    break a;\n                                }\n                                g = ld(m | 0, l | 0, 1, 0) | 0;\n                                i = H() | 0;\n                                l = i;\n                                m = g;\n                                g = b[v >> 2] | 0;\n                            }\n                        }\n                    }while (0);\n                    y = g;\n                    T = z;\n                    return y | 0;\n                }\n            }\n            y = g;\n            T = z;\n            return y | 0;\n        }\n        function Cc(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            if ((c | 0) == 0 & (d | 0) == 0) {\n                e = 0;\n                f = 1;\n                G(e | 0);\n                return f | 0;\n            }\n            f = a;\n            e = b;\n            a = 1;\n            b = 0;\n            do {\n                g = (c & 1 | 0) == 0 & 0 == 0;\n                a = rd((g ? 1 : f) | 0, (g ? 0 : e) | 0, a | 0, b | 0) | 0;\n                b = H() | 0;\n                c = ud(c | 0, d | 0, 1) | 0;\n                d = H() | 0;\n                f = rd(f | 0, e | 0, f | 0, e | 0) | 0;\n                e = H() | 0;\n            }while (!((c | 0) == 0 & (d | 0) == 0));\n            G(b | 0);\n            return a | 0;\n        }\n        function Dc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0.0, g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0, m = 0.0, n = 0, o = 0;\n            if (!(ya(c, d) | 0)) {\n                o = 0;\n                return o | 0;\n            }\n            c = xa(c) | 0;\n            f = +e[d >> 3];\n            g = +e[d + 8 >> 3];\n            g = c & g < 0.0 ? g + 6.283185307179586 : g;\n            o = b[a >> 2] | 0;\n            if ((o | 0) <= 0) {\n                o = 0;\n                return o | 0;\n            }\n            n = b[a + 4 >> 2] | 0;\n            if (c) {\n                c = 0;\n                m = g;\n                d = -1;\n                a = 0;\n                a: while(1){\n                    l = a;\n                    while(1){\n                        i = +e[n + (l << 4) >> 3];\n                        g = +e[n + (l << 4) + 8 >> 3];\n                        a = (d + 2 | 0) % (o | 0) | 0;\n                        h = +e[n + (a << 4) >> 3];\n                        j = +e[n + (a << 4) + 8 >> 3];\n                        if (i > h) {\n                            k = i;\n                            i = j;\n                        } else {\n                            k = h;\n                            h = i;\n                            i = g;\n                            g = j;\n                        }\n                        f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n                        if (!(f < h | f > k)) {\n                            break;\n                        }\n                        d = l + 1 | 0;\n                        if ((d | 0) >= (o | 0)) {\n                            d = 22;\n                            break a;\n                        } else {\n                            a = l;\n                            l = d;\n                            d = a;\n                        }\n                    }\n                    j = i < 0.0 ? i + 6.283185307179586 : i;\n                    i = g < 0.0 ? g + 6.283185307179586 : g;\n                    m = j == m | i == m ? m + -2.220446049250313e-16 : m;\n                    k = j + (i - j) * ((f - h) / (k - h));\n                    if ((k < 0.0 ? k + 6.283185307179586 : k) > m) {\n                        c = c ^ 1;\n                    }\n                    a = l + 1 | 0;\n                    if ((a | 0) >= (o | 0)) {\n                        d = 22;\n                        break;\n                    } else {\n                        d = l;\n                    }\n                }\n                if ((d | 0) == 22) {\n                    return c | 0;\n                }\n            } else {\n                c = 0;\n                m = g;\n                d = -1;\n                a = 0;\n                b: while(1){\n                    l = a;\n                    while(1){\n                        i = +e[n + (l << 4) >> 3];\n                        g = +e[n + (l << 4) + 8 >> 3];\n                        a = (d + 2 | 0) % (o | 0) | 0;\n                        h = +e[n + (a << 4) >> 3];\n                        j = +e[n + (a << 4) + 8 >> 3];\n                        if (i > h) {\n                            k = i;\n                            i = j;\n                        } else {\n                            k = h;\n                            h = i;\n                            i = g;\n                            g = j;\n                        }\n                        f = f == h | f == k ? f + 2.220446049250313e-16 : f;\n                        if (!(f < h | f > k)) {\n                            break;\n                        }\n                        d = l + 1 | 0;\n                        if ((d | 0) >= (o | 0)) {\n                            d = 22;\n                            break b;\n                        } else {\n                            a = l;\n                            l = d;\n                            d = a;\n                        }\n                    }\n                    m = i == m | g == m ? m + -2.220446049250313e-16 : m;\n                    if (i + (g - i) * ((f - h) / (k - h)) > m) {\n                        c = c ^ 1;\n                    }\n                    a = l + 1 | 0;\n                    if ((a | 0) >= (o | 0)) {\n                        d = 22;\n                        break;\n                    } else {\n                        d = l;\n                    }\n                }\n                if ((d | 0) == 22) {\n                    return c | 0;\n                }\n            }\n            return 0;\n        }\n        function Ec(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0.0, f = 0.0, g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0.0, n = 0, o = 0, p = 0, r = 0, s = 0, t = 0, u = 0, v = 0;\n            r = b[a >> 2] | 0;\n            if (!r) {\n                b[c >> 2] = 0;\n                b[c + 4 >> 2] = 0;\n                b[c + 8 >> 2] = 0;\n                b[c + 12 >> 2] = 0;\n                b[c + 16 >> 2] = 0;\n                b[c + 20 >> 2] = 0;\n                b[c + 24 >> 2] = 0;\n                b[c + 28 >> 2] = 0;\n                return;\n            }\n            s = c + 8 | 0;\n            e[s >> 3] = 1797693134862315708145274.0e284;\n            t = c + 24 | 0;\n            e[t >> 3] = 1797693134862315708145274.0e284;\n            e[c >> 3] = -1797693134862315708145274.0e284;\n            u = c + 16 | 0;\n            e[u >> 3] = -1797693134862315708145274.0e284;\n            if ((r | 0) <= 0) {\n                return;\n            }\n            o = b[a + 4 >> 2] | 0;\n            l = 1797693134862315708145274.0e284;\n            m = -1797693134862315708145274.0e284;\n            n = 0;\n            a = -1;\n            h = 1797693134862315708145274.0e284;\n            i = 1797693134862315708145274.0e284;\n            k = -1797693134862315708145274.0e284;\n            f = -1797693134862315708145274.0e284;\n            p = 0;\n            while(1){\n                d = +e[o + (p << 4) >> 3];\n                j = +e[o + (p << 4) + 8 >> 3];\n                a = a + 2 | 0;\n                g = +e[o + (((a | 0) == (r | 0) ? 0 : a) << 4) + 8 >> 3];\n                if (d < h) {\n                    e[s >> 3] = d;\n                    h = d;\n                }\n                if (j < i) {\n                    e[t >> 3] = j;\n                    i = j;\n                }\n                if (d > k) {\n                    e[c >> 3] = d;\n                } else {\n                    d = k;\n                }\n                if (j > f) {\n                    e[u >> 3] = j;\n                    f = j;\n                }\n                l = j > 0.0 & j < l ? j : l;\n                m = j < 0.0 & j > m ? j : m;\n                n = n | +q(+(j - g)) > 3.141592653589793;\n                a = p + 1 | 0;\n                if ((a | 0) == (r | 0)) {\n                    break;\n                } else {\n                    v = p;\n                    k = d;\n                    p = a;\n                    a = v;\n                }\n            }\n            if (!n) {\n                return;\n            }\n            e[u >> 3] = m;\n            e[t >> 3] = l;\n            return;\n        }\n        function Fc(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, f = 0, g = 0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0.0, n = 0.0, o = 0.0, p = 0.0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0, x = 0, y = 0, z = 0, A = 0;\n            r = b[a >> 2] | 0;\n            if (r) {\n                s = c + 8 | 0;\n                e[s >> 3] = 1797693134862315708145274.0e284;\n                t = c + 24 | 0;\n                e[t >> 3] = 1797693134862315708145274.0e284;\n                e[c >> 3] = -1797693134862315708145274.0e284;\n                u = c + 16 | 0;\n                e[u >> 3] = -1797693134862315708145274.0e284;\n                if ((r | 0) > 0) {\n                    g = b[a + 4 >> 2] | 0;\n                    o = 1797693134862315708145274.0e284;\n                    p = -1797693134862315708145274.0e284;\n                    f = 0;\n                    d = -1;\n                    k = 1797693134862315708145274.0e284;\n                    l = 1797693134862315708145274.0e284;\n                    n = -1797693134862315708145274.0e284;\n                    i = -1797693134862315708145274.0e284;\n                    v = 0;\n                    while(1){\n                        h = +e[g + (v << 4) >> 3];\n                        m = +e[g + (v << 4) + 8 >> 3];\n                        z = d + 2 | 0;\n                        j = +e[g + (((z | 0) == (r | 0) ? 0 : z) << 4) + 8 >> 3];\n                        if (h < k) {\n                            e[s >> 3] = h;\n                            k = h;\n                        }\n                        if (m < l) {\n                            e[t >> 3] = m;\n                            l = m;\n                        }\n                        if (h > n) {\n                            e[c >> 3] = h;\n                        } else {\n                            h = n;\n                        }\n                        if (m > i) {\n                            e[u >> 3] = m;\n                            i = m;\n                        }\n                        o = m > 0.0 & m < o ? m : o;\n                        p = m < 0.0 & m > p ? m : p;\n                        f = f | +q(+(m - j)) > 3.141592653589793;\n                        d = v + 1 | 0;\n                        if ((d | 0) == (r | 0)) {\n                            break;\n                        } else {\n                            z = v;\n                            n = h;\n                            v = d;\n                            d = z;\n                        }\n                    }\n                    if (f) {\n                        e[u >> 3] = p;\n                        e[t >> 3] = o;\n                    }\n                }\n            } else {\n                b[c >> 2] = 0;\n                b[c + 4 >> 2] = 0;\n                b[c + 8 >> 2] = 0;\n                b[c + 12 >> 2] = 0;\n                b[c + 16 >> 2] = 0;\n                b[c + 20 >> 2] = 0;\n                b[c + 24 >> 2] = 0;\n                b[c + 28 >> 2] = 0;\n            }\n            z = a + 8 | 0;\n            d = b[z >> 2] | 0;\n            if ((d | 0) <= 0) {\n                return;\n            }\n            y = a + 12 | 0;\n            x = 0;\n            do {\n                g = b[y >> 2] | 0;\n                f = x;\n                x = x + 1 | 0;\n                t = c + (x << 5) | 0;\n                u = b[g + (f << 3) >> 2] | 0;\n                if (u) {\n                    v = c + (x << 5) + 8 | 0;\n                    e[v >> 3] = 1797693134862315708145274.0e284;\n                    a = c + (x << 5) + 24 | 0;\n                    e[a >> 3] = 1797693134862315708145274.0e284;\n                    e[t >> 3] = -1797693134862315708145274.0e284;\n                    w = c + (x << 5) + 16 | 0;\n                    e[w >> 3] = -1797693134862315708145274.0e284;\n                    if ((u | 0) > 0) {\n                        r = b[g + (f << 3) + 4 >> 2] | 0;\n                        o = 1797693134862315708145274.0e284;\n                        p = -1797693134862315708145274.0e284;\n                        g = 0;\n                        f = -1;\n                        s = 0;\n                        k = 1797693134862315708145274.0e284;\n                        l = 1797693134862315708145274.0e284;\n                        m = -1797693134862315708145274.0e284;\n                        i = -1797693134862315708145274.0e284;\n                        while(1){\n                            h = +e[r + (s << 4) >> 3];\n                            n = +e[r + (s << 4) + 8 >> 3];\n                            f = f + 2 | 0;\n                            j = +e[r + (((f | 0) == (u | 0) ? 0 : f) << 4) + 8 >> 3];\n                            if (h < k) {\n                                e[v >> 3] = h;\n                                k = h;\n                            }\n                            if (n < l) {\n                                e[a >> 3] = n;\n                                l = n;\n                            }\n                            if (h > m) {\n                                e[t >> 3] = h;\n                            } else {\n                                h = m;\n                            }\n                            if (n > i) {\n                                e[w >> 3] = n;\n                                i = n;\n                            }\n                            o = n > 0.0 & n < o ? n : o;\n                            p = n < 0.0 & n > p ? n : p;\n                            g = g | +q(+(n - j)) > 3.141592653589793;\n                            f = s + 1 | 0;\n                            if ((f | 0) == (u | 0)) {\n                                break;\n                            } else {\n                                A = s;\n                                s = f;\n                                m = h;\n                                f = A;\n                            }\n                        }\n                        if (g) {\n                            e[w >> 3] = p;\n                            e[a >> 3] = o;\n                        }\n                    }\n                } else {\n                    b[t >> 2] = 0;\n                    b[t + 4 >> 2] = 0;\n                    b[t + 8 >> 2] = 0;\n                    b[t + 12 >> 2] = 0;\n                    b[t + 16 >> 2] = 0;\n                    b[t + 20 >> 2] = 0;\n                    b[t + 24 >> 2] = 0;\n                    b[t + 28 >> 2] = 0;\n                    d = b[z >> 2] | 0;\n                }\n            }while ((x | 0) < (d | 0));\n            return;\n        }\n        function Gc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            if (!(Dc(a, c, d) | 0)) {\n                f = 0;\n                return f | 0;\n            }\n            f = a + 8 | 0;\n            if ((b[f >> 2] | 0) <= 0) {\n                f = 1;\n                return f | 0;\n            }\n            e = a + 12 | 0;\n            a = 0;\n            while(1){\n                g = a;\n                a = a + 1 | 0;\n                if (Dc((b[e >> 2] | 0) + (g << 3) | 0, c + (a << 5) | 0, d) | 0) {\n                    a = 0;\n                    e = 6;\n                    break;\n                }\n                if ((a | 0) >= (b[f >> 2] | 0)) {\n                    a = 1;\n                    e = 6;\n                    break;\n                }\n            }\n            if ((e | 0) == 6) {\n                return a | 0;\n            }\n            return 0;\n        }\n        function Hc() {\n            return 8;\n        }\n        function Ic() {\n            return 16;\n        }\n        function Jc() {\n            return 168;\n        }\n        function Kc() {\n            return 8;\n        }\n        function Lc() {\n            return 16;\n        }\n        function Mc() {\n            return 12;\n        }\n        function Nc() {\n            return 8;\n        }\n        function Oc(a) {\n            a = a | 0;\n            return +(+((b[a >> 2] | 0) >>> 0) + 4294967296.0 * +(b[a + 4 >> 2] | 0));\n        }\n        function Pc(a) {\n            a = a | 0;\n            var b = 0.0, c = 0.0;\n            c = +e[a >> 3];\n            b = +e[a + 8 >> 3];\n            return + +r(+(c * c + b * b));\n        }\n        function Qc(a, b, c, d, f) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            f = f | 0;\n            var g = 0.0, h = 0.0, i = 0.0, j = 0.0, k = 0.0, l = 0.0, m = 0.0, n = 0.0;\n            k = +e[a >> 3];\n            j = +e[b >> 3] - k;\n            i = +e[a + 8 >> 3];\n            h = +e[b + 8 >> 3] - i;\n            m = +e[c >> 3];\n            g = +e[d >> 3] - m;\n            n = +e[c + 8 >> 3];\n            l = +e[d + 8 >> 3] - n;\n            g = (g * (i - n) - (k - m) * l) / (j * l - h * g);\n            e[f >> 3] = k + j * g;\n            e[f + 8 >> 3] = i + h * g;\n            return;\n        }\n        function Rc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            if (!(+q(+(+e[a >> 3] - +e[b >> 3])) < 1.1920928955078125e-07)) {\n                b = 0;\n                return b | 0;\n            }\n            b = +q(+(+e[a + 8 >> 3] - +e[b + 8 >> 3])) < 1.1920928955078125e-07;\n            return b | 0;\n        }\n        function Sc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0;\n            f = +e[a >> 3] - +e[b >> 3];\n            d = +e[a + 8 >> 3] - +e[b + 8 >> 3];\n            c = +e[a + 16 >> 3] - +e[b + 16 >> 3];\n            return +(f * f + d * d + c * c);\n        }\n        function Tc(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0.0, d = 0.0, f = 0.0;\n            c = +e[a >> 3];\n            d = +t(+c);\n            c = +u(+c);\n            e[b + 16 >> 3] = c;\n            c = +e[a + 8 >> 3];\n            f = d * +t(+c);\n            e[b >> 3] = f;\n            c = d * +u(+c);\n            e[b + 8 >> 3] = c;\n            return;\n        }\n        function Uc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            g = T;\n            T = T + 16 | 0;\n            f = g;\n            e = xb(a, c) | 0;\n            if ((d + -1 | 0) >>> 0 > 5) {\n                f = -1;\n                T = g;\n                return f | 0;\n            }\n            e = (e | 0) != 0;\n            if ((d | 0) == 1 & e) {\n                f = -1;\n                T = g;\n                return f | 0;\n            }\n            do {\n                if (!(Vc(a, c, f) | 0)) {\n                    if (e) {\n                        e = ((b[21936 + (d << 2) >> 2] | 0) + 5 - (b[f >> 2] | 0) | 0) % 5 | 0;\n                        break;\n                    } else {\n                        e = ((b[21968 + (d << 2) >> 2] | 0) + 6 - (b[f >> 2] | 0) | 0) % 6 | 0;\n                        break;\n                    }\n                } else {\n                    e = -1;\n                }\n            }while (0);\n            f = e;\n            T = g;\n            return f | 0;\n        }\n        function Vc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\n            k = T;\n            T = T + 32 | 0;\n            h = k + 16 | 0;\n            i = k;\n            e = Ob(a, c, h) | 0;\n            if (e | 0) {\n                d = e;\n                T = k;\n                return d | 0;\n            }\n            g = tb(a, c) | 0;\n            j = Fb(a, c) | 0;\n            qa(g, i);\n            e = ra(g, b[h >> 2] | 0) | 0;\n            a: do {\n                if (ma(g) | 0) {\n                    do {\n                        switch(g | 0){\n                            case 4:\n                                {\n                                    a = 0;\n                                    break;\n                                }\n                            case 14:\n                                {\n                                    a = 1;\n                                    break;\n                                }\n                            case 24:\n                                {\n                                    a = 2;\n                                    break;\n                                }\n                            case 38:\n                                {\n                                    a = 3;\n                                    break;\n                                }\n                            case 49:\n                                {\n                                    a = 4;\n                                    break;\n                                }\n                            case 58:\n                                {\n                                    a = 5;\n                                    break;\n                                }\n                            case 63:\n                                {\n                                    a = 6;\n                                    break;\n                                }\n                            case 72:\n                                {\n                                    a = 7;\n                                    break;\n                                }\n                            case 83:\n                                {\n                                    a = 8;\n                                    break;\n                                }\n                            case 97:\n                                {\n                                    a = 9;\n                                    break;\n                                }\n                            case 107:\n                                {\n                                    a = 10;\n                                    break;\n                                }\n                            case 117:\n                                {\n                                    a = 11;\n                                    break;\n                                }\n                            default:\n                                {\n                                    e = 1;\n                                    break a;\n                                }\n                        }\n                    }while (0);\n                    f = b[22e3 + (a * 24 | 0) + 8 >> 2] | 0;\n                    c = b[22e3 + (a * 24 | 0) + 16 >> 2] | 0;\n                    a = b[h >> 2] | 0;\n                    if ((a | 0) != (b[i >> 2] | 0)) {\n                        i = na(g) | 0;\n                        a = b[h >> 2] | 0;\n                        if (i | (a | 0) == (c | 0)) {\n                            e = (e + 1 | 0) % 6 | 0;\n                        }\n                    }\n                    if ((j | 0) == 3 & (a | 0) == (c | 0)) {\n                        e = (e + 5 | 0) % 6 | 0;\n                        f = 22;\n                        break;\n                    }\n                    if ((j | 0) == 5 & (a | 0) == (f | 0)) {\n                        e = (e + 1 | 0) % 6 | 0;\n                        f = 22;\n                    } else {\n                        f = 22;\n                    }\n                } else {\n                    f = 22;\n                }\n            }while (0);\n            if ((f | 0) == 22) {\n                b[d >> 2] = e;\n                e = 0;\n            }\n            d = e;\n            T = k;\n            return d | 0;\n        }\n        function Wc(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0;\n            u = T;\n            T = T + 32 | 0;\n            t = u + 24 | 0;\n            r = u + 20 | 0;\n            p = u + 8 | 0;\n            o = u + 16 | 0;\n            n = u;\n            j = (xb(a, c) | 0) == 0;\n            j = j ? 6 : 5;\n            l = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            l = l & 15;\n            if (j >>> 0 <= d >>> 0) {\n                e = 2;\n                T = u;\n                return e | 0;\n            }\n            m = (l | 0) == 0;\n            if (!m ? (q = wd(7, 0, (l ^ 15) * 3 | 0) | 0, (q & a | 0) == 0 & ((H() | 0) & c | 0) == 0) : 0) {\n                f = d;\n            } else {\n                g = 4;\n            }\n            a: do {\n                if ((g | 0) == 4) {\n                    f = (xb(a, c) | 0) != 0;\n                    if (((f ? 4 : 5) | 0) < (d | 0)) {\n                        e = 1;\n                        T = u;\n                        return e | 0;\n                    }\n                    if (Vc(a, c, t) | 0) {\n                        e = 1;\n                        T = u;\n                        return e | 0;\n                    }\n                    g = (b[t >> 2] | 0) + d | 0;\n                    if (f) {\n                        f = 22288 + (((g | 0) % 5 | 0) << 2) | 0;\n                    } else {\n                        f = 22320 + (((g | 0) % 6 | 0) << 2) | 0;\n                    }\n                    q = b[f >> 2] | 0;\n                    if ((q | 0) == 7) {\n                        e = 1;\n                        T = u;\n                        return e | 0;\n                    }\n                    b[r >> 2] = 0;\n                    f = ea(a, c, q, r, p) | 0;\n                    do {\n                        if (!f) {\n                            i = p;\n                            k = b[i >> 2] | 0;\n                            i = b[i + 4 >> 2] | 0;\n                            h = i >>> 0 < c >>> 0 | (i | 0) == (c | 0) & k >>> 0 < a >>> 0;\n                            g = h ? k : a;\n                            h = h ? i : c;\n                            if (!m ? (m = wd(7, 0, (l ^ 15) * 3 | 0) | 0, (k & m | 0) == 0 & (i & (H() | 0) | 0) == 0) : 0) {\n                                f = d;\n                            } else {\n                                i = (d + -1 + j | 0) % (j | 0) | 0;\n                                f = xb(a, c) | 0;\n                                if ((i | 0) < 0) {\n                                    I(23313, 23315, 245, 23324);\n                                }\n                                j = (f | 0) != 0;\n                                if (((j ? 4 : 5) | 0) < (i | 0)) {\n                                    I(23313, 23315, 245, 23324);\n                                }\n                                if (Vc(a, c, t) | 0) {\n                                    I(23313, 23315, 245, 23324);\n                                }\n                                f = (b[t >> 2] | 0) + i | 0;\n                                if (j) {\n                                    f = 22288 + (((f | 0) % 5 | 0) << 2) | 0;\n                                } else {\n                                    f = 22320 + (((f | 0) % 6 | 0) << 2) | 0;\n                                }\n                                i = b[f >> 2] | 0;\n                                if ((i | 0) == 7) {\n                                    I(23313, 23315, 245, 23324);\n                                }\n                                b[o >> 2] = 0;\n                                f = ea(a, c, i, o, n) | 0;\n                                if (f | 0) {\n                                    break;\n                                }\n                                k = n;\n                                j = b[k >> 2] | 0;\n                                k = b[k + 4 >> 2] | 0;\n                                do {\n                                    if (k >>> 0 < h >>> 0 | (k | 0) == (h | 0) & j >>> 0 < g >>> 0) {\n                                        if (!(xb(j, k) | 0)) {\n                                            g = b[22384 + ((((b[o >> 2] | 0) + (b[22352 + (i << 2) >> 2] | 0) | 0) % 6 | 0) << 2) >> 2] | 0;\n                                        } else {\n                                            g = fa(j, k, a, c) | 0;\n                                        }\n                                        f = xb(j, k) | 0;\n                                        if ((g + -1 | 0) >>> 0 > 5) {\n                                            f = -1;\n                                            g = j;\n                                            h = k;\n                                            break;\n                                        }\n                                        f = (f | 0) != 0;\n                                        if ((g | 0) == 1 & f) {\n                                            f = -1;\n                                            g = j;\n                                            h = k;\n                                            break;\n                                        }\n                                        do {\n                                            if (!(Vc(j, k, t) | 0)) {\n                                                if (f) {\n                                                    f = ((b[21936 + (g << 2) >> 2] | 0) + 5 - (b[t >> 2] | 0) | 0) % 5 | 0;\n                                                    break;\n                                                } else {\n                                                    f = ((b[21968 + (g << 2) >> 2] | 0) + 6 - (b[t >> 2] | 0) | 0) % 6 | 0;\n                                                    break;\n                                                }\n                                            } else {\n                                                f = -1;\n                                            }\n                                        }while (0);\n                                        g = j;\n                                        h = k;\n                                    } else {\n                                        f = d;\n                                    }\n                                }while (0);\n                                i = p;\n                                k = b[i >> 2] | 0;\n                                i = b[i + 4 >> 2] | 0;\n                            }\n                            if ((g | 0) == (k | 0) & (h | 0) == (i | 0)) {\n                                j = (xb(k, i) | 0) != 0;\n                                if (j) {\n                                    a = fa(k, i, a, c) | 0;\n                                } else {\n                                    a = b[22384 + ((((b[r >> 2] | 0) + (b[22352 + (q << 2) >> 2] | 0) | 0) % 6 | 0) << 2) >> 2] | 0;\n                                }\n                                f = xb(k, i) | 0;\n                                if ((a + -1 | 0) >>> 0 <= 5 ? (s = (f | 0) != 0, !((a | 0) == 1 & s)) : 0) {\n                                    do {\n                                        if (!(Vc(k, i, t) | 0)) {\n                                            if (s) {\n                                                f = ((b[21936 + (a << 2) >> 2] | 0) + 5 - (b[t >> 2] | 0) | 0) % 5 | 0;\n                                                break;\n                                            } else {\n                                                f = ((b[21968 + (a << 2) >> 2] | 0) + 6 - (b[t >> 2] | 0) | 0) % 6 | 0;\n                                                break;\n                                            }\n                                        } else {\n                                            f = -1;\n                                        }\n                                    }while (0);\n                                } else {\n                                    f = -1;\n                                }\n                                f = f + 1 | 0;\n                                f = (f | 0) == 6 | j & (f | 0) == 5 ? 0 : f;\n                            }\n                            c = h;\n                            a = g;\n                            break a;\n                        }\n                    }while (0);\n                    e = f;\n                    T = u;\n                    return e | 0;\n                }\n            }while (0);\n            s = wd(f | 0, 0, 56) | 0;\n            t = H() | 0 | c & -2130706433 | 536870912;\n            b[e >> 2] = s | a;\n            b[e + 4 >> 2] = t;\n            e = 0;\n            T = u;\n            return e | 0;\n        }\n        function Xc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0;\n            g = (xb(a, c) | 0) == 0;\n            e = Wc(a, c, 0, d) | 0;\n            f = (e | 0) == 0;\n            if (g) {\n                if (!f) {\n                    g = e;\n                    return g | 0;\n                }\n                e = Wc(a, c, 1, d + 8 | 0) | 0;\n                if (e | 0) {\n                    g = e;\n                    return g | 0;\n                }\n                e = Wc(a, c, 2, d + 16 | 0) | 0;\n                if (e | 0) {\n                    g = e;\n                    return g | 0;\n                }\n                e = Wc(a, c, 3, d + 24 | 0) | 0;\n                if (e | 0) {\n                    g = e;\n                    return g | 0;\n                }\n                e = Wc(a, c, 4, d + 32 | 0) | 0;\n                if (!e) {\n                    return Wc(a, c, 5, d + 40 | 0) | 0;\n                } else {\n                    g = e;\n                    return g | 0;\n                }\n            }\n            if (!f) {\n                g = e;\n                return g | 0;\n            }\n            e = Wc(a, c, 1, d + 8 | 0) | 0;\n            if (e | 0) {\n                g = e;\n                return g | 0;\n            }\n            e = Wc(a, c, 2, d + 16 | 0) | 0;\n            if (e | 0) {\n                g = e;\n                return g | 0;\n            }\n            e = Wc(a, c, 3, d + 24 | 0) | 0;\n            if (e | 0) {\n                g = e;\n                return g | 0;\n            }\n            e = Wc(a, c, 4, d + 32 | 0) | 0;\n            if (e | 0) {\n                g = e;\n                return g | 0;\n            }\n            g = d + 40 | 0;\n            b[g >> 2] = 0;\n            b[g + 4 >> 2] = 0;\n            g = 0;\n            return g | 0;\n        }\n        function Yc(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            j = T;\n            T = T + 192 | 0;\n            f = j;\n            g = j + 168 | 0;\n            h = vd(a | 0, c | 0, 56) | 0;\n            H() | 0;\n            h = h & 7;\n            i = c & -2130706433 | 134217728;\n            e = Ob(a, i, g) | 0;\n            if (e | 0) {\n                i = e;\n                T = j;\n                return i | 0;\n            }\n            c = vd(a | 0, c | 0, 52) | 0;\n            H() | 0;\n            c = c & 15;\n            if (!(xb(a, i) | 0)) {\n                qb(g, c, h, 1, f);\n            } else {\n                mb(g, c, h, 1, f);\n            }\n            i = f + 8 | 0;\n            b[d >> 2] = b[i >> 2];\n            b[d + 4 >> 2] = b[i + 4 >> 2];\n            b[d + 8 >> 2] = b[i + 8 >> 2];\n            b[d + 12 >> 2] = b[i + 12 >> 2];\n            i = 0;\n            T = j;\n            return i | 0;\n        }\n        function Zc(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, e = 0, f = 0, g = 0;\n            f = T;\n            T = T + 16 | 0;\n            d = f;\n            if (!(0 == 0 & (c & 2013265920 | 0) == 536870912)) {\n                e = 0;\n                T = f;\n                return e | 0;\n            }\n            e = c & -2130706433 | 134217728;\n            if (!(ub(a, e) | 0)) {\n                e = 0;\n                T = f;\n                return e | 0;\n            }\n            g = vd(a | 0, c | 0, 56) | 0;\n            H() | 0;\n            g = (Wc(a, e, g & 7, d) | 0) == 0;\n            e = d;\n            e = g & ((b[e >> 2] | 0) == (a | 0) ? (b[e + 4 >> 2] | 0) == (c | 0) : 0) & 1;\n            T = f;\n            return e | 0;\n        }\n        function _c(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0;\n            if ((c | 0) > 0) {\n                e = kd(c, 4) | 0;\n                b[a >> 2] = e;\n                if (!e) {\n                    I(23337, 23360, 40, 23374);\n                }\n            } else {\n                b[a >> 2] = 0;\n            }\n            b[a + 4 >> 2] = c;\n            b[a + 8 >> 2] = 0;\n            b[a + 12 >> 2] = d;\n            return;\n        }\n        function $c(a) {\n            a = a | 0;\n            var c = 0, d = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            g = a + 4 | 0;\n            h = a + 12 | 0;\n            i = a + 8 | 0;\n            a: while(1){\n                d = b[g >> 2] | 0;\n                c = 0;\n                while(1){\n                    if ((c | 0) >= (d | 0)) {\n                        break a;\n                    }\n                    f = b[a >> 2] | 0;\n                    j = b[f + (c << 2) >> 2] | 0;\n                    if (!j) {\n                        c = c + 1 | 0;\n                    } else {\n                        break;\n                    }\n                }\n                c = f + (~~(+q(+(+s(10.0, + +(15 - (b[h >> 2] | 0) | 0)) * (+e[j >> 3] + +e[j + 8 >> 3]))) % +(d | 0)) >>> 0 << 2) | 0;\n                d = b[c >> 2] | 0;\n                b: do {\n                    if (d | 0) {\n                        f = j + 32 | 0;\n                        if ((d | 0) == (j | 0)) {\n                            b[c >> 2] = b[f >> 2];\n                        } else {\n                            d = d + 32 | 0;\n                            c = b[d >> 2] | 0;\n                            if (!c) {\n                                break;\n                            }\n                            while(1){\n                                if ((c | 0) == (j | 0)) {\n                                    break;\n                                }\n                                d = c + 32 | 0;\n                                c = b[d >> 2] | 0;\n                                if (!c) {\n                                    break b;\n                                }\n                            }\n                            b[d >> 2] = b[f >> 2];\n                        }\n                        jd(j);\n                        b[i >> 2] = (b[i >> 2] | 0) + -1;\n                    }\n                }while (0);\n            }\n            jd(b[a >> 2] | 0);\n            return;\n        }\n        function ad(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0;\n            e = b[a + 4 >> 2] | 0;\n            d = 0;\n            while(1){\n                if ((d | 0) >= (e | 0)) {\n                    c = 0;\n                    d = 4;\n                    break;\n                }\n                c = b[(b[a >> 2] | 0) + (d << 2) >> 2] | 0;\n                if (!c) {\n                    d = d + 1 | 0;\n                } else {\n                    d = 4;\n                    break;\n                }\n            }\n            if ((d | 0) == 4) {\n                return c | 0;\n            }\n            return 0;\n        }\n        function bd(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0, f = 0, g = 0, h = 0;\n            d = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n            d = (b[a >> 2] | 0) + (d << 2) | 0;\n            f = b[d >> 2] | 0;\n            if (!f) {\n                h = 1;\n                return h | 0;\n            }\n            h = c + 32 | 0;\n            do {\n                if ((f | 0) != (c | 0)) {\n                    d = b[f + 32 >> 2] | 0;\n                    if (!d) {\n                        h = 1;\n                        return h | 0;\n                    }\n                    g = d;\n                    while(1){\n                        if ((g | 0) == (c | 0)) {\n                            g = 8;\n                            break;\n                        }\n                        d = b[g + 32 >> 2] | 0;\n                        if (!d) {\n                            d = 1;\n                            g = 10;\n                            break;\n                        } else {\n                            f = g;\n                            g = d;\n                        }\n                    }\n                    if ((g | 0) == 8) {\n                        b[f + 32 >> 2] = b[h >> 2];\n                        break;\n                    } else if ((g | 0) == 10) {\n                        return d | 0;\n                    }\n                } else {\n                    b[d >> 2] = b[h >> 2];\n                }\n            }while (0);\n            jd(c);\n            h = a + 8 | 0;\n            b[h >> 2] = (b[h >> 2] | 0) + -1;\n            h = 0;\n            return h | 0;\n        }\n        function cd(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0, g = 0, h = 0, i = 0;\n            h = id(40) | 0;\n            if (!h) {\n                I(23390, 23360, 98, 23403);\n            }\n            b[h >> 2] = b[c >> 2];\n            b[h + 4 >> 2] = b[c + 4 >> 2];\n            b[h + 8 >> 2] = b[c + 8 >> 2];\n            b[h + 12 >> 2] = b[c + 12 >> 2];\n            g = h + 16 | 0;\n            b[g >> 2] = b[d >> 2];\n            b[g + 4 >> 2] = b[d + 4 >> 2];\n            b[g + 8 >> 2] = b[d + 8 >> 2];\n            b[g + 12 >> 2] = b[d + 12 >> 2];\n            b[h + 32 >> 2] = 0;\n            g = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n            g = (b[a >> 2] | 0) + (g << 2) | 0;\n            f = b[g >> 2] | 0;\n            do {\n                if (!f) {\n                    b[g >> 2] = h;\n                } else {\n                    while(1){\n                        if (_b(f, c) | 0 ? _b(f + 16 | 0, d) | 0 : 0) {\n                            break;\n                        }\n                        g = b[f + 32 >> 2] | 0;\n                        f = (g | 0) == 0 ? f : g;\n                        if (!(b[f + 32 >> 2] | 0)) {\n                            i = 10;\n                            break;\n                        }\n                    }\n                    if ((i | 0) == 10) {\n                        b[f + 32 >> 2] = h;\n                        break;\n                    }\n                    jd(h);\n                    i = f;\n                    return i | 0;\n                }\n            }while (0);\n            i = a + 8 | 0;\n            b[i >> 2] = (b[i >> 2] | 0) + 1;\n            i = h;\n            return i | 0;\n        }\n        function dd(a, c, d) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            var f = 0, g = 0;\n            g = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n            g = b[(b[a >> 2] | 0) + (g << 2) >> 2] | 0;\n            if (!g) {\n                d = 0;\n                return d | 0;\n            }\n            if (!d) {\n                a = g;\n                while(1){\n                    if (_b(a, c) | 0) {\n                        f = 10;\n                        break;\n                    }\n                    a = b[a + 32 >> 2] | 0;\n                    if (!a) {\n                        a = 0;\n                        f = 10;\n                        break;\n                    }\n                }\n                if ((f | 0) == 10) {\n                    return a | 0;\n                }\n            }\n            a = g;\n            while(1){\n                if (_b(a, c) | 0 ? _b(a + 16 | 0, d) | 0 : 0) {\n                    f = 10;\n                    break;\n                }\n                a = b[a + 32 >> 2] | 0;\n                if (!a) {\n                    a = 0;\n                    f = 10;\n                    break;\n                }\n            }\n            if ((f | 0) == 10) {\n                return a | 0;\n            }\n            return 0;\n        }\n        function ed(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0;\n            d = ~~(+q(+(+s(10.0, + +(15 - (b[a + 12 >> 2] | 0) | 0)) * (+e[c >> 3] + +e[c + 8 >> 3]))) % +(b[a + 4 >> 2] | 0)) >>> 0;\n            a = b[(b[a >> 2] | 0) + (d << 2) >> 2] | 0;\n            if (!a) {\n                d = 0;\n                return d | 0;\n            }\n            while(1){\n                if (_b(a, c) | 0) {\n                    c = 5;\n                    break;\n                }\n                a = b[a + 32 >> 2] | 0;\n                if (!a) {\n                    a = 0;\n                    c = 5;\n                    break;\n                }\n            }\n            if ((c | 0) == 5) {\n                return a | 0;\n            }\n            return 0;\n        }\n        function fd() {\n            return 23424;\n        }\n        function gd(a) {\n            a = +a;\n            return + +Cd(+a);\n        }\n        function hd(a) {\n            a = +a;\n            return ~~+gd(a) | 0;\n        }\n        function id(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0, q = 0, r = 0, s = 0, t = 0, u = 0, v = 0, w = 0;\n            w = T;\n            T = T + 16 | 0;\n            n = w;\n            do {\n                if (a >>> 0 < 245) {\n                    k = a >>> 0 < 11 ? 16 : a + 11 & -8;\n                    a = k >>> 3;\n                    m = b[5857] | 0;\n                    d = m >>> a;\n                    if (d & 3 | 0) {\n                        c = (d & 1 ^ 1) + a | 0;\n                        a = 23468 + (c << 1 << 2) | 0;\n                        d = a + 8 | 0;\n                        e = b[d >> 2] | 0;\n                        f = e + 8 | 0;\n                        g = b[f >> 2] | 0;\n                        if ((g | 0) == (a | 0)) {\n                            b[5857] = m & ~(1 << c);\n                        } else {\n                            b[g + 12 >> 2] = a;\n                            b[d >> 2] = g;\n                        }\n                        v = c << 3;\n                        b[e + 4 >> 2] = v | 3;\n                        v = e + v + 4 | 0;\n                        b[v >> 2] = b[v >> 2] | 1;\n                        v = f;\n                        T = w;\n                        return v | 0;\n                    }\n                    l = b[5859] | 0;\n                    if (k >>> 0 > l >>> 0) {\n                        if (d | 0) {\n                            c = 2 << a;\n                            c = d << a & (c | 0 - c);\n                            c = (c & 0 - c) + -1 | 0;\n                            i = c >>> 12 & 16;\n                            c = c >>> i;\n                            d = c >>> 5 & 8;\n                            c = c >>> d;\n                            g = c >>> 2 & 4;\n                            c = c >>> g;\n                            a = c >>> 1 & 2;\n                            c = c >>> a;\n                            e = c >>> 1 & 1;\n                            e = (d | i | g | a | e) + (c >>> e) | 0;\n                            c = 23468 + (e << 1 << 2) | 0;\n                            a = c + 8 | 0;\n                            g = b[a >> 2] | 0;\n                            i = g + 8 | 0;\n                            d = b[i >> 2] | 0;\n                            if ((d | 0) == (c | 0)) {\n                                a = m & ~(1 << e);\n                                b[5857] = a;\n                            } else {\n                                b[d + 12 >> 2] = c;\n                                b[a >> 2] = d;\n                                a = m;\n                            }\n                            v = e << 3;\n                            h = v - k | 0;\n                            b[g + 4 >> 2] = k | 3;\n                            f = g + k | 0;\n                            b[f + 4 >> 2] = h | 1;\n                            b[g + v >> 2] = h;\n                            if (l | 0) {\n                                e = b[5862] | 0;\n                                c = l >>> 3;\n                                d = 23468 + (c << 1 << 2) | 0;\n                                c = 1 << c;\n                                if (!(a & c)) {\n                                    b[5857] = a | c;\n                                    c = d;\n                                    a = d + 8 | 0;\n                                } else {\n                                    a = d + 8 | 0;\n                                    c = b[a >> 2] | 0;\n                                }\n                                b[a >> 2] = e;\n                                b[c + 12 >> 2] = e;\n                                b[e + 8 >> 2] = c;\n                                b[e + 12 >> 2] = d;\n                            }\n                            b[5859] = h;\n                            b[5862] = f;\n                            v = i;\n                            T = w;\n                            return v | 0;\n                        }\n                        g = b[5858] | 0;\n                        if (g) {\n                            d = (g & 0 - g) + -1 | 0;\n                            f = d >>> 12 & 16;\n                            d = d >>> f;\n                            e = d >>> 5 & 8;\n                            d = d >>> e;\n                            h = d >>> 2 & 4;\n                            d = d >>> h;\n                            i = d >>> 1 & 2;\n                            d = d >>> i;\n                            j = d >>> 1 & 1;\n                            j = b[23732 + ((e | f | h | i | j) + (d >>> j) << 2) >> 2] | 0;\n                            d = j;\n                            i = j;\n                            j = (b[j + 4 >> 2] & -8) - k | 0;\n                            while(1){\n                                a = b[d + 16 >> 2] | 0;\n                                if (!a) {\n                                    a = b[d + 20 >> 2] | 0;\n                                    if (!a) {\n                                        break;\n                                    }\n                                }\n                                h = (b[a + 4 >> 2] & -8) - k | 0;\n                                f = h >>> 0 < j >>> 0;\n                                d = a;\n                                i = f ? a : i;\n                                j = f ? h : j;\n                            }\n                            h = i + k | 0;\n                            if (h >>> 0 > i >>> 0) {\n                                f = b[i + 24 >> 2] | 0;\n                                c = b[i + 12 >> 2] | 0;\n                                do {\n                                    if ((c | 0) == (i | 0)) {\n                                        a = i + 20 | 0;\n                                        c = b[a >> 2] | 0;\n                                        if (!c) {\n                                            a = i + 16 | 0;\n                                            c = b[a >> 2] | 0;\n                                            if (!c) {\n                                                d = 0;\n                                                break;\n                                            }\n                                        }\n                                        while(1){\n                                            e = c + 20 | 0;\n                                            d = b[e >> 2] | 0;\n                                            if (!d) {\n                                                e = c + 16 | 0;\n                                                d = b[e >> 2] | 0;\n                                                if (!d) {\n                                                    break;\n                                                } else {\n                                                    c = d;\n                                                    a = e;\n                                                }\n                                            } else {\n                                                c = d;\n                                                a = e;\n                                            }\n                                        }\n                                        b[a >> 2] = 0;\n                                        d = c;\n                                    } else {\n                                        d = b[i + 8 >> 2] | 0;\n                                        b[d + 12 >> 2] = c;\n                                        b[c + 8 >> 2] = d;\n                                        d = c;\n                                    }\n                                }while (0);\n                                do {\n                                    if (f | 0) {\n                                        c = b[i + 28 >> 2] | 0;\n                                        a = 23732 + (c << 2) | 0;\n                                        if ((i | 0) == (b[a >> 2] | 0)) {\n                                            b[a >> 2] = d;\n                                            if (!d) {\n                                                b[5858] = g & ~(1 << c);\n                                                break;\n                                            }\n                                        } else {\n                                            v = f + 16 | 0;\n                                            b[((b[v >> 2] | 0) == (i | 0) ? v : f + 20 | 0) >> 2] = d;\n                                            if (!d) {\n                                                break;\n                                            }\n                                        }\n                                        b[d + 24 >> 2] = f;\n                                        c = b[i + 16 >> 2] | 0;\n                                        if (c | 0) {\n                                            b[d + 16 >> 2] = c;\n                                            b[c + 24 >> 2] = d;\n                                        }\n                                        c = b[i + 20 >> 2] | 0;\n                                        if (c | 0) {\n                                            b[d + 20 >> 2] = c;\n                                            b[c + 24 >> 2] = d;\n                                        }\n                                    }\n                                }while (0);\n                                if (j >>> 0 < 16) {\n                                    v = j + k | 0;\n                                    b[i + 4 >> 2] = v | 3;\n                                    v = i + v + 4 | 0;\n                                    b[v >> 2] = b[v >> 2] | 1;\n                                } else {\n                                    b[i + 4 >> 2] = k | 3;\n                                    b[h + 4 >> 2] = j | 1;\n                                    b[h + j >> 2] = j;\n                                    if (l | 0) {\n                                        e = b[5862] | 0;\n                                        c = l >>> 3;\n                                        d = 23468 + (c << 1 << 2) | 0;\n                                        c = 1 << c;\n                                        if (!(c & m)) {\n                                            b[5857] = c | m;\n                                            c = d;\n                                            a = d + 8 | 0;\n                                        } else {\n                                            a = d + 8 | 0;\n                                            c = b[a >> 2] | 0;\n                                        }\n                                        b[a >> 2] = e;\n                                        b[c + 12 >> 2] = e;\n                                        b[e + 8 >> 2] = c;\n                                        b[e + 12 >> 2] = d;\n                                    }\n                                    b[5859] = j;\n                                    b[5862] = h;\n                                }\n                                v = i + 8 | 0;\n                                T = w;\n                                return v | 0;\n                            } else {\n                                m = k;\n                            }\n                        } else {\n                            m = k;\n                        }\n                    } else {\n                        m = k;\n                    }\n                } else if (a >>> 0 <= 4294967231) {\n                    a = a + 11 | 0;\n                    k = a & -8;\n                    e = b[5858] | 0;\n                    if (e) {\n                        f = 0 - k | 0;\n                        a = a >>> 8;\n                        if (a) {\n                            if (k >>> 0 > 16777215) {\n                                j = 31;\n                            } else {\n                                m = (a + 1048320 | 0) >>> 16 & 8;\n                                q = a << m;\n                                i = (q + 520192 | 0) >>> 16 & 4;\n                                q = q << i;\n                                j = (q + 245760 | 0) >>> 16 & 2;\n                                j = 14 - (i | m | j) + (q << j >>> 15) | 0;\n                                j = k >>> (j + 7 | 0) & 1 | j << 1;\n                            }\n                        } else {\n                            j = 0;\n                        }\n                        d = b[23732 + (j << 2) >> 2] | 0;\n                        a: do {\n                            if (!d) {\n                                d = 0;\n                                a = 0;\n                                q = 61;\n                            } else {\n                                a = 0;\n                                i = k << ((j | 0) == 31 ? 0 : 25 - (j >>> 1) | 0);\n                                g = 0;\n                                while(1){\n                                    h = (b[d + 4 >> 2] & -8) - k | 0;\n                                    if (h >>> 0 < f >>> 0) {\n                                        if (!h) {\n                                            a = d;\n                                            f = 0;\n                                            q = 65;\n                                            break a;\n                                        } else {\n                                            a = d;\n                                            f = h;\n                                        }\n                                    }\n                                    q = b[d + 20 >> 2] | 0;\n                                    d = b[d + 16 + (i >>> 31 << 2) >> 2] | 0;\n                                    g = (q | 0) == 0 | (q | 0) == (d | 0) ? g : q;\n                                    if (!d) {\n                                        d = g;\n                                        q = 61;\n                                        break;\n                                    } else {\n                                        i = i << 1;\n                                    }\n                                }\n                            }\n                        }while (0);\n                        if ((q | 0) == 61) {\n                            if ((d | 0) == 0 & (a | 0) == 0) {\n                                a = 2 << j;\n                                a = (a | 0 - a) & e;\n                                if (!a) {\n                                    m = k;\n                                    break;\n                                }\n                                m = (a & 0 - a) + -1 | 0;\n                                h = m >>> 12 & 16;\n                                m = m >>> h;\n                                g = m >>> 5 & 8;\n                                m = m >>> g;\n                                i = m >>> 2 & 4;\n                                m = m >>> i;\n                                j = m >>> 1 & 2;\n                                m = m >>> j;\n                                d = m >>> 1 & 1;\n                                a = 0;\n                                d = b[23732 + ((g | h | i | j | d) + (m >>> d) << 2) >> 2] | 0;\n                            }\n                            if (!d) {\n                                i = a;\n                                h = f;\n                            } else {\n                                q = 65;\n                            }\n                        }\n                        if ((q | 0) == 65) {\n                            g = d;\n                            while(1){\n                                m = (b[g + 4 >> 2] & -8) - k | 0;\n                                d = m >>> 0 < f >>> 0;\n                                f = d ? m : f;\n                                a = d ? g : a;\n                                d = b[g + 16 >> 2] | 0;\n                                if (!d) {\n                                    d = b[g + 20 >> 2] | 0;\n                                }\n                                if (!d) {\n                                    i = a;\n                                    h = f;\n                                    break;\n                                } else {\n                                    g = d;\n                                }\n                            }\n                        }\n                        if (((i | 0) != 0 ? h >>> 0 < ((b[5859] | 0) - k | 0) >>> 0 : 0) ? (l = i + k | 0, l >>> 0 > i >>> 0) : 0) {\n                            g = b[i + 24 >> 2] | 0;\n                            c = b[i + 12 >> 2] | 0;\n                            do {\n                                if ((c | 0) == (i | 0)) {\n                                    a = i + 20 | 0;\n                                    c = b[a >> 2] | 0;\n                                    if (!c) {\n                                        a = i + 16 | 0;\n                                        c = b[a >> 2] | 0;\n                                        if (!c) {\n                                            c = 0;\n                                            break;\n                                        }\n                                    }\n                                    while(1){\n                                        f = c + 20 | 0;\n                                        d = b[f >> 2] | 0;\n                                        if (!d) {\n                                            f = c + 16 | 0;\n                                            d = b[f >> 2] | 0;\n                                            if (!d) {\n                                                break;\n                                            } else {\n                                                c = d;\n                                                a = f;\n                                            }\n                                        } else {\n                                            c = d;\n                                            a = f;\n                                        }\n                                    }\n                                    b[a >> 2] = 0;\n                                } else {\n                                    v = b[i + 8 >> 2] | 0;\n                                    b[v + 12 >> 2] = c;\n                                    b[c + 8 >> 2] = v;\n                                }\n                            }while (0);\n                            do {\n                                if (g) {\n                                    a = b[i + 28 >> 2] | 0;\n                                    d = 23732 + (a << 2) | 0;\n                                    if ((i | 0) == (b[d >> 2] | 0)) {\n                                        b[d >> 2] = c;\n                                        if (!c) {\n                                            e = e & ~(1 << a);\n                                            b[5858] = e;\n                                            break;\n                                        }\n                                    } else {\n                                        v = g + 16 | 0;\n                                        b[((b[v >> 2] | 0) == (i | 0) ? v : g + 20 | 0) >> 2] = c;\n                                        if (!c) {\n                                            break;\n                                        }\n                                    }\n                                    b[c + 24 >> 2] = g;\n                                    a = b[i + 16 >> 2] | 0;\n                                    if (a | 0) {\n                                        b[c + 16 >> 2] = a;\n                                        b[a + 24 >> 2] = c;\n                                    }\n                                    a = b[i + 20 >> 2] | 0;\n                                    if (a) {\n                                        b[c + 20 >> 2] = a;\n                                        b[a + 24 >> 2] = c;\n                                    }\n                                }\n                            }while (0);\n                            b: do {\n                                if (h >>> 0 < 16) {\n                                    v = h + k | 0;\n                                    b[i + 4 >> 2] = v | 3;\n                                    v = i + v + 4 | 0;\n                                    b[v >> 2] = b[v >> 2] | 1;\n                                } else {\n                                    b[i + 4 >> 2] = k | 3;\n                                    b[l + 4 >> 2] = h | 1;\n                                    b[l + h >> 2] = h;\n                                    c = h >>> 3;\n                                    if (h >>> 0 < 256) {\n                                        d = 23468 + (c << 1 << 2) | 0;\n                                        a = b[5857] | 0;\n                                        c = 1 << c;\n                                        if (!(a & c)) {\n                                            b[5857] = a | c;\n                                            c = d;\n                                            a = d + 8 | 0;\n                                        } else {\n                                            a = d + 8 | 0;\n                                            c = b[a >> 2] | 0;\n                                        }\n                                        b[a >> 2] = l;\n                                        b[c + 12 >> 2] = l;\n                                        b[l + 8 >> 2] = c;\n                                        b[l + 12 >> 2] = d;\n                                        break;\n                                    }\n                                    c = h >>> 8;\n                                    if (c) {\n                                        if (h >>> 0 > 16777215) {\n                                            d = 31;\n                                        } else {\n                                            u = (c + 1048320 | 0) >>> 16 & 8;\n                                            v = c << u;\n                                            t = (v + 520192 | 0) >>> 16 & 4;\n                                            v = v << t;\n                                            d = (v + 245760 | 0) >>> 16 & 2;\n                                            d = 14 - (t | u | d) + (v << d >>> 15) | 0;\n                                            d = h >>> (d + 7 | 0) & 1 | d << 1;\n                                        }\n                                    } else {\n                                        d = 0;\n                                    }\n                                    c = 23732 + (d << 2) | 0;\n                                    b[l + 28 >> 2] = d;\n                                    a = l + 16 | 0;\n                                    b[a + 4 >> 2] = 0;\n                                    b[a >> 2] = 0;\n                                    a = 1 << d;\n                                    if (!(e & a)) {\n                                        b[5858] = e | a;\n                                        b[c >> 2] = l;\n                                        b[l + 24 >> 2] = c;\n                                        b[l + 12 >> 2] = l;\n                                        b[l + 8 >> 2] = l;\n                                        break;\n                                    }\n                                    c = b[c >> 2] | 0;\n                                    c: do {\n                                        if ((b[c + 4 >> 2] & -8 | 0) != (h | 0)) {\n                                            e = h << ((d | 0) == 31 ? 0 : 25 - (d >>> 1) | 0);\n                                            while(1){\n                                                d = c + 16 + (e >>> 31 << 2) | 0;\n                                                a = b[d >> 2] | 0;\n                                                if (!a) {\n                                                    break;\n                                                }\n                                                if ((b[a + 4 >> 2] & -8 | 0) == (h | 0)) {\n                                                    c = a;\n                                                    break c;\n                                                } else {\n                                                    e = e << 1;\n                                                    c = a;\n                                                }\n                                            }\n                                            b[d >> 2] = l;\n                                            b[l + 24 >> 2] = c;\n                                            b[l + 12 >> 2] = l;\n                                            b[l + 8 >> 2] = l;\n                                            break b;\n                                        }\n                                    }while (0);\n                                    u = c + 8 | 0;\n                                    v = b[u >> 2] | 0;\n                                    b[v + 12 >> 2] = l;\n                                    b[u >> 2] = l;\n                                    b[l + 8 >> 2] = v;\n                                    b[l + 12 >> 2] = c;\n                                    b[l + 24 >> 2] = 0;\n                                }\n                            }while (0);\n                            v = i + 8 | 0;\n                            T = w;\n                            return v | 0;\n                        } else {\n                            m = k;\n                        }\n                    } else {\n                        m = k;\n                    }\n                } else {\n                    m = -1;\n                }\n            }while (0);\n            d = b[5859] | 0;\n            if (d >>> 0 >= m >>> 0) {\n                c = d - m | 0;\n                a = b[5862] | 0;\n                if (c >>> 0 > 15) {\n                    v = a + m | 0;\n                    b[5862] = v;\n                    b[5859] = c;\n                    b[v + 4 >> 2] = c | 1;\n                    b[a + d >> 2] = c;\n                    b[a + 4 >> 2] = m | 3;\n                } else {\n                    b[5859] = 0;\n                    b[5862] = 0;\n                    b[a + 4 >> 2] = d | 3;\n                    v = a + d + 4 | 0;\n                    b[v >> 2] = b[v >> 2] | 1;\n                }\n                v = a + 8 | 0;\n                T = w;\n                return v | 0;\n            }\n            h = b[5860] | 0;\n            if (h >>> 0 > m >>> 0) {\n                t = h - m | 0;\n                b[5860] = t;\n                v = b[5863] | 0;\n                u = v + m | 0;\n                b[5863] = u;\n                b[u + 4 >> 2] = t | 1;\n                b[v + 4 >> 2] = m | 3;\n                v = v + 8 | 0;\n                T = w;\n                return v | 0;\n            }\n            if (!(b[5975] | 0)) {\n                b[5977] = 4096;\n                b[5976] = 4096;\n                b[5978] = -1;\n                b[5979] = -1;\n                b[5980] = 0;\n                b[5968] = 0;\n                b[5975] = n & -16 ^ 1431655768;\n                a = 4096;\n            } else {\n                a = b[5977] | 0;\n            }\n            i = m + 48 | 0;\n            j = m + 47 | 0;\n            g = a + j | 0;\n            f = 0 - a | 0;\n            k = g & f;\n            if (k >>> 0 <= m >>> 0) {\n                v = 0;\n                T = w;\n                return v | 0;\n            }\n            a = b[5967] | 0;\n            if (a | 0 ? (l = b[5965] | 0, n = l + k | 0, n >>> 0 <= l >>> 0 | n >>> 0 > a >>> 0) : 0) {\n                v = 0;\n                T = w;\n                return v | 0;\n            }\n            d: do {\n                if (!(b[5968] & 4)) {\n                    d = b[5863] | 0;\n                    e: do {\n                        if (d) {\n                            e = 23876;\n                            while(1){\n                                n = b[e >> 2] | 0;\n                                if (n >>> 0 <= d >>> 0 ? (n + (b[e + 4 >> 2] | 0) | 0) >>> 0 > d >>> 0 : 0) {\n                                    break;\n                                }\n                                a = b[e + 8 >> 2] | 0;\n                                if (!a) {\n                                    q = 128;\n                                    break e;\n                                } else {\n                                    e = a;\n                                }\n                            }\n                            c = g - h & f;\n                            if (c >>> 0 < 2147483647) {\n                                a = Dd(c | 0) | 0;\n                                if ((a | 0) == ((b[e >> 2] | 0) + (b[e + 4 >> 2] | 0) | 0)) {\n                                    if ((a | 0) != (-1 | 0)) {\n                                        h = c;\n                                        g = a;\n                                        q = 145;\n                                        break d;\n                                    }\n                                } else {\n                                    e = a;\n                                    q = 136;\n                                }\n                            } else {\n                                c = 0;\n                            }\n                        } else {\n                            q = 128;\n                        }\n                    }while (0);\n                    do {\n                        if ((q | 0) == 128) {\n                            d = Dd(0) | 0;\n                            if ((d | 0) != (-1 | 0) ? (c = d, o = b[5976] | 0, p = o + -1 | 0, c = ((p & c | 0) == 0 ? 0 : (p + c & 0 - o) - c | 0) + k | 0, o = b[5965] | 0, p = c + o | 0, c >>> 0 > m >>> 0 & c >>> 0 < 2147483647) : 0) {\n                                n = b[5967] | 0;\n                                if (n | 0 ? p >>> 0 <= o >>> 0 | p >>> 0 > n >>> 0 : 0) {\n                                    c = 0;\n                                    break;\n                                }\n                                a = Dd(c | 0) | 0;\n                                if ((a | 0) == (d | 0)) {\n                                    h = c;\n                                    g = d;\n                                    q = 145;\n                                    break d;\n                                } else {\n                                    e = a;\n                                    q = 136;\n                                }\n                            } else {\n                                c = 0;\n                            }\n                        }\n                    }while (0);\n                    do {\n                        if ((q | 0) == 136) {\n                            d = 0 - c | 0;\n                            if (!(i >>> 0 > c >>> 0 & (c >>> 0 < 2147483647 & (e | 0) != (-1 | 0)))) {\n                                if ((e | 0) == (-1 | 0)) {\n                                    c = 0;\n                                    break;\n                                } else {\n                                    h = c;\n                                    g = e;\n                                    q = 145;\n                                    break d;\n                                }\n                            }\n                            a = b[5977] | 0;\n                            a = j - c + a & 0 - a;\n                            if (a >>> 0 >= 2147483647) {\n                                h = c;\n                                g = e;\n                                q = 145;\n                                break d;\n                            }\n                            if ((Dd(a | 0) | 0) == (-1 | 0)) {\n                                Dd(d | 0) | 0;\n                                c = 0;\n                                break;\n                            } else {\n                                h = a + c | 0;\n                                g = e;\n                                q = 145;\n                                break d;\n                            }\n                        }\n                    }while (0);\n                    b[5968] = b[5968] | 4;\n                    q = 143;\n                } else {\n                    c = 0;\n                    q = 143;\n                }\n            }while (0);\n            if (((q | 0) == 143 ? k >>> 0 < 2147483647 : 0) ? (t = Dd(k | 0) | 0, p = Dd(0) | 0, r = p - t | 0, s = r >>> 0 > (m + 40 | 0) >>> 0, !((t | 0) == (-1 | 0) | s ^ 1 | t >>> 0 < p >>> 0 & ((t | 0) != (-1 | 0) & (p | 0) != (-1 | 0)) ^ 1)) : 0) {\n                h = s ? r : c;\n                g = t;\n                q = 145;\n            }\n            if ((q | 0) == 145) {\n                c = (b[5965] | 0) + h | 0;\n                b[5965] = c;\n                if (c >>> 0 > (b[5966] | 0) >>> 0) {\n                    b[5966] = c;\n                }\n                j = b[5863] | 0;\n                f: do {\n                    if (j) {\n                        c = 23876;\n                        while(1){\n                            a = b[c >> 2] | 0;\n                            d = b[c + 4 >> 2] | 0;\n                            if ((g | 0) == (a + d | 0)) {\n                                q = 154;\n                                break;\n                            }\n                            e = b[c + 8 >> 2] | 0;\n                            if (!e) {\n                                break;\n                            } else {\n                                c = e;\n                            }\n                        }\n                        if (((q | 0) == 154 ? (u = c + 4 | 0, (b[c + 12 >> 2] & 8 | 0) == 0) : 0) ? g >>> 0 > j >>> 0 & a >>> 0 <= j >>> 0 : 0) {\n                            b[u >> 2] = d + h;\n                            v = (b[5860] | 0) + h | 0;\n                            t = j + 8 | 0;\n                            t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n                            u = j + t | 0;\n                            t = v - t | 0;\n                            b[5863] = u;\n                            b[5860] = t;\n                            b[u + 4 >> 2] = t | 1;\n                            b[j + v + 4 >> 2] = 40;\n                            b[5864] = b[5979];\n                            break;\n                        }\n                        if (g >>> 0 < (b[5861] | 0) >>> 0) {\n                            b[5861] = g;\n                        }\n                        d = g + h | 0;\n                        c = 23876;\n                        while(1){\n                            if ((b[c >> 2] | 0) == (d | 0)) {\n                                q = 162;\n                                break;\n                            }\n                            a = b[c + 8 >> 2] | 0;\n                            if (!a) {\n                                break;\n                            } else {\n                                c = a;\n                            }\n                        }\n                        if ((q | 0) == 162 ? (b[c + 12 >> 2] & 8 | 0) == 0 : 0) {\n                            b[c >> 2] = g;\n                            l = c + 4 | 0;\n                            b[l >> 2] = (b[l >> 2] | 0) + h;\n                            l = g + 8 | 0;\n                            l = g + ((l & 7 | 0) == 0 ? 0 : 0 - l & 7) | 0;\n                            c = d + 8 | 0;\n                            c = d + ((c & 7 | 0) == 0 ? 0 : 0 - c & 7) | 0;\n                            k = l + m | 0;\n                            i = c - l - m | 0;\n                            b[l + 4 >> 2] = m | 3;\n                            g: do {\n                                if ((j | 0) == (c | 0)) {\n                                    v = (b[5860] | 0) + i | 0;\n                                    b[5860] = v;\n                                    b[5863] = k;\n                                    b[k + 4 >> 2] = v | 1;\n                                } else {\n                                    if ((b[5862] | 0) == (c | 0)) {\n                                        v = (b[5859] | 0) + i | 0;\n                                        b[5859] = v;\n                                        b[5862] = k;\n                                        b[k + 4 >> 2] = v | 1;\n                                        b[k + v >> 2] = v;\n                                        break;\n                                    }\n                                    a = b[c + 4 >> 2] | 0;\n                                    if ((a & 3 | 0) == 1) {\n                                        h = a & -8;\n                                        e = a >>> 3;\n                                        h: do {\n                                            if (a >>> 0 < 256) {\n                                                a = b[c + 8 >> 2] | 0;\n                                                d = b[c + 12 >> 2] | 0;\n                                                if ((d | 0) == (a | 0)) {\n                                                    b[5857] = b[5857] & ~(1 << e);\n                                                    break;\n                                                } else {\n                                                    b[a + 12 >> 2] = d;\n                                                    b[d + 8 >> 2] = a;\n                                                    break;\n                                                }\n                                            } else {\n                                                g = b[c + 24 >> 2] | 0;\n                                                a = b[c + 12 >> 2] | 0;\n                                                do {\n                                                    if ((a | 0) == (c | 0)) {\n                                                        d = c + 16 | 0;\n                                                        e = d + 4 | 0;\n                                                        a = b[e >> 2] | 0;\n                                                        if (!a) {\n                                                            a = b[d >> 2] | 0;\n                                                            if (!a) {\n                                                                a = 0;\n                                                                break;\n                                                            }\n                                                        } else {\n                                                            d = e;\n                                                        }\n                                                        while(1){\n                                                            f = a + 20 | 0;\n                                                            e = b[f >> 2] | 0;\n                                                            if (!e) {\n                                                                f = a + 16 | 0;\n                                                                e = b[f >> 2] | 0;\n                                                                if (!e) {\n                                                                    break;\n                                                                } else {\n                                                                    a = e;\n                                                                    d = f;\n                                                                }\n                                                            } else {\n                                                                a = e;\n                                                                d = f;\n                                                            }\n                                                        }\n                                                        b[d >> 2] = 0;\n                                                    } else {\n                                                        v = b[c + 8 >> 2] | 0;\n                                                        b[v + 12 >> 2] = a;\n                                                        b[a + 8 >> 2] = v;\n                                                    }\n                                                }while (0);\n                                                if (!g) {\n                                                    break;\n                                                }\n                                                d = b[c + 28 >> 2] | 0;\n                                                e = 23732 + (d << 2) | 0;\n                                                do {\n                                                    if ((b[e >> 2] | 0) != (c | 0)) {\n                                                        v = g + 16 | 0;\n                                                        b[((b[v >> 2] | 0) == (c | 0) ? v : g + 20 | 0) >> 2] = a;\n                                                        if (!a) {\n                                                            break h;\n                                                        }\n                                                    } else {\n                                                        b[e >> 2] = a;\n                                                        if (a | 0) {\n                                                            break;\n                                                        }\n                                                        b[5858] = b[5858] & ~(1 << d);\n                                                        break h;\n                                                    }\n                                                }while (0);\n                                                b[a + 24 >> 2] = g;\n                                                d = c + 16 | 0;\n                                                e = b[d >> 2] | 0;\n                                                if (e | 0) {\n                                                    b[a + 16 >> 2] = e;\n                                                    b[e + 24 >> 2] = a;\n                                                }\n                                                d = b[d + 4 >> 2] | 0;\n                                                if (!d) {\n                                                    break;\n                                                }\n                                                b[a + 20 >> 2] = d;\n                                                b[d + 24 >> 2] = a;\n                                            }\n                                        }while (0);\n                                        c = c + h | 0;\n                                        f = h + i | 0;\n                                    } else {\n                                        f = i;\n                                    }\n                                    c = c + 4 | 0;\n                                    b[c >> 2] = b[c >> 2] & -2;\n                                    b[k + 4 >> 2] = f | 1;\n                                    b[k + f >> 2] = f;\n                                    c = f >>> 3;\n                                    if (f >>> 0 < 256) {\n                                        d = 23468 + (c << 1 << 2) | 0;\n                                        a = b[5857] | 0;\n                                        c = 1 << c;\n                                        if (!(a & c)) {\n                                            b[5857] = a | c;\n                                            c = d;\n                                            a = d + 8 | 0;\n                                        } else {\n                                            a = d + 8 | 0;\n                                            c = b[a >> 2] | 0;\n                                        }\n                                        b[a >> 2] = k;\n                                        b[c + 12 >> 2] = k;\n                                        b[k + 8 >> 2] = c;\n                                        b[k + 12 >> 2] = d;\n                                        break;\n                                    }\n                                    c = f >>> 8;\n                                    do {\n                                        if (!c) {\n                                            e = 0;\n                                        } else {\n                                            if (f >>> 0 > 16777215) {\n                                                e = 31;\n                                                break;\n                                            }\n                                            u = (c + 1048320 | 0) >>> 16 & 8;\n                                            v = c << u;\n                                            t = (v + 520192 | 0) >>> 16 & 4;\n                                            v = v << t;\n                                            e = (v + 245760 | 0) >>> 16 & 2;\n                                            e = 14 - (t | u | e) + (v << e >>> 15) | 0;\n                                            e = f >>> (e + 7 | 0) & 1 | e << 1;\n                                        }\n                                    }while (0);\n                                    c = 23732 + (e << 2) | 0;\n                                    b[k + 28 >> 2] = e;\n                                    a = k + 16 | 0;\n                                    b[a + 4 >> 2] = 0;\n                                    b[a >> 2] = 0;\n                                    a = b[5858] | 0;\n                                    d = 1 << e;\n                                    if (!(a & d)) {\n                                        b[5858] = a | d;\n                                        b[c >> 2] = k;\n                                        b[k + 24 >> 2] = c;\n                                        b[k + 12 >> 2] = k;\n                                        b[k + 8 >> 2] = k;\n                                        break;\n                                    }\n                                    c = b[c >> 2] | 0;\n                                    i: do {\n                                        if ((b[c + 4 >> 2] & -8 | 0) != (f | 0)) {\n                                            e = f << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n                                            while(1){\n                                                d = c + 16 + (e >>> 31 << 2) | 0;\n                                                a = b[d >> 2] | 0;\n                                                if (!a) {\n                                                    break;\n                                                }\n                                                if ((b[a + 4 >> 2] & -8 | 0) == (f | 0)) {\n                                                    c = a;\n                                                    break i;\n                                                } else {\n                                                    e = e << 1;\n                                                    c = a;\n                                                }\n                                            }\n                                            b[d >> 2] = k;\n                                            b[k + 24 >> 2] = c;\n                                            b[k + 12 >> 2] = k;\n                                            b[k + 8 >> 2] = k;\n                                            break g;\n                                        }\n                                    }while (0);\n                                    u = c + 8 | 0;\n                                    v = b[u >> 2] | 0;\n                                    b[v + 12 >> 2] = k;\n                                    b[u >> 2] = k;\n                                    b[k + 8 >> 2] = v;\n                                    b[k + 12 >> 2] = c;\n                                    b[k + 24 >> 2] = 0;\n                                }\n                            }while (0);\n                            v = l + 8 | 0;\n                            T = w;\n                            return v | 0;\n                        }\n                        c = 23876;\n                        while(1){\n                            a = b[c >> 2] | 0;\n                            if (a >>> 0 <= j >>> 0 ? (v = a + (b[c + 4 >> 2] | 0) | 0, v >>> 0 > j >>> 0) : 0) {\n                                break;\n                            }\n                            c = b[c + 8 >> 2] | 0;\n                        }\n                        f = v + -47 | 0;\n                        a = f + 8 | 0;\n                        a = f + ((a & 7 | 0) == 0 ? 0 : 0 - a & 7) | 0;\n                        f = j + 16 | 0;\n                        a = a >>> 0 < f >>> 0 ? j : a;\n                        c = a + 8 | 0;\n                        d = h + -40 | 0;\n                        t = g + 8 | 0;\n                        t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n                        u = g + t | 0;\n                        t = d - t | 0;\n                        b[5863] = u;\n                        b[5860] = t;\n                        b[u + 4 >> 2] = t | 1;\n                        b[g + d + 4 >> 2] = 40;\n                        b[5864] = b[5979];\n                        d = a + 4 | 0;\n                        b[d >> 2] = 27;\n                        b[c >> 2] = b[5969];\n                        b[c + 4 >> 2] = b[5970];\n                        b[c + 8 >> 2] = b[5971];\n                        b[c + 12 >> 2] = b[5972];\n                        b[5969] = g;\n                        b[5970] = h;\n                        b[5972] = 0;\n                        b[5971] = c;\n                        c = a + 24 | 0;\n                        do {\n                            u = c;\n                            c = c + 4 | 0;\n                            b[c >> 2] = 7;\n                        }while ((u + 8 | 0) >>> 0 < v >>> 0);\n                        if ((a | 0) != (j | 0)) {\n                            g = a - j | 0;\n                            b[d >> 2] = b[d >> 2] & -2;\n                            b[j + 4 >> 2] = g | 1;\n                            b[a >> 2] = g;\n                            c = g >>> 3;\n                            if (g >>> 0 < 256) {\n                                d = 23468 + (c << 1 << 2) | 0;\n                                a = b[5857] | 0;\n                                c = 1 << c;\n                                if (!(a & c)) {\n                                    b[5857] = a | c;\n                                    c = d;\n                                    a = d + 8 | 0;\n                                } else {\n                                    a = d + 8 | 0;\n                                    c = b[a >> 2] | 0;\n                                }\n                                b[a >> 2] = j;\n                                b[c + 12 >> 2] = j;\n                                b[j + 8 >> 2] = c;\n                                b[j + 12 >> 2] = d;\n                                break;\n                            }\n                            c = g >>> 8;\n                            if (c) {\n                                if (g >>> 0 > 16777215) {\n                                    e = 31;\n                                } else {\n                                    u = (c + 1048320 | 0) >>> 16 & 8;\n                                    v = c << u;\n                                    t = (v + 520192 | 0) >>> 16 & 4;\n                                    v = v << t;\n                                    e = (v + 245760 | 0) >>> 16 & 2;\n                                    e = 14 - (t | u | e) + (v << e >>> 15) | 0;\n                                    e = g >>> (e + 7 | 0) & 1 | e << 1;\n                                }\n                            } else {\n                                e = 0;\n                            }\n                            d = 23732 + (e << 2) | 0;\n                            b[j + 28 >> 2] = e;\n                            b[j + 20 >> 2] = 0;\n                            b[f >> 2] = 0;\n                            c = b[5858] | 0;\n                            a = 1 << e;\n                            if (!(c & a)) {\n                                b[5858] = c | a;\n                                b[d >> 2] = j;\n                                b[j + 24 >> 2] = d;\n                                b[j + 12 >> 2] = j;\n                                b[j + 8 >> 2] = j;\n                                break;\n                            }\n                            c = b[d >> 2] | 0;\n                            j: do {\n                                if ((b[c + 4 >> 2] & -8 | 0) != (g | 0)) {\n                                    e = g << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n                                    while(1){\n                                        d = c + 16 + (e >>> 31 << 2) | 0;\n                                        a = b[d >> 2] | 0;\n                                        if (!a) {\n                                            break;\n                                        }\n                                        if ((b[a + 4 >> 2] & -8 | 0) == (g | 0)) {\n                                            c = a;\n                                            break j;\n                                        } else {\n                                            e = e << 1;\n                                            c = a;\n                                        }\n                                    }\n                                    b[d >> 2] = j;\n                                    b[j + 24 >> 2] = c;\n                                    b[j + 12 >> 2] = j;\n                                    b[j + 8 >> 2] = j;\n                                    break f;\n                                }\n                            }while (0);\n                            u = c + 8 | 0;\n                            v = b[u >> 2] | 0;\n                            b[v + 12 >> 2] = j;\n                            b[u >> 2] = j;\n                            b[j + 8 >> 2] = v;\n                            b[j + 12 >> 2] = c;\n                            b[j + 24 >> 2] = 0;\n                        }\n                    } else {\n                        v = b[5861] | 0;\n                        if ((v | 0) == 0 | g >>> 0 < v >>> 0) {\n                            b[5861] = g;\n                        }\n                        b[5969] = g;\n                        b[5970] = h;\n                        b[5972] = 0;\n                        b[5866] = b[5975];\n                        b[5865] = -1;\n                        b[5870] = 23468;\n                        b[5869] = 23468;\n                        b[5872] = 23476;\n                        b[5871] = 23476;\n                        b[5874] = 23484;\n                        b[5873] = 23484;\n                        b[5876] = 23492;\n                        b[5875] = 23492;\n                        b[5878] = 23500;\n                        b[5877] = 23500;\n                        b[5880] = 23508;\n                        b[5879] = 23508;\n                        b[5882] = 23516;\n                        b[5881] = 23516;\n                        b[5884] = 23524;\n                        b[5883] = 23524;\n                        b[5886] = 23532;\n                        b[5885] = 23532;\n                        b[5888] = 23540;\n                        b[5887] = 23540;\n                        b[5890] = 23548;\n                        b[5889] = 23548;\n                        b[5892] = 23556;\n                        b[5891] = 23556;\n                        b[5894] = 23564;\n                        b[5893] = 23564;\n                        b[5896] = 23572;\n                        b[5895] = 23572;\n                        b[5898] = 23580;\n                        b[5897] = 23580;\n                        b[5900] = 23588;\n                        b[5899] = 23588;\n                        b[5902] = 23596;\n                        b[5901] = 23596;\n                        b[5904] = 23604;\n                        b[5903] = 23604;\n                        b[5906] = 23612;\n                        b[5905] = 23612;\n                        b[5908] = 23620;\n                        b[5907] = 23620;\n                        b[5910] = 23628;\n                        b[5909] = 23628;\n                        b[5912] = 23636;\n                        b[5911] = 23636;\n                        b[5914] = 23644;\n                        b[5913] = 23644;\n                        b[5916] = 23652;\n                        b[5915] = 23652;\n                        b[5918] = 23660;\n                        b[5917] = 23660;\n                        b[5920] = 23668;\n                        b[5919] = 23668;\n                        b[5922] = 23676;\n                        b[5921] = 23676;\n                        b[5924] = 23684;\n                        b[5923] = 23684;\n                        b[5926] = 23692;\n                        b[5925] = 23692;\n                        b[5928] = 23700;\n                        b[5927] = 23700;\n                        b[5930] = 23708;\n                        b[5929] = 23708;\n                        b[5932] = 23716;\n                        b[5931] = 23716;\n                        v = h + -40 | 0;\n                        t = g + 8 | 0;\n                        t = (t & 7 | 0) == 0 ? 0 : 0 - t & 7;\n                        u = g + t | 0;\n                        t = v - t | 0;\n                        b[5863] = u;\n                        b[5860] = t;\n                        b[u + 4 >> 2] = t | 1;\n                        b[g + v + 4 >> 2] = 40;\n                        b[5864] = b[5979];\n                    }\n                }while (0);\n                c = b[5860] | 0;\n                if (c >>> 0 > m >>> 0) {\n                    t = c - m | 0;\n                    b[5860] = t;\n                    v = b[5863] | 0;\n                    u = v + m | 0;\n                    b[5863] = u;\n                    b[u + 4 >> 2] = t | 1;\n                    b[v + 4 >> 2] = m | 3;\n                    v = v + 8 | 0;\n                    T = w;\n                    return v | 0;\n                }\n            }\n            v = fd() | 0;\n            b[v >> 2] = 12;\n            v = 0;\n            T = w;\n            return v | 0;\n        }\n        function jd(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            if (!a) {\n                return;\n            }\n            d = a + -8 | 0;\n            f = b[5861] | 0;\n            a = b[a + -4 >> 2] | 0;\n            c = a & -8;\n            j = d + c | 0;\n            do {\n                if (!(a & 1)) {\n                    e = b[d >> 2] | 0;\n                    if (!(a & 3)) {\n                        return;\n                    }\n                    h = d + (0 - e) | 0;\n                    g = e + c | 0;\n                    if (h >>> 0 < f >>> 0) {\n                        return;\n                    }\n                    if ((b[5862] | 0) == (h | 0)) {\n                        a = j + 4 | 0;\n                        c = b[a >> 2] | 0;\n                        if ((c & 3 | 0) != 3) {\n                            i = h;\n                            c = g;\n                            break;\n                        }\n                        b[5859] = g;\n                        b[a >> 2] = c & -2;\n                        b[h + 4 >> 2] = g | 1;\n                        b[h + g >> 2] = g;\n                        return;\n                    }\n                    d = e >>> 3;\n                    if (e >>> 0 < 256) {\n                        a = b[h + 8 >> 2] | 0;\n                        c = b[h + 12 >> 2] | 0;\n                        if ((c | 0) == (a | 0)) {\n                            b[5857] = b[5857] & ~(1 << d);\n                            i = h;\n                            c = g;\n                            break;\n                        } else {\n                            b[a + 12 >> 2] = c;\n                            b[c + 8 >> 2] = a;\n                            i = h;\n                            c = g;\n                            break;\n                        }\n                    }\n                    f = b[h + 24 >> 2] | 0;\n                    a = b[h + 12 >> 2] | 0;\n                    do {\n                        if ((a | 0) == (h | 0)) {\n                            c = h + 16 | 0;\n                            d = c + 4 | 0;\n                            a = b[d >> 2] | 0;\n                            if (!a) {\n                                a = b[c >> 2] | 0;\n                                if (!a) {\n                                    a = 0;\n                                    break;\n                                }\n                            } else {\n                                c = d;\n                            }\n                            while(1){\n                                e = a + 20 | 0;\n                                d = b[e >> 2] | 0;\n                                if (!d) {\n                                    e = a + 16 | 0;\n                                    d = b[e >> 2] | 0;\n                                    if (!d) {\n                                        break;\n                                    } else {\n                                        a = d;\n                                        c = e;\n                                    }\n                                } else {\n                                    a = d;\n                                    c = e;\n                                }\n                            }\n                            b[c >> 2] = 0;\n                        } else {\n                            i = b[h + 8 >> 2] | 0;\n                            b[i + 12 >> 2] = a;\n                            b[a + 8 >> 2] = i;\n                        }\n                    }while (0);\n                    if (f) {\n                        c = b[h + 28 >> 2] | 0;\n                        d = 23732 + (c << 2) | 0;\n                        if ((b[d >> 2] | 0) == (h | 0)) {\n                            b[d >> 2] = a;\n                            if (!a) {\n                                b[5858] = b[5858] & ~(1 << c);\n                                i = h;\n                                c = g;\n                                break;\n                            }\n                        } else {\n                            i = f + 16 | 0;\n                            b[((b[i >> 2] | 0) == (h | 0) ? i : f + 20 | 0) >> 2] = a;\n                            if (!a) {\n                                i = h;\n                                c = g;\n                                break;\n                            }\n                        }\n                        b[a + 24 >> 2] = f;\n                        c = h + 16 | 0;\n                        d = b[c >> 2] | 0;\n                        if (d | 0) {\n                            b[a + 16 >> 2] = d;\n                            b[d + 24 >> 2] = a;\n                        }\n                        c = b[c + 4 >> 2] | 0;\n                        if (c) {\n                            b[a + 20 >> 2] = c;\n                            b[c + 24 >> 2] = a;\n                            i = h;\n                            c = g;\n                        } else {\n                            i = h;\n                            c = g;\n                        }\n                    } else {\n                        i = h;\n                        c = g;\n                    }\n                } else {\n                    i = d;\n                    h = d;\n                }\n            }while (0);\n            if (h >>> 0 >= j >>> 0) {\n                return;\n            }\n            a = j + 4 | 0;\n            e = b[a >> 2] | 0;\n            if (!(e & 1)) {\n                return;\n            }\n            if (!(e & 2)) {\n                if ((b[5863] | 0) == (j | 0)) {\n                    j = (b[5860] | 0) + c | 0;\n                    b[5860] = j;\n                    b[5863] = i;\n                    b[i + 4 >> 2] = j | 1;\n                    if ((i | 0) != (b[5862] | 0)) {\n                        return;\n                    }\n                    b[5862] = 0;\n                    b[5859] = 0;\n                    return;\n                }\n                if ((b[5862] | 0) == (j | 0)) {\n                    j = (b[5859] | 0) + c | 0;\n                    b[5859] = j;\n                    b[5862] = h;\n                    b[i + 4 >> 2] = j | 1;\n                    b[h + j >> 2] = j;\n                    return;\n                }\n                f = (e & -8) + c | 0;\n                d = e >>> 3;\n                do {\n                    if (e >>> 0 < 256) {\n                        c = b[j + 8 >> 2] | 0;\n                        a = b[j + 12 >> 2] | 0;\n                        if ((a | 0) == (c | 0)) {\n                            b[5857] = b[5857] & ~(1 << d);\n                            break;\n                        } else {\n                            b[c + 12 >> 2] = a;\n                            b[a + 8 >> 2] = c;\n                            break;\n                        }\n                    } else {\n                        g = b[j + 24 >> 2] | 0;\n                        a = b[j + 12 >> 2] | 0;\n                        do {\n                            if ((a | 0) == (j | 0)) {\n                                c = j + 16 | 0;\n                                d = c + 4 | 0;\n                                a = b[d >> 2] | 0;\n                                if (!a) {\n                                    a = b[c >> 2] | 0;\n                                    if (!a) {\n                                        d = 0;\n                                        break;\n                                    }\n                                } else {\n                                    c = d;\n                                }\n                                while(1){\n                                    e = a + 20 | 0;\n                                    d = b[e >> 2] | 0;\n                                    if (!d) {\n                                        e = a + 16 | 0;\n                                        d = b[e >> 2] | 0;\n                                        if (!d) {\n                                            break;\n                                        } else {\n                                            a = d;\n                                            c = e;\n                                        }\n                                    } else {\n                                        a = d;\n                                        c = e;\n                                    }\n                                }\n                                b[c >> 2] = 0;\n                                d = a;\n                            } else {\n                                d = b[j + 8 >> 2] | 0;\n                                b[d + 12 >> 2] = a;\n                                b[a + 8 >> 2] = d;\n                                d = a;\n                            }\n                        }while (0);\n                        if (g | 0) {\n                            a = b[j + 28 >> 2] | 0;\n                            c = 23732 + (a << 2) | 0;\n                            if ((b[c >> 2] | 0) == (j | 0)) {\n                                b[c >> 2] = d;\n                                if (!d) {\n                                    b[5858] = b[5858] & ~(1 << a);\n                                    break;\n                                }\n                            } else {\n                                e = g + 16 | 0;\n                                b[((b[e >> 2] | 0) == (j | 0) ? e : g + 20 | 0) >> 2] = d;\n                                if (!d) {\n                                    break;\n                                }\n                            }\n                            b[d + 24 >> 2] = g;\n                            a = j + 16 | 0;\n                            c = b[a >> 2] | 0;\n                            if (c | 0) {\n                                b[d + 16 >> 2] = c;\n                                b[c + 24 >> 2] = d;\n                            }\n                            a = b[a + 4 >> 2] | 0;\n                            if (a | 0) {\n                                b[d + 20 >> 2] = a;\n                                b[a + 24 >> 2] = d;\n                            }\n                        }\n                    }\n                }while (0);\n                b[i + 4 >> 2] = f | 1;\n                b[h + f >> 2] = f;\n                if ((i | 0) == (b[5862] | 0)) {\n                    b[5859] = f;\n                    return;\n                }\n            } else {\n                b[a >> 2] = e & -2;\n                b[i + 4 >> 2] = c | 1;\n                b[h + c >> 2] = c;\n                f = c;\n            }\n            a = f >>> 3;\n            if (f >>> 0 < 256) {\n                d = 23468 + (a << 1 << 2) | 0;\n                c = b[5857] | 0;\n                a = 1 << a;\n                if (!(c & a)) {\n                    b[5857] = c | a;\n                    a = d;\n                    c = d + 8 | 0;\n                } else {\n                    c = d + 8 | 0;\n                    a = b[c >> 2] | 0;\n                }\n                b[c >> 2] = i;\n                b[a + 12 >> 2] = i;\n                b[i + 8 >> 2] = a;\n                b[i + 12 >> 2] = d;\n                return;\n            }\n            a = f >>> 8;\n            if (a) {\n                if (f >>> 0 > 16777215) {\n                    e = 31;\n                } else {\n                    h = (a + 1048320 | 0) >>> 16 & 8;\n                    j = a << h;\n                    g = (j + 520192 | 0) >>> 16 & 4;\n                    j = j << g;\n                    e = (j + 245760 | 0) >>> 16 & 2;\n                    e = 14 - (g | h | e) + (j << e >>> 15) | 0;\n                    e = f >>> (e + 7 | 0) & 1 | e << 1;\n                }\n            } else {\n                e = 0;\n            }\n            a = 23732 + (e << 2) | 0;\n            b[i + 28 >> 2] = e;\n            b[i + 20 >> 2] = 0;\n            b[i + 16 >> 2] = 0;\n            c = b[5858] | 0;\n            d = 1 << e;\n            a: do {\n                if (!(c & d)) {\n                    b[5858] = c | d;\n                    b[a >> 2] = i;\n                    b[i + 24 >> 2] = a;\n                    b[i + 12 >> 2] = i;\n                    b[i + 8 >> 2] = i;\n                } else {\n                    a = b[a >> 2] | 0;\n                    b: do {\n                        if ((b[a + 4 >> 2] & -8 | 0) != (f | 0)) {\n                            e = f << ((e | 0) == 31 ? 0 : 25 - (e >>> 1) | 0);\n                            while(1){\n                                d = a + 16 + (e >>> 31 << 2) | 0;\n                                c = b[d >> 2] | 0;\n                                if (!c) {\n                                    break;\n                                }\n                                if ((b[c + 4 >> 2] & -8 | 0) == (f | 0)) {\n                                    a = c;\n                                    break b;\n                                } else {\n                                    e = e << 1;\n                                    a = c;\n                                }\n                            }\n                            b[d >> 2] = i;\n                            b[i + 24 >> 2] = a;\n                            b[i + 12 >> 2] = i;\n                            b[i + 8 >> 2] = i;\n                            break a;\n                        }\n                    }while (0);\n                    h = a + 8 | 0;\n                    j = b[h >> 2] | 0;\n                    b[j + 12 >> 2] = i;\n                    b[h >> 2] = i;\n                    b[i + 8 >> 2] = j;\n                    b[i + 12 >> 2] = a;\n                    b[i + 24 >> 2] = 0;\n                }\n            }while (0);\n            j = (b[5865] | 0) + -1 | 0;\n            b[5865] = j;\n            if (j | 0) {\n                return;\n            }\n            a = 23884;\n            while(1){\n                a = b[a >> 2] | 0;\n                if (!a) {\n                    break;\n                } else {\n                    a = a + 8 | 0;\n                }\n            }\n            b[5865] = -1;\n            return;\n        }\n        function kd(a, c) {\n            a = a | 0;\n            c = c | 0;\n            var d = 0;\n            if (a) {\n                d = B(c, a) | 0;\n                if ((c | a) >>> 0 > 65535) {\n                    d = ((d >>> 0) / (a >>> 0) | 0 | 0) == (c | 0) ? d : -1;\n                }\n            } else {\n                d = 0;\n            }\n            a = id(d) | 0;\n            if (!a) {\n                return a | 0;\n            }\n            if (!(b[a + -4 >> 2] & 3)) {\n                return a | 0;\n            }\n            Bd(a | 0, 0, d | 0) | 0;\n            return a | 0;\n        }\n        function ld(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            c = a + c >>> 0;\n            return (G(b + d + (c >>> 0 < a >>> 0 | 0) >>> 0 | 0), c | 0) | 0;\n        }\n        function md(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            d = b - d - (c >>> 0 > a >>> 0 | 0) >>> 0;\n            return (G(d | 0), a - c >>> 0 | 0) | 0;\n        }\n        function nd(a) {\n            a = a | 0;\n            return (a ? 31 - (E(a ^ a - 1) | 0) | 0 : 32) | 0;\n        }\n        function od(a, c, d, e, f) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            f = f | 0;\n            var g = 0, h = 0, i = 0, j = 0, k = 0, l = 0, m = 0, n = 0, o = 0, p = 0;\n            l = a;\n            j = c;\n            k = j;\n            h = d;\n            n = e;\n            i = n;\n            if (!k) {\n                g = (f | 0) != 0;\n                if (!i) {\n                    if (g) {\n                        b[f >> 2] = (l >>> 0) % (h >>> 0);\n                        b[f + 4 >> 2] = 0;\n                    }\n                    n = 0;\n                    f = (l >>> 0) / (h >>> 0) >>> 0;\n                    return (G(n | 0), f) | 0;\n                } else {\n                    if (!g) {\n                        n = 0;\n                        f = 0;\n                        return (G(n | 0), f) | 0;\n                    }\n                    b[f >> 2] = a | 0;\n                    b[f + 4 >> 2] = c & 0;\n                    n = 0;\n                    f = 0;\n                    return (G(n | 0), f) | 0;\n                }\n            }\n            g = (i | 0) == 0;\n            do {\n                if (h) {\n                    if (!g) {\n                        g = (E(i | 0) | 0) - (E(k | 0) | 0) | 0;\n                        if (g >>> 0 <= 31) {\n                            m = g + 1 | 0;\n                            i = 31 - g | 0;\n                            c = g - 31 >> 31;\n                            h = m;\n                            a = l >>> (m >>> 0) & c | k << i;\n                            c = k >>> (m >>> 0) & c;\n                            g = 0;\n                            i = l << i;\n                            break;\n                        }\n                        if (!f) {\n                            n = 0;\n                            f = 0;\n                            return (G(n | 0), f) | 0;\n                        }\n                        b[f >> 2] = a | 0;\n                        b[f + 4 >> 2] = j | c & 0;\n                        n = 0;\n                        f = 0;\n                        return (G(n | 0), f) | 0;\n                    }\n                    g = h - 1 | 0;\n                    if (g & h | 0) {\n                        i = (E(h | 0) | 0) + 33 - (E(k | 0) | 0) | 0;\n                        p = 64 - i | 0;\n                        m = 32 - i | 0;\n                        j = m >> 31;\n                        o = i - 32 | 0;\n                        c = o >> 31;\n                        h = i;\n                        a = m - 1 >> 31 & k >>> (o >>> 0) | (k << m | l >>> (i >>> 0)) & c;\n                        c = c & k >>> (i >>> 0);\n                        g = l << p & j;\n                        i = (k << p | l >>> (o >>> 0)) & j | l << m & i - 33 >> 31;\n                        break;\n                    }\n                    if (f | 0) {\n                        b[f >> 2] = g & l;\n                        b[f + 4 >> 2] = 0;\n                    }\n                    if ((h | 0) == 1) {\n                        o = j | c & 0;\n                        p = a | 0 | 0;\n                        return (G(o | 0), p) | 0;\n                    } else {\n                        p = nd(h | 0) | 0;\n                        o = k >>> (p >>> 0) | 0;\n                        p = k << 32 - p | l >>> (p >>> 0) | 0;\n                        return (G(o | 0), p) | 0;\n                    }\n                } else {\n                    if (g) {\n                        if (f | 0) {\n                            b[f >> 2] = (k >>> 0) % (h >>> 0);\n                            b[f + 4 >> 2] = 0;\n                        }\n                        o = 0;\n                        p = (k >>> 0) / (h >>> 0) >>> 0;\n                        return (G(o | 0), p) | 0;\n                    }\n                    if (!l) {\n                        if (f | 0) {\n                            b[f >> 2] = 0;\n                            b[f + 4 >> 2] = (k >>> 0) % (i >>> 0);\n                        }\n                        o = 0;\n                        p = (k >>> 0) / (i >>> 0) >>> 0;\n                        return (G(o | 0), p) | 0;\n                    }\n                    g = i - 1 | 0;\n                    if (!(g & i)) {\n                        if (f | 0) {\n                            b[f >> 2] = a | 0;\n                            b[f + 4 >> 2] = g & k | c & 0;\n                        }\n                        o = 0;\n                        p = k >>> ((nd(i | 0) | 0) >>> 0);\n                        return (G(o | 0), p) | 0;\n                    }\n                    g = (E(i | 0) | 0) - (E(k | 0) | 0) | 0;\n                    if (g >>> 0 <= 30) {\n                        c = g + 1 | 0;\n                        i = 31 - g | 0;\n                        h = c;\n                        a = k << i | l >>> (c >>> 0);\n                        c = k >>> (c >>> 0);\n                        g = 0;\n                        i = l << i;\n                        break;\n                    }\n                    if (!f) {\n                        o = 0;\n                        p = 0;\n                        return (G(o | 0), p) | 0;\n                    }\n                    b[f >> 2] = a | 0;\n                    b[f + 4 >> 2] = j | c & 0;\n                    o = 0;\n                    p = 0;\n                    return (G(o | 0), p) | 0;\n                }\n            }while (0);\n            if (!h) {\n                k = i;\n                j = 0;\n                i = 0;\n            } else {\n                m = d | 0 | 0;\n                l = n | e & 0;\n                k = ld(m | 0, l | 0, -1, -1) | 0;\n                d = H() | 0;\n                j = i;\n                i = 0;\n                do {\n                    e = j;\n                    j = g >>> 31 | j << 1;\n                    g = i | g << 1;\n                    e = a << 1 | e >>> 31 | 0;\n                    n = a >>> 31 | c << 1 | 0;\n                    md(k | 0, d | 0, e | 0, n | 0) | 0;\n                    p = H() | 0;\n                    o = p >> 31 | ((p | 0) < 0 ? -1 : 0) << 1;\n                    i = o & 1;\n                    a = md(e | 0, n | 0, o & m | 0, (((p | 0) < 0 ? -1 : 0) >> 31 | ((p | 0) < 0 ? -1 : 0) << 1) & l | 0) | 0;\n                    c = H() | 0;\n                    h = h - 1 | 0;\n                }while ((h | 0) != 0);\n                k = j;\n                j = 0;\n            }\n            h = 0;\n            if (f | 0) {\n                b[f >> 2] = a;\n                b[f + 4 >> 2] = c;\n            }\n            o = (g | 0) >>> 31 | (k | h) << 1 | (h << 1 | g >>> 31) & 0 | j;\n            p = (g << 1 | 0 >>> 31) & -2 | i;\n            return (G(o | 0), p) | 0;\n        }\n        function pd(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0, g = 0, h = 0, i = 0, j = 0;\n            j = b >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;\n            i = ((b | 0) < 0 ? -1 : 0) >> 31 | ((b | 0) < 0 ? -1 : 0) << 1;\n            f = d >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;\n            e = ((d | 0) < 0 ? -1 : 0) >> 31 | ((d | 0) < 0 ? -1 : 0) << 1;\n            h = md(j ^ a | 0, i ^ b | 0, j | 0, i | 0) | 0;\n            g = H() | 0;\n            a = f ^ j;\n            b = e ^ i;\n            return md((od(h, g, md(f ^ c | 0, e ^ d | 0, f | 0, e | 0) | 0, H() | 0, 0) | 0) ^ a | 0, (H() | 0) ^ b | 0, a | 0, b | 0) | 0;\n        }\n        function qd(a, b) {\n            a = a | 0;\n            b = b | 0;\n            var c = 0, d = 0, e = 0, f = 0;\n            f = a & 65535;\n            e = b & 65535;\n            c = B(e, f) | 0;\n            d = a >>> 16;\n            a = (c >>> 16) + (B(e, d) | 0) | 0;\n            e = b >>> 16;\n            b = B(e, f) | 0;\n            return (G((a >>> 16) + (B(e, d) | 0) + (((a & 65535) + b | 0) >>> 16) | 0), a + b << 16 | c & 65535 | 0) | 0;\n        }\n        function rd(a, b, c, d) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            d = d | 0;\n            var e = 0, f = 0;\n            e = a;\n            f = c;\n            c = qd(e, f) | 0;\n            a = H() | 0;\n            return (G((B(b, f) | 0) + (B(d, e) | 0) + a | a & 0 | 0), c | 0 | 0) | 0;\n        }\n        function sd(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0, j = 0, k = 0;\n            f = T;\n            T = T + 16 | 0;\n            i = f | 0;\n            h = c >> 31 | ((c | 0) < 0 ? -1 : 0) << 1;\n            g = ((c | 0) < 0 ? -1 : 0) >> 31 | ((c | 0) < 0 ? -1 : 0) << 1;\n            k = e >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;\n            j = ((e | 0) < 0 ? -1 : 0) >> 31 | ((e | 0) < 0 ? -1 : 0) << 1;\n            a = md(h ^ a | 0, g ^ c | 0, h | 0, g | 0) | 0;\n            c = H() | 0;\n            od(a, c, md(k ^ d | 0, j ^ e | 0, k | 0, j | 0) | 0, H() | 0, i) | 0;\n            e = md(b[i >> 2] ^ h | 0, b[i + 4 >> 2] ^ g | 0, h | 0, g | 0) | 0;\n            d = H() | 0;\n            T = f;\n            return (G(d | 0), e) | 0;\n        }\n        function td(a, c, d, e) {\n            a = a | 0;\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0;\n            g = T;\n            T = T + 16 | 0;\n            f = g | 0;\n            od(a, c, d, e, f) | 0;\n            T = g;\n            return (G(b[f + 4 >> 2] | 0), b[f >> 2] | 0) | 0;\n        }\n        function ud(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            if ((c | 0) < 32) {\n                G(b >> c | 0);\n                return a >>> c | (b & (1 << c) - 1) << 32 - c;\n            }\n            G(((b | 0) < 0 ? -1 : 0) | 0);\n            return b >> c - 32 | 0;\n        }\n        function vd(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            if ((c | 0) < 32) {\n                G(b >>> c | 0);\n                return a >>> c | (b & (1 << c) - 1) << 32 - c;\n            }\n            G(0);\n            return b >>> c - 32 | 0;\n        }\n        function wd(a, b, c) {\n            a = a | 0;\n            b = b | 0;\n            c = c | 0;\n            if ((c | 0) < 32) {\n                G(b << c | (a & (1 << c) - 1 << 32 - c) >>> 32 - c | 0);\n                return a << c;\n            }\n            G(a << c - 32 | 0);\n            return 0;\n        }\n        function xd(a, b) {\n            a = +a;\n            b = +b;\n            if (a != a) {\n                return +b;\n            }\n            if (b != b) {\n                return +a;\n            }\n            return +D(+a, +b);\n        }\n        function yd(a, b) {\n            a = +a;\n            b = +b;\n            if (a != a) {\n                return +b;\n            }\n            if (b != b) {\n                return +a;\n            }\n            return +C(+a, +b);\n        }\n        function zd(a) {\n            a = +a;\n            return a >= 0.0 ? +p(a + .5) : +A(a - .5);\n        }\n        function Ad(c, d, e) {\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0;\n            if ((e | 0) >= 8192) {\n                L(c | 0, d | 0, e | 0) | 0;\n                return c | 0;\n            }\n            h = c | 0;\n            g = c + e | 0;\n            if ((c & 3) == (d & 3)) {\n                while(c & 3){\n                    if (!e) {\n                        return h | 0;\n                    }\n                    a[c >> 0] = a[d >> 0] | 0;\n                    c = c + 1 | 0;\n                    d = d + 1 | 0;\n                    e = e - 1 | 0;\n                }\n                e = g & -4 | 0;\n                f = e - 64 | 0;\n                while((c | 0) <= (f | 0)){\n                    b[c >> 2] = b[d >> 2];\n                    b[c + 4 >> 2] = b[d + 4 >> 2];\n                    b[c + 8 >> 2] = b[d + 8 >> 2];\n                    b[c + 12 >> 2] = b[d + 12 >> 2];\n                    b[c + 16 >> 2] = b[d + 16 >> 2];\n                    b[c + 20 >> 2] = b[d + 20 >> 2];\n                    b[c + 24 >> 2] = b[d + 24 >> 2];\n                    b[c + 28 >> 2] = b[d + 28 >> 2];\n                    b[c + 32 >> 2] = b[d + 32 >> 2];\n                    b[c + 36 >> 2] = b[d + 36 >> 2];\n                    b[c + 40 >> 2] = b[d + 40 >> 2];\n                    b[c + 44 >> 2] = b[d + 44 >> 2];\n                    b[c + 48 >> 2] = b[d + 48 >> 2];\n                    b[c + 52 >> 2] = b[d + 52 >> 2];\n                    b[c + 56 >> 2] = b[d + 56 >> 2];\n                    b[c + 60 >> 2] = b[d + 60 >> 2];\n                    c = c + 64 | 0;\n                    d = d + 64 | 0;\n                }\n                while((c | 0) < (e | 0)){\n                    b[c >> 2] = b[d >> 2];\n                    c = c + 4 | 0;\n                    d = d + 4 | 0;\n                }\n            } else {\n                e = g - 4 | 0;\n                while((c | 0) < (e | 0)){\n                    a[c >> 0] = a[d >> 0] | 0;\n                    a[c + 1 >> 0] = a[d + 1 >> 0] | 0;\n                    a[c + 2 >> 0] = a[d + 2 >> 0] | 0;\n                    a[c + 3 >> 0] = a[d + 3 >> 0] | 0;\n                    c = c + 4 | 0;\n                    d = d + 4 | 0;\n                }\n            }\n            while((c | 0) < (g | 0)){\n                a[c >> 0] = a[d >> 0] | 0;\n                c = c + 1 | 0;\n                d = d + 1 | 0;\n            }\n            return h | 0;\n        }\n        function Bd(c, d, e) {\n            c = c | 0;\n            d = d | 0;\n            e = e | 0;\n            var f = 0, g = 0, h = 0, i = 0;\n            h = c + e | 0;\n            d = d & 255;\n            if ((e | 0) >= 67) {\n                while(c & 3){\n                    a[c >> 0] = d;\n                    c = c + 1 | 0;\n                }\n                f = h & -4 | 0;\n                i = d | d << 8 | d << 16 | d << 24;\n                g = f - 64 | 0;\n                while((c | 0) <= (g | 0)){\n                    b[c >> 2] = i;\n                    b[c + 4 >> 2] = i;\n                    b[c + 8 >> 2] = i;\n                    b[c + 12 >> 2] = i;\n                    b[c + 16 >> 2] = i;\n                    b[c + 20 >> 2] = i;\n                    b[c + 24 >> 2] = i;\n                    b[c + 28 >> 2] = i;\n                    b[c + 32 >> 2] = i;\n                    b[c + 36 >> 2] = i;\n                    b[c + 40 >> 2] = i;\n                    b[c + 44 >> 2] = i;\n                    b[c + 48 >> 2] = i;\n                    b[c + 52 >> 2] = i;\n                    b[c + 56 >> 2] = i;\n                    b[c + 60 >> 2] = i;\n                    c = c + 64 | 0;\n                }\n                while((c | 0) < (f | 0)){\n                    b[c >> 2] = i;\n                    c = c + 4 | 0;\n                }\n            }\n            while((c | 0) < (h | 0)){\n                a[c >> 0] = d;\n                c = c + 1 | 0;\n            }\n            return h - e | 0;\n        }\n        function Cd(a) {\n            a = +a;\n            return a >= 0.0 ? +p(a + .5) : +A(a - .5);\n        }\n        function Dd(a) {\n            a = a | 0;\n            var c = 0, d = 0, e = 0;\n            e = K() | 0;\n            d = b[g >> 2] | 0;\n            c = d + a | 0;\n            if ((a | 0) > 0 & (c | 0) < (d | 0) | (c | 0) < 0) {\n                N(c | 0) | 0;\n                J(12);\n                return -1;\n            }\n            if ((c | 0) > (e | 0)) {\n                if (!(M(c | 0) | 0)) {\n                    J(12);\n                    return -1;\n                }\n            }\n            b[g >> 2] = c;\n            return d | 0;\n        } // EMSCRIPTEN_END_FUNCS\n        return {\n            ___divdi3: pd,\n            ___muldi3: rd,\n            ___remdi3: sd,\n            ___uremdi3: td,\n            _areNeighborCells: $a,\n            _bitshift64Ashr: ud,\n            _bitshift64Lshr: vd,\n            _bitshift64Shl: wd,\n            _calloc: kd,\n            _cellAreaKm2: lc,\n            _cellAreaM2: mc,\n            _cellAreaRads2: kc,\n            _cellToBoundary: Qb,\n            _cellToCenterChild: Ab,\n            _cellToChildPos: Vb,\n            _cellToChildren: yb,\n            _cellToChildrenSize: wb,\n            _cellToLatLng: Pb,\n            _cellToLocalIj: xc,\n            _cellToParent: vb,\n            _cellToVertex: Wc,\n            _cellToVertexes: Xc,\n            _cellsToDirectedEdge: ab,\n            _cellsToLinkedMultiPolygon: la,\n            _childPosToCell: Wb,\n            _compactCells: Bb,\n            _destroyLinkedMultiPolygon: sc,\n            _directedEdgeToBoundary: gb,\n            _directedEdgeToCells: eb,\n            _edgeLengthKm: oc,\n            _edgeLengthM: pc,\n            _edgeLengthRads: nc,\n            _emscripten_replace_memory: W,\n            _free: jd,\n            _getBaseCellNumber: tb,\n            _getDirectedEdgeDestination: cb,\n            _getDirectedEdgeOrigin: bb,\n            _getHexagonAreaAvgKm2: ec,\n            _getHexagonAreaAvgM2: fc,\n            _getHexagonEdgeLengthAvgKm: gc,\n            _getHexagonEdgeLengthAvgM: hc,\n            _getIcosahedronFaces: Sb,\n            _getNumCells: ic,\n            _getPentagons: Ub,\n            _getRes0Cells: wa,\n            _getResolution: sb,\n            _greatCircleDistanceKm: ac,\n            _greatCircleDistanceM: bc,\n            _greatCircleDistanceRads: $b,\n            _gridDisk: aa,\n            _gridDiskDistances: ba,\n            _gridDistance: zc,\n            _gridPathCells: Bc,\n            _gridPathCellsSize: Ac,\n            _gridRingUnsafe: ga,\n            _i64Add: ld,\n            _i64Subtract: md,\n            _isPentagon: xb,\n            _isResClassIII: Eb,\n            _isValidCell: ub,\n            _isValidDirectedEdge: db,\n            _isValidVertex: Zc,\n            _latLngToCell: Mb,\n            _llvm_maxnum_f64: xd,\n            _llvm_minnum_f64: yd,\n            _llvm_round_f64: zd,\n            _localIjToCell: yc,\n            _malloc: id,\n            _maxFaceCount: Rb,\n            _maxGridDiskSize: $,\n            _maxPolygonToCellsSize: ha,\n            _memcpy: Ad,\n            _memset: Bd,\n            _originToDirectedEdges: fb,\n            _pentagonCount: Tb,\n            _polygonToCells: ja,\n            _readInt64AsDoubleFromPointer: Oc,\n            _res0CellCount: va,\n            _round: Cd,\n            _sbrk: Dd,\n            _sizeOfCellBoundary: Jc,\n            _sizeOfCoordIJ: Nc,\n            _sizeOfGeoLoop: Kc,\n            _sizeOfGeoPolygon: Lc,\n            _sizeOfH3Index: Hc,\n            _sizeOfLatLng: Ic,\n            _sizeOfLinkedGeoPolygon: Mc,\n            _uncompactCells: Cb,\n            _uncompactCellsSize: Db,\n            _vertexToLatLng: Yc,\n            establishStackSpace: _,\n            stackAlloc: X,\n            stackRestore: Z,\n            stackSave: Y\n        };\n    }(asmGlobalArg, asmLibraryArg, buffer);\n    var ___divdi3 = Module[\"___divdi3\"] = asm[\"___divdi3\"];\n    var ___muldi3 = Module[\"___muldi3\"] = asm[\"___muldi3\"];\n    var ___remdi3 = Module[\"___remdi3\"] = asm[\"___remdi3\"];\n    var ___uremdi3 = Module[\"___uremdi3\"] = asm[\"___uremdi3\"];\n    var _areNeighborCells = Module[\"_areNeighborCells\"] = asm[\"_areNeighborCells\"];\n    var _bitshift64Ashr = Module[\"_bitshift64Ashr\"] = asm[\"_bitshift64Ashr\"];\n    var _bitshift64Lshr = Module[\"_bitshift64Lshr\"] = asm[\"_bitshift64Lshr\"];\n    var _bitshift64Shl = Module[\"_bitshift64Shl\"] = asm[\"_bitshift64Shl\"];\n    var _calloc = Module[\"_calloc\"] = asm[\"_calloc\"];\n    var _cellAreaKm2 = Module[\"_cellAreaKm2\"] = asm[\"_cellAreaKm2\"];\n    var _cellAreaM2 = Module[\"_cellAreaM2\"] = asm[\"_cellAreaM2\"];\n    var _cellAreaRads2 = Module[\"_cellAreaRads2\"] = asm[\"_cellAreaRads2\"];\n    var _cellToBoundary = Module[\"_cellToBoundary\"] = asm[\"_cellToBoundary\"];\n    var _cellToCenterChild = Module[\"_cellToCenterChild\"] = asm[\"_cellToCenterChild\"];\n    var _cellToChildPos = Module[\"_cellToChildPos\"] = asm[\"_cellToChildPos\"];\n    var _cellToChildren = Module[\"_cellToChildren\"] = asm[\"_cellToChildren\"];\n    var _cellToChildrenSize = Module[\"_cellToChildrenSize\"] = asm[\"_cellToChildrenSize\"];\n    var _cellToLatLng = Module[\"_cellToLatLng\"] = asm[\"_cellToLatLng\"];\n    var _cellToLocalIj = Module[\"_cellToLocalIj\"] = asm[\"_cellToLocalIj\"];\n    var _cellToParent = Module[\"_cellToParent\"] = asm[\"_cellToParent\"];\n    var _cellToVertex = Module[\"_cellToVertex\"] = asm[\"_cellToVertex\"];\n    var _cellToVertexes = Module[\"_cellToVertexes\"] = asm[\"_cellToVertexes\"];\n    var _cellsToDirectedEdge = Module[\"_cellsToDirectedEdge\"] = asm[\"_cellsToDirectedEdge\"];\n    var _cellsToLinkedMultiPolygon = Module[\"_cellsToLinkedMultiPolygon\"] = asm[\"_cellsToLinkedMultiPolygon\"];\n    var _childPosToCell = Module[\"_childPosToCell\"] = asm[\"_childPosToCell\"];\n    var _compactCells = Module[\"_compactCells\"] = asm[\"_compactCells\"];\n    var _destroyLinkedMultiPolygon = Module[\"_destroyLinkedMultiPolygon\"] = asm[\"_destroyLinkedMultiPolygon\"];\n    var _directedEdgeToBoundary = Module[\"_directedEdgeToBoundary\"] = asm[\"_directedEdgeToBoundary\"];\n    var _directedEdgeToCells = Module[\"_directedEdgeToCells\"] = asm[\"_directedEdgeToCells\"];\n    var _edgeLengthKm = Module[\"_edgeLengthKm\"] = asm[\"_edgeLengthKm\"];\n    var _edgeLengthM = Module[\"_edgeLengthM\"] = asm[\"_edgeLengthM\"];\n    var _edgeLengthRads = Module[\"_edgeLengthRads\"] = asm[\"_edgeLengthRads\"];\n    var _emscripten_replace_memory = Module[\"_emscripten_replace_memory\"] = asm[\"_emscripten_replace_memory\"];\n    var _free = Module[\"_free\"] = asm[\"_free\"];\n    var _getBaseCellNumber = Module[\"_getBaseCellNumber\"] = asm[\"_getBaseCellNumber\"];\n    var _getDirectedEdgeDestination = Module[\"_getDirectedEdgeDestination\"] = asm[\"_getDirectedEdgeDestination\"];\n    var _getDirectedEdgeOrigin = Module[\"_getDirectedEdgeOrigin\"] = asm[\"_getDirectedEdgeOrigin\"];\n    var _getHexagonAreaAvgKm2 = Module[\"_getHexagonAreaAvgKm2\"] = asm[\"_getHexagonAreaAvgKm2\"];\n    var _getHexagonAreaAvgM2 = Module[\"_getHexagonAreaAvgM2\"] = asm[\"_getHexagonAreaAvgM2\"];\n    var _getHexagonEdgeLengthAvgKm = Module[\"_getHexagonEdgeLengthAvgKm\"] = asm[\"_getHexagonEdgeLengthAvgKm\"];\n    var _getHexagonEdgeLengthAvgM = Module[\"_getHexagonEdgeLengthAvgM\"] = asm[\"_getHexagonEdgeLengthAvgM\"];\n    var _getIcosahedronFaces = Module[\"_getIcosahedronFaces\"] = asm[\"_getIcosahedronFaces\"];\n    var _getNumCells = Module[\"_getNumCells\"] = asm[\"_getNumCells\"];\n    var _getPentagons = Module[\"_getPentagons\"] = asm[\"_getPentagons\"];\n    var _getRes0Cells = Module[\"_getRes0Cells\"] = asm[\"_getRes0Cells\"];\n    var _getResolution = Module[\"_getResolution\"] = asm[\"_getResolution\"];\n    var _greatCircleDistanceKm = Module[\"_greatCircleDistanceKm\"] = asm[\"_greatCircleDistanceKm\"];\n    var _greatCircleDistanceM = Module[\"_greatCircleDistanceM\"] = asm[\"_greatCircleDistanceM\"];\n    var _greatCircleDistanceRads = Module[\"_greatCircleDistanceRads\"] = asm[\"_greatCircleDistanceRads\"];\n    var _gridDisk = Module[\"_gridDisk\"] = asm[\"_gridDisk\"];\n    var _gridDiskDistances = Module[\"_gridDiskDistances\"] = asm[\"_gridDiskDistances\"];\n    var _gridDistance = Module[\"_gridDistance\"] = asm[\"_gridDistance\"];\n    var _gridPathCells = Module[\"_gridPathCells\"] = asm[\"_gridPathCells\"];\n    var _gridPathCellsSize = Module[\"_gridPathCellsSize\"] = asm[\"_gridPathCellsSize\"];\n    var _gridRingUnsafe = Module[\"_gridRingUnsafe\"] = asm[\"_gridRingUnsafe\"];\n    var _i64Add = Module[\"_i64Add\"] = asm[\"_i64Add\"];\n    var _i64Subtract = Module[\"_i64Subtract\"] = asm[\"_i64Subtract\"];\n    var _isPentagon = Module[\"_isPentagon\"] = asm[\"_isPentagon\"];\n    var _isResClassIII = Module[\"_isResClassIII\"] = asm[\"_isResClassIII\"];\n    var _isValidCell = Module[\"_isValidCell\"] = asm[\"_isValidCell\"];\n    var _isValidDirectedEdge = Module[\"_isValidDirectedEdge\"] = asm[\"_isValidDirectedEdge\"];\n    var _isValidVertex = Module[\"_isValidVertex\"] = asm[\"_isValidVertex\"];\n    var _latLngToCell = Module[\"_latLngToCell\"] = asm[\"_latLngToCell\"];\n    var _llvm_maxnum_f64 = Module[\"_llvm_maxnum_f64\"] = asm[\"_llvm_maxnum_f64\"];\n    var _llvm_minnum_f64 = Module[\"_llvm_minnum_f64\"] = asm[\"_llvm_minnum_f64\"];\n    var _llvm_round_f64 = Module[\"_llvm_round_f64\"] = asm[\"_llvm_round_f64\"];\n    var _localIjToCell = Module[\"_localIjToCell\"] = asm[\"_localIjToCell\"];\n    var _malloc = Module[\"_malloc\"] = asm[\"_malloc\"];\n    var _maxFaceCount = Module[\"_maxFaceCount\"] = asm[\"_maxFaceCount\"];\n    var _maxGridDiskSize = Module[\"_maxGridDiskSize\"] = asm[\"_maxGridDiskSize\"];\n    var _maxPolygonToCellsSize = Module[\"_maxPolygonToCellsSize\"] = asm[\"_maxPolygonToCellsSize\"];\n    var _memcpy = Module[\"_memcpy\"] = asm[\"_memcpy\"];\n    var _memset = Module[\"_memset\"] = asm[\"_memset\"];\n    var _originToDirectedEdges = Module[\"_originToDirectedEdges\"] = asm[\"_originToDirectedEdges\"];\n    var _pentagonCount = Module[\"_pentagonCount\"] = asm[\"_pentagonCount\"];\n    var _polygonToCells = Module[\"_polygonToCells\"] = asm[\"_polygonToCells\"];\n    var _readInt64AsDoubleFromPointer = Module[\"_readInt64AsDoubleFromPointer\"] = asm[\"_readInt64AsDoubleFromPointer\"];\n    var _res0CellCount = Module[\"_res0CellCount\"] = asm[\"_res0CellCount\"];\n    var _round = Module[\"_round\"] = asm[\"_round\"];\n    var _sbrk = Module[\"_sbrk\"] = asm[\"_sbrk\"];\n    var _sizeOfCellBoundary = Module[\"_sizeOfCellBoundary\"] = asm[\"_sizeOfCellBoundary\"];\n    var _sizeOfCoordIJ = Module[\"_sizeOfCoordIJ\"] = asm[\"_sizeOfCoordIJ\"];\n    var _sizeOfGeoLoop = Module[\"_sizeOfGeoLoop\"] = asm[\"_sizeOfGeoLoop\"];\n    var _sizeOfGeoPolygon = Module[\"_sizeOfGeoPolygon\"] = asm[\"_sizeOfGeoPolygon\"];\n    var _sizeOfH3Index = Module[\"_sizeOfH3Index\"] = asm[\"_sizeOfH3Index\"];\n    var _sizeOfLatLng = Module[\"_sizeOfLatLng\"] = asm[\"_sizeOfLatLng\"];\n    var _sizeOfLinkedGeoPolygon = Module[\"_sizeOfLinkedGeoPolygon\"] = asm[\"_sizeOfLinkedGeoPolygon\"];\n    var _uncompactCells = Module[\"_uncompactCells\"] = asm[\"_uncompactCells\"];\n    var _uncompactCellsSize = Module[\"_uncompactCellsSize\"] = asm[\"_uncompactCellsSize\"];\n    var _vertexToLatLng = Module[\"_vertexToLatLng\"] = asm[\"_vertexToLatLng\"];\n    var establishStackSpace = Module[\"establishStackSpace\"] = asm[\"establishStackSpace\"];\n    var stackAlloc = Module[\"stackAlloc\"] = asm[\"stackAlloc\"];\n    var stackRestore = Module[\"stackRestore\"] = asm[\"stackRestore\"];\n    var stackSave = Module[\"stackSave\"] = asm[\"stackSave\"];\n    Module[\"asm\"] = asm;\n    Module[\"cwrap\"] = cwrap;\n    Module[\"setValue\"] = setValue;\n    Module[\"getValue\"] = getValue;\n    if (memoryInitializer) {\n        if (!isDataURI(memoryInitializer)) {\n            memoryInitializer = locateFile(memoryInitializer);\n        }\n        if (ENVIRONMENT_IS_NODE || ENVIRONMENT_IS_SHELL) {\n            var data = readBinary(memoryInitializer);\n            HEAPU8.set(data, GLOBAL_BASE);\n        } else {\n            addRunDependency(\"memory initializer\");\n            var applyMemoryInitializer = function(data) {\n                if (data.byteLength) {\n                    data = new Uint8Array(data);\n                }\n                HEAPU8.set(data, GLOBAL_BASE);\n                if (Module[\"memoryInitializerRequest\"]) {\n                    delete Module[\"memoryInitializerRequest\"].response;\n                }\n                removeRunDependency(\"memory initializer\");\n            };\n            var doBrowserLoad = function() {\n                readAsync(memoryInitializer, applyMemoryInitializer, function() {\n                    throw \"could not load memory initializer \" + memoryInitializer;\n                });\n            };\n            var memoryInitializerBytes = tryParseAsDataURI(memoryInitializer);\n            if (memoryInitializerBytes) {\n                applyMemoryInitializer(memoryInitializerBytes.buffer);\n            } else if (Module[\"memoryInitializerRequest\"]) {\n                var useRequest = function() {\n                    var request = Module[\"memoryInitializerRequest\"];\n                    var response = request.response;\n                    if (request.status !== 200 && request.status !== 0) {\n                        var data = tryParseAsDataURI(Module[\"memoryInitializerRequestURL\"]);\n                        if (data) {\n                            response = data.buffer;\n                        } else {\n                            console.warn(\"a problem seems to have happened with Module.memoryInitializerRequest, status: \" + request.status + \", retrying \" + memoryInitializer);\n                            doBrowserLoad();\n                            return;\n                        }\n                    }\n                    applyMemoryInitializer(response);\n                };\n                if (Module[\"memoryInitializerRequest\"].response) {\n                    setTimeout(useRequest, 0);\n                } else {\n                    Module[\"memoryInitializerRequest\"].addEventListener(\"load\", useRequest);\n                }\n            } else {\n                doBrowserLoad();\n            }\n        }\n    }\n    var calledRun;\n    dependenciesFulfilled = function runCaller() {\n        if (!calledRun) {\n            run();\n        }\n        if (!calledRun) {\n            dependenciesFulfilled = runCaller;\n        }\n    };\n    function run(args) {\n        args = args || arguments_;\n        if (runDependencies > 0) {\n            return;\n        }\n        preRun();\n        if (runDependencies > 0) {\n            return;\n        }\n        function doRun() {\n            if (calledRun) {\n                return;\n            }\n            calledRun = true;\n            if (ABORT) {\n                return;\n            }\n            initRuntime();\n            preMain();\n            if (Module[\"onRuntimeInitialized\"]) {\n                Module[\"onRuntimeInitialized\"]();\n            }\n            postRun();\n        }\n        if (Module[\"setStatus\"]) {\n            Module[\"setStatus\"](\"Running...\");\n            setTimeout(function() {\n                setTimeout(function() {\n                    Module[\"setStatus\"](\"\");\n                }, 1);\n                doRun();\n            }, 1);\n        } else {\n            doRun();\n        }\n    }\n    Module[\"run\"] = run;\n    function abort(what) {\n        if (Module[\"onAbort\"]) {\n            Module[\"onAbort\"](what);\n        }\n        what += \"\";\n        out(what);\n        err(what);\n        ABORT = true;\n        throw \"abort(\" + what + \"). Build with -s ASSERTIONS=1 for more info.\";\n    }\n    Module[\"abort\"] = abort;\n    if (Module[\"preInit\"]) {\n        if (typeof Module[\"preInit\"] == \"function\") {\n            Module[\"preInit\"] = [\n                Module[\"preInit\"]\n            ];\n        }\n        while(Module[\"preInit\"].length > 0){\n            Module[\"preInit\"].pop()();\n        }\n    }\n    run();\n    return libh3;\n}(typeof libh3 === \"object\" ? libh3 : {});\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ // Define the C bindings for the h3 library\n// Add some aliases to make the function definitions more intelligible\nvar NUMBER = \"number\";\nvar H3_ERROR = NUMBER;\nvar BOOLEAN = NUMBER;\nvar H3_LOWER = NUMBER;\nvar H3_UPPER = NUMBER;\nvar RESOLUTION = NUMBER;\nvar POINTER = NUMBER; // Define the bindings to functions in the C lib. Functions are defined as\n// [name, return type, [arg types]]. You must run `npm run build-emscripten`\n// before new functions added here will be available.\n/** @type {([string, string] | [string, string | null, string[]])[]} */ var BINDINGS = [\n    [\n        \"sizeOfH3Index\",\n        NUMBER\n    ],\n    [\n        \"sizeOfLatLng\",\n        NUMBER\n    ],\n    [\n        \"sizeOfCellBoundary\",\n        NUMBER\n    ],\n    [\n        \"sizeOfGeoLoop\",\n        NUMBER\n    ],\n    [\n        \"sizeOfGeoPolygon\",\n        NUMBER\n    ],\n    [\n        \"sizeOfLinkedGeoPolygon\",\n        NUMBER\n    ],\n    [\n        \"sizeOfCoordIJ\",\n        NUMBER\n    ],\n    [\n        \"readInt64AsDoubleFromPointer\",\n        NUMBER\n    ],\n    [\n        \"isValidCell\",\n        BOOLEAN,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"latLngToCell\",\n        H3_ERROR,\n        [\n            NUMBER,\n            NUMBER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToLatLng\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToBoundary\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"maxGridDiskSize\",\n        H3_ERROR,\n        [\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridDisk\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridDiskDistances\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            NUMBER,\n            POINTER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridRingUnsafe\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"maxPolygonToCellsSize\",\n        H3_ERROR,\n        [\n            POINTER,\n            RESOLUTION,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"polygonToCells\",\n        H3_ERROR,\n        [\n            POINTER,\n            RESOLUTION,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellsToLinkedMultiPolygon\",\n        H3_ERROR,\n        [\n            POINTER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"destroyLinkedMultiPolygon\",\n        null,\n        [\n            POINTER\n        ]\n    ],\n    [\n        \"compactCells\",\n        H3_ERROR,\n        [\n            POINTER,\n            POINTER,\n            NUMBER,\n            NUMBER\n        ]\n    ],\n    [\n        \"uncompactCells\",\n        H3_ERROR,\n        [\n            POINTER,\n            NUMBER,\n            NUMBER,\n            POINTER,\n            NUMBER,\n            RESOLUTION\n        ]\n    ],\n    [\n        \"uncompactCellsSize\",\n        H3_ERROR,\n        [\n            POINTER,\n            NUMBER,\n            NUMBER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"isPentagon\",\n        BOOLEAN,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"isResClassIII\",\n        BOOLEAN,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"getBaseCellNumber\",\n        NUMBER,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"getResolution\",\n        NUMBER,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"maxFaceCount\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"getIcosahedronFaces\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToParent\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToChildren\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToCenterChild\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToChildrenSize\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToChildPos\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"childPosToCell\",\n        H3_ERROR,\n        [\n            NUMBER,\n            NUMBER,\n            H3_LOWER,\n            H3_UPPER,\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"areNeighborCells\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellsToDirectedEdge\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"getDirectedEdgeOrigin\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"getDirectedEdgeDestination\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"isValidDirectedEdge\",\n        BOOLEAN,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ],\n    [\n        \"directedEdgeToCells\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"originToDirectedEdges\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"directedEdgeToBoundary\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridDistance\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridPathCells\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"gridPathCellsSize\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToLocalIj\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            H3_LOWER,\n            H3_UPPER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"localIjToCell\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"getHexagonAreaAvgM2\",\n        H3_ERROR,\n        [\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"getHexagonAreaAvgKm2\",\n        H3_ERROR,\n        [\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"getHexagonEdgeLengthAvgM\",\n        H3_ERROR,\n        [\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"getHexagonEdgeLengthAvgKm\",\n        H3_ERROR,\n        [\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"greatCircleDistanceM\",\n        NUMBER,\n        [\n            POINTER,\n            POINTER\n        ]\n    ],\n    [\n        \"greatCircleDistanceKm\",\n        NUMBER,\n        [\n            POINTER,\n            POINTER\n        ]\n    ],\n    [\n        \"greatCircleDistanceRads\",\n        NUMBER,\n        [\n            POINTER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellAreaM2\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellAreaKm2\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellAreaRads2\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"edgeLengthM\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"edgeLengthKm\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"edgeLengthRads\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"getNumCells\",\n        H3_ERROR,\n        [\n            RESOLUTION,\n            POINTER\n        ]\n    ],\n    [\n        \"getRes0Cells\",\n        H3_ERROR,\n        [\n            POINTER\n        ]\n    ],\n    [\n        \"res0CellCount\",\n        NUMBER\n    ],\n    [\n        \"getPentagons\",\n        H3_ERROR,\n        [\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"pentagonCount\",\n        NUMBER\n    ],\n    [\n        \"cellToVertex\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            NUMBER,\n            POINTER\n        ]\n    ],\n    [\n        \"cellToVertexes\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"vertexToLatLng\",\n        H3_ERROR,\n        [\n            H3_LOWER,\n            H3_UPPER,\n            POINTER\n        ]\n    ],\n    [\n        \"isValidVertex\",\n        BOOLEAN,\n        [\n            H3_LOWER,\n            H3_UPPER\n        ]\n    ]\n];\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ // Error codes from the code library, aliased here for legibility\nvar E_SUCCESS = 0;\nvar E_FAILED = 1;\nvar E_DOMAIN = 2;\nvar E_LATLNG_DOMAIN = 3;\nvar E_RES_DOMAIN = 4;\nvar E_CELL_INVALID = 5;\nvar E_DIR_EDGE_INVALID = 6;\nvar E_UNDIR_EDGE_INVALID = 7;\nvar E_VERTEX_INVALID = 8;\nvar E_PENTAGON = 9;\nvar E_DUPLICATE_INPUT = 10;\nvar E_NOT_NEIGHBORS = 11;\nvar E_RES_MISMATCH = 12;\nvar E_MEMORY_ALLOC = 13;\nvar E_MEMORY_BOUNDS = 14;\nvar E_OPTION_INVALID = 15;\n/**\n * Error messages corresponding to the core library error codes. See\n * https://h3geo.org/docs/library/errors#table-of-error-codes\n * @private\n */ var H3_ERROR_MSGS = {};\nH3_ERROR_MSGS[E_SUCCESS] = \"Success\";\nH3_ERROR_MSGS[E_FAILED] = \"The operation failed but a more specific error is not available\";\nH3_ERROR_MSGS[E_DOMAIN] = \"Argument was outside of acceptable range\";\nH3_ERROR_MSGS[E_LATLNG_DOMAIN] = \"Latitude or longitude arguments were outside of acceptable range\";\nH3_ERROR_MSGS[E_RES_DOMAIN] = \"Resolution argument was outside of acceptable range\";\nH3_ERROR_MSGS[E_CELL_INVALID] = \"Cell argument was not valid\";\nH3_ERROR_MSGS[E_DIR_EDGE_INVALID] = \"Directed edge argument was not valid\";\nH3_ERROR_MSGS[E_UNDIR_EDGE_INVALID] = \"Undirected edge argument was not valid\";\nH3_ERROR_MSGS[E_VERTEX_INVALID] = \"Vertex argument was not valid\";\nH3_ERROR_MSGS[E_PENTAGON] = \"Pentagon distortion was encountered\";\nH3_ERROR_MSGS[E_DUPLICATE_INPUT] = \"Duplicate input\";\nH3_ERROR_MSGS[E_NOT_NEIGHBORS] = \"Cell arguments were not neighbors\";\nH3_ERROR_MSGS[E_RES_MISMATCH] = \"Cell arguments had incompatible resolutions\";\nH3_ERROR_MSGS[E_MEMORY_ALLOC] = \"Memory allocation failed\";\nH3_ERROR_MSGS[E_MEMORY_BOUNDS] = \"Bounds of provided memory were insufficient\";\nH3_ERROR_MSGS[E_OPTION_INVALID] = \"Mode or flags argument was not valid\"; // Error codes for JS errors thrown in the bindings\nvar E_UNKNOWN_UNIT = 1000;\nvar E_ARRAY_LENGTH = 1001;\nvar E_NULL_INDEX = 1002;\n/**\n * Error messages for errors thrown in the binding code. These don't strictly\n * need error codes, but it's simpler to treat all of the errors consistently\n * @private\n */ var JS_ERROR_MESSAGES = {};\nJS_ERROR_MESSAGES[E_UNKNOWN_UNIT] = \"Unknown unit\";\nJS_ERROR_MESSAGES[E_ARRAY_LENGTH] = \"Array length out of bounds\";\nJS_ERROR_MESSAGES[E_NULL_INDEX] = \"Got unexpected null value for H3 index\";\nvar UNKNOWN_ERROR_MSG = \"Unknown error\";\n/**\n * Create an error with an attached code\n * @private\n * @param {Record<number, string>} messages  Map of code-to-messages to use\n * @param {number} errCode                   Numeric error code\n * @param {{value: unknown} | {}} [meta]     Metadata with value to associate with the error\n */ function createError(messages, errCode, meta) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    var hasValue = meta && \"value\" in meta; // Throw a custom error type with the code attached\n    var err = new Error((messages[errCode] || UNKNOWN_ERROR_MSG) + \" (code: \" + errCode + (hasValue ? \", value: \" + meta.value : \"\") + \")\"); // @ts-expect-error - TS doesn't like extending Error\n    err.code = errCode;\n    return err;\n}\n/**\n * Custom error for H3Error codes\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */ function H3LibraryError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    var meta = arguments.length === 2 ? {\n        value: value\n    } : {};\n    return createError(H3_ERROR_MSGS, errCode, meta);\n}\n/**\n * Custom errors thrown from the JS bindings.\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @param {unknown} [value]    Value to associate with the error, if any\n * @returns {Error}\n */ function JSBindingError(errCode, value) {\n    // The error value may be \"undefined\", so check if the argument was provided\n    var meta = arguments.length === 2 ? {\n        value: value\n    } : {};\n    return createError(JS_ERROR_MESSAGES, errCode, meta);\n}\n/**\n * Throw a JavaScript error if the C library return code is an error\n * @private\n * @param {number} errCode     Error code from the H3 library\n * @throws {Error} Error if err is not E_SUCCESS (0)\n */ function throwIfError(errCode) {\n    if (errCode !== 0) {\n        throw H3LibraryError(errCode);\n    }\n}\n/*\n * Copyright 2018-2019, 2022 Uber Technologies, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *         http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */ /**\n * Map of C-defined functions\n * @type {any}\n * @private\n */ var H3 = {}; // Create the bound functions themselves\nBINDINGS.forEach(function bind(def) {\n    H3[def[0]] = libh3.cwrap.apply(libh3, def);\n}); // Alias the hexidecimal base for legibility\nvar BASE_16 = 16; // Alias unused bits for legibility\nvar UNUSED_UPPER_32_BITS = 0; // ----------------------------------------------------------------------------\n// Byte size imports\nvar SZ_INT = 4;\nvar SZ_PTR = 4;\nvar SZ_DBL = 8;\nvar SZ_INT64 = 8;\nvar SZ_H3INDEX = H3.sizeOfH3Index();\nvar SZ_LATLNG = H3.sizeOfLatLng();\nvar SZ_CELLBOUNDARY = H3.sizeOfCellBoundary();\nvar SZ_GEOPOLYGON = H3.sizeOfGeoPolygon();\nvar SZ_GEOLOOP = H3.sizeOfGeoLoop();\nvar SZ_LINKED_GEOPOLYGON = H3.sizeOfLinkedGeoPolygon();\nvar SZ_COORDIJ = H3.sizeOfCoordIJ(); // ----------------------------------------------------------------------------\n// Custom types\n/**\n * 64-bit hexidecimal string representation of an H3 index\n * @static\n * @typedef {string} H3Index\n */ /**\n * 64-bit hexidecimal string representation of an H3 index,\n * or two 32-bit integers in little endian order in an array.\n * @static\n * @typedef {string | number[]} H3IndexInput\n */ /**\n * Coordinates as an `{i, j}` pair\n * @static\n * @typedef CoordIJ\n * @property {number} i\n * @property {number} j\n */ /**\n * Custom JS Error instance with an attached error code. Error codes come from the\n * core H3 library and can be found [in the H3 docs](https://h3geo.org/docs/library/errors#table-of-error-codes).\n * @static\n * @typedef H3Error\n * @property {string} message\n * @property {number} code\n */ /**\n * Pair of lat,lng coordinates (or lng,lat if GeoJSON output is specified)\n * @static\n * @typedef {number[]} CoordPair\n */ /**\n * Pair of lower,upper 32-bit ints representing a 64-bit value\n * @static\n * @typedef {number[]} SplitLong\n */ // ----------------------------------------------------------------------------\n// Unit constants\n/**\n * Length/Area units\n * @static\n * @property {string} m\n * @property {string} m2\n * @property {string} km\n * @property {string} km2\n * @property {string} rads\n * @property {string} rads2\n */ var UNITS = {\n    m: \"m\",\n    m2: \"m2\",\n    km: \"km\",\n    km2: \"km2\",\n    rads: \"rads\",\n    rads2: \"rads2\"\n}; // ----------------------------------------------------------------------------\n// Utilities and helpers\n/**\n * Validate a resolution, throwing an error if invalid\n * @private\n * @param  {unknown} res Value to validate\n * @return {number}      Valid res\n * @throws {H3Error}     If invalid\n */ function validateRes(res) {\n    if (typeof res !== \"number\" || res < 0 || res > 15 || Math.floor(res) !== res) {\n        throw H3LibraryError(E_RES_DOMAIN, res);\n    }\n    return res;\n}\n/**\n * Assert H3 index output, throwing an error if null\n * @private\n * @param {H3Index | null} h3Index    Index to validate\n * @return {H3Index}\n * @throws {H3Error}     If invalid\n */ function validateH3Index(h3Index) {\n    if (!h3Index) {\n        throw JSBindingError(E_NULL_INDEX);\n    }\n    return h3Index;\n}\nvar MAX_JS_ARRAY_LENGTH = Math.pow(2, 32) - 1;\n/**\n * Validate an array length. JS will throw its own error if you try\n * to create an array larger than 2^32 - 1, but validating beforehand\n * allows us to exit early before we try to process large amounts\n * of data that won't even fit in an output array\n * @private\n * @param  {number} length  Length to validate\n * @return {number}         Valid array length\n * @throws {H3Error}        If invalid\n */ function validateArrayLength(length) {\n    if (length > MAX_JS_ARRAY_LENGTH) {\n        throw JSBindingError(E_ARRAY_LENGTH, length);\n    }\n    return length;\n}\nvar INVALID_HEXIDECIMAL_CHAR = /[^0-9a-fA-F]/;\n/**\n * Convert an H3 index (64-bit hexidecimal string) into a \"split long\" - a pair of 32-bit ints\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {SplitLong}             A two-element array with 32 lower bits and 32 upper bits\n */ function h3IndexToSplitLong(h3Index) {\n    if (Array.isArray(h3Index) && h3Index.length === 2 && Number.isInteger(h3Index[0]) && Number.isInteger(h3Index[1])) {\n        return h3Index;\n    }\n    if (typeof h3Index !== \"string\" || INVALID_HEXIDECIMAL_CHAR.test(h3Index)) {\n        return [\n            0,\n            0\n        ];\n    }\n    var upper = parseInt(h3Index.substring(0, h3Index.length - 8), BASE_16);\n    var lower = parseInt(h3Index.substring(h3Index.length - 8), BASE_16);\n    return [\n        lower,\n        upper\n    ];\n}\n/**\n * Convert a 32-bit int to a hexdecimal string\n * @private\n * @param  {number} num  Integer to convert\n * @return {H3Index}     Hexidecimal string\n */ function hexFrom32Bit(num) {\n    if (num >= 0) {\n        return num.toString(BASE_16);\n    } // Handle negative numbers\n    num = num & 0x7fffffff;\n    var tempStr = zeroPad(8, num.toString(BASE_16));\n    var topNum = (parseInt(tempStr[0], BASE_16) + 8).toString(BASE_16);\n    tempStr = topNum + tempStr.substring(1);\n    return tempStr;\n}\n/**\n * Get a H3 index string from a split long (pair of 32-bit ints)\n * @param  {number} lower Lower 32 bits\n * @param  {number} upper Upper 32 bits\n * @return {H3Index}       H3 index\n */ function splitLongToH3Index(lower, upper) {\n    return hexFrom32Bit(upper) + zeroPad(8, hexFrom32Bit(lower));\n}\n/**\n * Zero-pad a string to a given length\n * @private\n * @param  {number} fullLen Target length\n * @param  {string} numStr  String to zero-pad\n * @return {string}         Zero-padded string\n */ function zeroPad(fullLen, numStr) {\n    var numZeroes = fullLen - numStr.length;\n    var outStr = \"\";\n    for(var i = 0; i < numZeroes; i++){\n        outStr += \"0\";\n    }\n    outStr = outStr + numStr;\n    return outStr;\n} // One more than the max size of an unsigned 32-bit int.\n// Dividing by this number is equivalent to num >>> 32\nvar UPPER_BIT_DIVISOR = Math.pow(2, 32);\n/**\n * Convert a JS double-precision floating point number to a split long\n * @private\n * @param  {number} num  Number to convert\n * @return {SplitLong}     A two-element array with 32 lower bits and 32 upper bits\n */ function numberToSplitLong(num) {\n    if (typeof num !== \"number\") {\n        return [\n            0,\n            0\n        ];\n    }\n    return [\n        num | 0,\n        num / UPPER_BIT_DIVISOR | 0\n    ];\n}\n/**\n * Populate a C-appropriate GeoLoop struct from a polygon array\n * @private\n * @param  {number[][]} polygonArray  Polygon, as an array of coordinate pairs\n * @param  {number}  geoLoop          C pointer to a GeoLoop struct\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoLoop struct\n */ function polygonArrayToGeoLoop(polygonArray, geoLoop, isGeoJson) {\n    var numVerts = polygonArray.length;\n    var geoCoordArray = libh3._calloc(numVerts, SZ_LATLNG); // Support [lng, lat] pairs if GeoJSON is specified\n    var latIndex = isGeoJson ? 1 : 0;\n    var lngIndex = isGeoJson ? 0 : 1;\n    for(var i = 0; i < numVerts * 2; i += 2){\n        libh3.HEAPF64.set([\n            polygonArray[i / 2][latIndex],\n            polygonArray[i / 2][lngIndex]\n        ].map(degsToRads), geoCoordArray / SZ_DBL + i);\n    }\n    libh3.HEAPU32.set([\n        numVerts,\n        geoCoordArray\n    ], geoLoop / SZ_INT);\n    return geoLoop;\n}\n/**\n * Create a C-appropriate GeoPolygon struct from an array of polygons\n * @private\n * @param  {number[][][]} coordinates Array of polygons, each an array of coordinate pairs\n * @param  {boolean} isGeoJson        Whether coordinates are in [lng, lat] order per GeoJSON spec\n * @return {number}                   C pointer to populated GeoPolygon struct\n */ function coordinatesToGeoPolygon(coordinates, isGeoJson) {\n    // Any loops beyond the first loop are holes\n    var numHoles = coordinates.length - 1;\n    var geoPolygon = libh3._calloc(SZ_GEOPOLYGON); // Byte positions within the struct\n    var geoLoopOffset = 0;\n    var numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    var holesOffset = numHolesOffset + SZ_INT; // geoLoop is first part of struct\n    polygonArrayToGeoLoop(coordinates[0], geoPolygon + geoLoopOffset, isGeoJson);\n    var holes;\n    if (numHoles > 0) {\n        holes = libh3._calloc(numHoles, SZ_GEOLOOP);\n        for(var i = 0; i < numHoles; i++){\n            polygonArrayToGeoLoop(coordinates[i + 1], holes + SZ_GEOLOOP * i, isGeoJson);\n        }\n    }\n    libh3.setValue(geoPolygon + numHolesOffset, numHoles, \"i32\");\n    libh3.setValue(geoPolygon + holesOffset, holes, \"i32\");\n    return geoPolygon;\n}\n/**\n * Free memory allocated for a GeoPolygon struct. It is an error to access the struct\n * after passing it to this method.\n * @private\n * @param {number} geoPolygon     C pointer to GeoPolygon struct\n * @return {void}\n */ function destroyGeoPolygon(geoPolygon) {\n    // Byte positions within the struct\n    var geoLoopOffset = 0;\n    var numHolesOffset = geoLoopOffset + SZ_GEOLOOP;\n    var holesOffset = numHolesOffset + SZ_INT; // Offset of the geoLoop vertex array pointer within the GeoLoop struct\n    var geoLoopArrayOffset = SZ_INT; // Free the outer vertex array\n    libh3._free(libh3.getValue(geoPolygon + geoLoopOffset + geoLoopArrayOffset, \"i8*\")); // Free the vertex array for the holes, if any\n    var numHoles = libh3.getValue(geoPolygon + numHolesOffset, \"i32\");\n    if (numHoles > 0) {\n        var holes = libh3.getValue(geoPolygon + holesOffset, \"i32\");\n        for(var i = 0; i < numHoles; i++){\n            libh3._free(libh3.getValue(holes + SZ_GEOLOOP * i + geoLoopArrayOffset, \"i8*\"));\n        }\n        libh3._free(holes);\n    }\n    libh3._free(geoPolygon);\n}\n/**\n * Read an H3 index from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes, in case we're\n *                            reading an array\n * @return {H3Index | null}   H3 index, or null if index was invalid\n */ function readH3IndexFromPointer(cAddress, offset) {\n    if (offset === void 0) offset = 0;\n    var lower = libh3.getValue(cAddress + SZ_H3INDEX * offset, \"i32\");\n    var upper = libh3.getValue(cAddress + SZ_H3INDEX * offset + SZ_INT, \"i32\"); // The lower bits are allowed to be 0s, but if the upper bits are 0\n    // this represents an invalid H3 index\n    return upper ? splitLongToH3Index(lower, upper) : null;\n}\n/**\n * Read a boolean (32 bit) from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of booleans, in case we're\n *                            reading an array\n * @return {Boolean} Boolean value\n */ function readBooleanFromPointer(cAddress, offset) {\n    if (offset === void 0) offset = 0;\n    var val = libh3.getValue(cAddress + SZ_INT * offset, \"i32\");\n    return Boolean(val);\n}\n/**\n * Read a double from a pointer to C memory.\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of doubles, in case we're\n *                            reading an array\n * @return {number} Double value\n */ function readDoubleFromPointer(cAddress, offset) {\n    if (offset === void 0) offset = 0;\n    return libh3.getValue(cAddress + SZ_DBL * offset, \"double\");\n}\n/**\n * Read a 64-bit int from a pointer to C memory into a JS 64-bit float.\n * Note that this may lose precision if larger than MAX_SAFE_INTEGER\n * @private\n * @param  {number} cAddress  Pointer to allocated C memory\n * @return {number} Double value\n */ function readInt64AsDoubleFromPointer(cAddress) {\n    return H3.readInt64AsDoubleFromPointer(cAddress);\n}\n/**\n * Store an H3 index in C memory. Primarily used as an efficient way to\n * write sets of hexagons.\n * @private\n * @param  {H3IndexInput} h3Index  H3 index to store\n * @param  {number} cAddress  Pointer to allocated C memory\n * @param {number} offset     Offset, in number of H3 indexes from beginning\n *                            of the current array\n */ function storeH3Index(h3Index, cAddress, offset) {\n    // HEAPU32 is a typed array projection on the index space\n    // as unsigned 32-bit integers. This means the index needs\n    // to be divided by SZ_INT (4) to access correctly. Also,\n    // the H3 index is 64 bits, so we skip by twos as we're writing\n    // to 32-bit integers in the proper order.\n    libh3.HEAPU32.set(h3IndexToSplitLong(h3Index), cAddress / SZ_INT + 2 * offset);\n}\n/**\n * Read an array of 64-bit H3 indexes from C and convert to a JS array of\n * H3 index strings\n * @private\n * @param  {number} cAddress    Pointer to C ouput array\n * @param  {number} maxCount    Max number of hexagons in array. Hexagons with\n *                              the value 0 will be skipped, so this isn't\n *                              necessarily the length of the output array.\n * @return {H3Index[]}          Array of H3 indexes\n */ function readArrayOfH3Indexes(cAddress, maxCount) {\n    var out = [];\n    for(var i = 0; i < maxCount; i++){\n        var h3Index = readH3IndexFromPointer(cAddress, i);\n        if (h3Index !== null) {\n            out.push(h3Index);\n        }\n    }\n    return out;\n}\n/**\n * Store an array of H3 index strings as a C array of 64-bit integers.\n * @private\n * @param  {number} cAddress    Pointer to C input array\n * @param  {H3IndexInput[]} hexagons H3 indexes to pass to the C lib\n */ function storeArrayOfH3Indexes(cAddress, hexagons) {\n    // Assuming the cAddress points to an already appropriately\n    // allocated space\n    var count = hexagons.length;\n    for(var i = 0; i < count; i++){\n        storeH3Index(hexagons[i], cAddress, i);\n    }\n}\n/**\n * Populate a C-appropriate LatLng struct from a [lat, lng] array\n * @private\n * @param {number} lat     Coordinate latitude\n * @param {number} lng     Coordinate longitude\n * @return {number}        C pointer to populated LatLng struct\n */ function storeLatLng(lat, lng) {\n    var geoCoord = libh3._calloc(1, SZ_LATLNG);\n    libh3.HEAPF64.set([\n        lat,\n        lng\n    ].map(degsToRads), geoCoord / SZ_DBL);\n    return geoCoord;\n}\n/**\n * Read a single lat or lng value\n * @private\n * @param  {number} cAddress Pointer to C value\n * @return {number}\n */ function readSingleCoord(cAddress) {\n    return radsToDegs(libh3.getValue(cAddress, \"double\"));\n}\n/**\n * Read a LatLng from C and return a [lat, lng] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lat, lng] pair\n */ function readLatLng(cAddress) {\n    return [\n        readSingleCoord(cAddress),\n        readSingleCoord(cAddress + SZ_DBL)\n    ];\n}\n/**\n * Read a LatLng from C and return a GeoJSON-style [lng, lat] pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordPair}          [lng, lat] pair\n */ function readLatLngGeoJson(cAddress) {\n    return [\n        readSingleCoord(cAddress + SZ_DBL),\n        readSingleCoord(cAddress)\n    ];\n}\n/**\n * Read the CellBoundary structure into a list of geo coordinate pairs\n * @private\n * @param {number}  cellBoundary       C pointer to CellBoundary struct\n * @param {boolean} [geoJsonCoords]    Whether to provide GeoJSON coordinate order: [lng, lat]\n * @param {boolean} [closedLoop]       Whether to close the loop\n * @return {CoordPair[]}               Array of geo coordinate pairs\n */ function readCellBoundary(cellBoundary, geoJsonCoords, closedLoop) {\n    var numVerts = libh3.getValue(cellBoundary, \"i32\"); // Note that though numVerts is an int, the coordinate doubles have to be\n    // aligned to 8 bytes, hence the 8-byte offset here\n    var vertsPos = cellBoundary + SZ_DBL;\n    var out = []; // Support [lng, lat] pairs if GeoJSON is specified\n    var readCoord = geoJsonCoords ? readLatLngGeoJson : readLatLng;\n    for(var i = 0; i < numVerts * 2; i += 2){\n        out.push(readCoord(vertsPos + SZ_DBL * i));\n    }\n    if (closedLoop) {\n        // Close loop if GeoJSON is specified\n        out.push(out[0]);\n    }\n    return out;\n}\n/**\n * Read the LinkedGeoPolygon structure into a nested array of MultiPolygon coordinates\n * @private\n * @param {number}  polygon           C pointer to LinkedGeoPolygon struct\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n */ function readMultiPolygon(polygon, formatAsGeoJson) {\n    var output = [];\n    var readCoord = formatAsGeoJson ? readLatLngGeoJson : readLatLng;\n    var loops;\n    var loop;\n    var coords;\n    var coord; // Loop through the linked structure, building the output\n    while(polygon){\n        output.push(loops = []); // Follow ->first pointer\n        loop = libh3.getValue(polygon, \"i8*\");\n        while(loop){\n            loops.push(coords = []); // Follow ->first pointer\n            coord = libh3.getValue(loop, \"i8*\");\n            while(coord){\n                coords.push(readCoord(coord)); // Follow ->next pointer\n                coord = libh3.getValue(coord + SZ_DBL * 2, \"i8*\");\n            }\n            if (formatAsGeoJson) {\n                // Close loop if GeoJSON is requested\n                coords.push(coords[0]);\n            } // Follow ->next pointer\n            loop = libh3.getValue(loop + SZ_PTR * 2, \"i8*\");\n        } // Follow ->next pointer\n        polygon = libh3.getValue(polygon + SZ_PTR * 2, \"i8*\");\n    }\n    return output;\n}\n/**\n * Read a CoordIJ from C and return an {i, j} pair.\n * @private\n * @param  {number} cAddress    Pointer to C struct\n * @return {CoordIJ}            {i, j} pair\n */ function readCoordIJ(cAddress) {\n    return {\n        i: libh3.getValue(cAddress, \"i32\"),\n        j: libh3.getValue(cAddress + SZ_INT, \"i32\")\n    };\n}\n/**\n * Store an {i, j} pair to a C CoordIJ struct.\n * @private\n * @param  {number} cAddress    Pointer to C memory\n * @param {CoordIJ} ij          {i,j} pair to store\n * @return {void}\n */ function storeCoordIJ(cAddress, ref) {\n    var i = ref.i;\n    var j = ref.j;\n    libh3.setValue(cAddress, i, \"i32\");\n    libh3.setValue(cAddress + SZ_INT, j, \"i32\");\n}\n/**\n * Read an array of positive integers array from C. Negative\n * values are considered invalid and ignored in output.\n * @private\n * @param  {number} cAddress    Pointer to C array\n * @param  {number} count       Length of C array\n * @return {number[]}           Javascript integer array\n */ function readArrayOfPositiveIntegers(cAddress, count) {\n    var out = [];\n    for(var i = 0; i < count; i++){\n        var int = libh3.getValue(cAddress + SZ_INT * i, \"i32\");\n        if (int >= 0) {\n            out.push(int);\n        }\n    }\n    return out;\n} // ----------------------------------------------------------------------------\n// Public API functions: Core\n/**\n * Whether a given string represents a valid H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          Whether the index is valid\n */ function isValidCell(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    return Boolean(H3.isValidCell(lower, upper));\n}\n/**\n * Whether the given H3 index is a pentagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isPentagon\n */ function isPentagon(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    return Boolean(H3.isPentagon(lower, upper));\n}\n/**\n * Whether the given H3 index is in a Class III resolution (rotated versus\n * the icosahedron and subject to shape distortion adding extra points on\n * icosahedron edges, making them not true hexagons).\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to check\n * @return {boolean}          isResClassIII\n */ function isResClassIII(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    return Boolean(H3.isResClassIII(lower, upper));\n}\n/**\n * Get the number of the base cell for a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get the base cell for\n * @return {number}           Index of the base cell (0-121)\n */ function getBaseCellNumber(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    return H3.getBaseCellNumber(lower, upper);\n}\n/**\n * Get the indices of all icosahedron faces intersected by a given H3 index\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get faces for\n * @return {number[]}              Indices (0-19) of all intersected faces\n * @throws {H3Error}               If input is invalid\n */ function getIcosahedronFaces(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var countPtr = libh3._malloc(SZ_INT);\n    try {\n        throwIfError(H3.maxFaceCount(lower, upper, countPtr));\n        var count = libh3.getValue(countPtr, \"i32\");\n        var faces = libh3._malloc(SZ_INT * count);\n        try {\n            throwIfError(H3.getIcosahedronFaces(lower, upper, faces));\n            return readArrayOfPositiveIntegers(faces, count);\n        } finally{\n            libh3._free(faces);\n        }\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Returns the resolution of an H3 index\n * @static\n * @param  {H3IndexInput} h3Index H3 index to get resolution\n * @return {number}          The number (0-15) resolution, or -1 if invalid\n */ function getResolution(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    if (!H3.isValidCell(lower, upper)) {\n        // Compatability with stated API\n        return -1;\n    }\n    return H3.getResolution(lower, upper);\n}\n/**\n * Get the hexagon containing a lat,lon point\n * @static\n * @param  {number} lat Latitude of point\n * @param  {number} lng Longtitude of point\n * @param  {number} res Resolution of hexagons to return\n * @return {H3Index}    H3 index\n * @throws {H3Error}    If input is invalid\n */ function latLngToCell(lat, lng, res) {\n    var latLng = libh3._malloc(SZ_LATLNG); // Slightly more efficient way to set the memory\n    libh3.HEAPF64.set([\n        lat,\n        lng\n    ].map(degsToRads), latLng / SZ_DBL); // Read value as a split long\n    var h3Index = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.latLngToCell(latLng, res, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally{\n        libh3._free(h3Index);\n        libh3._free(latLng);\n    }\n}\n/**\n * Get the lat,lon center of a given hexagon\n * @static\n * @param  {H3IndexInput} h3Index  H3 index\n * @return {CoordPair}             Point as a [lat, lng] pair\n * @throws {H3Error}               If input is invalid\n */ function cellToLatLng(h3Index) {\n    var latLng = libh3._malloc(SZ_LATLNG);\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    try {\n        throwIfError(H3.cellToLatLng(lower, upper, latLng));\n        return readLatLng(latLng);\n    } finally{\n        libh3._free(latLng);\n    }\n}\n/**\n * Get the vertices of a given hexagon (or pentagon), as an array of [lat, lng]\n * points. For pentagons and hexagons on the edge of an icosahedron face, this\n * function may return up to 10 vertices.\n * @static\n * @param  {H3IndexInput} h3Index          H3 index\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[]}              Array of [lat, lng] pairs\n * @throws {H3Error}                  If input is invalid\n */ function cellToBoundary(h3Index, formatAsGeoJson) {\n    var cellBoundary = libh3._malloc(SZ_CELLBOUNDARY);\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    try {\n        throwIfError(H3.cellToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson, formatAsGeoJson);\n    } finally{\n        libh3._free(cellBoundary);\n    }\n} // ----------------------------------------------------------------------------\n// Public API functions: Algorithms\n/**\n * Get the parent of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get parent for\n * @param  {number} res       Resolution of hexagon to return\n * @return {H3Index}          H3 index of parent, or null for invalid input\n * @throws {H3Error}          If input is invalid\n */ function cellToParent(h3Index, res) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var parent = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToParent(lower, upper, res, parent));\n        return validateH3Index(readH3IndexFromPointer(parent));\n    } finally{\n        libh3._free(parent);\n    }\n}\n/**\n * Get the children/descendents of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get children for\n * @param  {number} res       Resolution of hexagons to return\n * @return {H3Index[]}        H3 indexes of children, or empty array for invalid input\n * @throws {H3Error}          If resolution is invalid or output is too large for JS\n */ function cellToChildren(h3Index, res) {\n    // Bad input in this case can potentially result in high computation volume\n    // using the current C algorithm. Validate and return an empty array on failure.\n    if (!isValidCell(h3Index)) {\n        return [];\n    }\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var count = validateArrayLength(cellToChildrenSize(h3Index, res));\n    var hexagons = libh3._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToChildren(lower, upper, res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally{\n        libh3._free(hexagons);\n    }\n}\n/**\n * Get the number of children for a cell at a given resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child count for\n * @param  {number} res            Child resolution\n * @return {number}                Number of children at res for the given cell\n * @throws {H3Error}               If cell or parentRes are invalid\n */ function cellToChildrenSize(h3Index, res) {\n    if (!isValidCell(h3Index)) {\n        throw H3LibraryError(E_CELL_INVALID);\n    }\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildrenSize(lower, upper, res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Get the center child of the given hexagon at a particular resolution\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get center child for\n * @param  {number} res       Resolution of cell to return\n * @return {H3Index}          H3 index of child, or null for invalid input\n * @throws {H3Error}          If resolution is invalid\n */ function cellToCenterChild(h3Index, res) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var centerChild = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToCenterChild(lower, upper, res, centerChild));\n        return validateH3Index(readH3IndexFromPointer(centerChild));\n    } finally{\n        libh3._free(centerChild);\n    }\n}\n/**\n * Get the position of the cell within an ordered list of all children of the\n * cell's parent at the specified resolution.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index to get child pos for\n * @param  {number} parentRes      Resolution of reference parent\n * @return {number}                Position of child within parent at parentRes\n * @throws {H3Error}               If cell or parentRes are invalid\n */ function cellToChildPos(h3Index, parentRes) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var childPos = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.cellToChildPos(lower, upper, parentRes, childPos));\n        return readInt64AsDoubleFromPointer(childPos);\n    } finally{\n        libh3._free(childPos);\n    }\n}\n/**\n * Get the child cell at a given position within an ordered list of all children\n * at the specified resolution\n * @static\n * @param  {number} childPos       Position of the child cell to get\n * @param  {H3IndexInput} h3Index  H3 index of the parent cell\n * @param  {number} childRes       Resolution of child cell to return\n * @return {H3Index}          H3 index of child\n * @throws {H3Error}          If input is invalid\n */ function childPosToCell(childPos, h3Index, childRes) {\n    var ref = numberToSplitLong(childPos);\n    var cpLower = ref[0];\n    var cpUpper = ref[1];\n    var ref$1 = h3IndexToSplitLong(h3Index);\n    var lower = ref$1[0];\n    var upper = ref$1[1];\n    var child = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.childPosToCell(cpLower, cpUpper, lower, upper, childRes, child));\n        return validateH3Index(readH3IndexFromPointer(child));\n    } finally{\n        libh3._free(child);\n    }\n}\n/**\n * Get all hexagons in a k-ring around a given center. The order of the hexagons is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */ function gridDisk(h3Index, ringSize) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        var hexagons = libh3._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.gridDisk(lower, upper, ringSize, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally{\n            libh3._free(hexagons);\n        }\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Get all hexagons in a k-ring around a given center, in an array of arrays\n * ordered by distance from the origin. The order of the hexagons within each ring is undefined.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of k-ring\n * @return {H3Index[][]}      Array of arrays with H3 indexes for all hexagons each ring\n * @throws {H3Error}          If input is invalid or output is too large for JS\n */ function gridDiskDistances(h3Index, ringSize) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxGridDiskSize(ringSize, countPtr));\n        var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        var kRings = libh3._calloc(count, SZ_H3INDEX);\n        var distances = libh3._calloc(count, SZ_INT);\n        try {\n            throwIfError(H3.gridDiskDistances(lower, upper, ringSize, kRings, distances));\n            /**\n       * An array of empty arrays to hold the output\n       * @type {string[][]}\n       * @private\n       */ var out = [];\n            for(var i = 0; i < ringSize + 1; i++){\n                out.push([]);\n            } // Read the array of hexagons, putting them into the appropriate rings\n            for(var i$1 = 0; i$1 < count; i$1++){\n                var cell = readH3IndexFromPointer(kRings, i$1);\n                var index = libh3.getValue(distances + SZ_INT * i$1, \"i32\"); // eslint-disable-next-line max-depth\n                if (cell !== null) {\n                    out[index].push(cell);\n                }\n            }\n            return out;\n        } finally{\n            libh3._free(kRings);\n            libh3._free(distances);\n        }\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Get all hexagons in a hollow hexagonal ring centered at origin with sides of a given length.\n * Unlike kRing, this function will throw an error if there is a pentagon anywhere in the ring.\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of center hexagon\n * @param  {number} ringSize  Radius of ring\n * @return {H3Index[]}        H3 indexes for all hexagons in ring\n * @throws {Error}            If the algorithm could not calculate the ring\n * @throws {H3Error}          If input is invalid\n */ function gridRingUnsafe(h3Index, ringSize) {\n    var maxCount = ringSize === 0 ? 1 : 6 * ringSize;\n    var hexagons = libh3._calloc(maxCount, SZ_H3INDEX);\n    try {\n        throwIfError(H3.gridRingUnsafe.apply(H3, h3IndexToSplitLong(h3Index).concat([\n            ringSize\n        ], [\n            hexagons\n        ])));\n        return readArrayOfH3Indexes(hexagons, maxCount);\n    } finally{\n        libh3._free(hexagons);\n    }\n}\n/**\n * Get all hexagons with centers contained in a given polygon. The polygon\n * is specified with GeoJson semantics as an array of loops. Each loop is\n * an array of [lat, lng] pairs (or [lng, lat] if isGeoJson is specified).\n * The first loop is the perimeter of the polygon, and subsequent loops are\n * expected to be holes.\n * @static\n * @param  {number[][] | number[][][]} coordinates\n *                                  Array of loops, or a single loop\n * @param  {number} res             Resolution of hexagons to return\n * @param  {boolean} [isGeoJson]    Whether to expect GeoJson-style [lng, lat]\n *                                  pairs instead of [lat, lng]\n * @return {H3Index[]}              H3 indexes for all hexagons in polygon\n * @throws {H3Error}                If input is invalid or output is too large for JS\n */ function polygonToCells(coordinates, res, isGeoJson) {\n    validateRes(res);\n    isGeoJson = Boolean(isGeoJson); // Guard against empty input\n    if (coordinates.length === 0 || coordinates[0].length === 0) {\n        return [];\n    } // Wrap to expected format if a single loop is provided\n    var polygon = typeof coordinates[0][0] === \"number\" ? [\n        coordinates\n    ] : coordinates;\n    var geoPolygon = coordinatesToGeoPolygon(polygon, isGeoJson);\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.maxPolygonToCellsSize(geoPolygon, res, 0, countPtr));\n        var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        var hexagons = libh3._calloc(count, SZ_H3INDEX);\n        try {\n            throwIfError(H3.polygonToCells(geoPolygon, res, 0, hexagons));\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally{\n            libh3._free(hexagons);\n        }\n    } finally{\n        libh3._free(countPtr);\n        destroyGeoPolygon(geoPolygon);\n    }\n}\n/**\n * Get the outlines of a set of H3 hexagons, returned in GeoJSON MultiPolygon\n * format (an array of polygons, each with an array of loops, each an array of\n * coordinates). Coordinates are returned as [lat, lng] pairs unless GeoJSON\n * is requested.\n *\n * It is the responsibility of the caller to ensure that all hexagons in the\n * set have the same resolution and that the set contains no duplicates. Behavior\n * is undefined if duplicates or multiple resolutions are present, and the\n * algorithm may produce unexpected or invalid polygons.\n *\n * @static\n * @param {H3IndexInput[]} h3Indexes  H3 indexes to get outlines for\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat], closed loops\n * @return {CoordPair[][][]}          MultiPolygon-style output.\n * @throws {H3Error}                  If input is invalid\n */ function cellsToMultiPolygon(h3Indexes, formatAsGeoJson) {\n    // Early exit on empty input\n    if (!h3Indexes || !h3Indexes.length) {\n        return [];\n    } // Set up input set\n    var indexCount = h3Indexes.length;\n    var set = libh3._calloc(indexCount, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Indexes); // Allocate memory for output linked polygon\n    var polygon = libh3._calloc(SZ_LINKED_GEOPOLYGON);\n    try {\n        throwIfError(H3.cellsToLinkedMultiPolygon(set, indexCount, polygon));\n        return readMultiPolygon(polygon, formatAsGeoJson);\n    } finally{\n        // Clean up\n        H3.destroyLinkedMultiPolygon(polygon);\n        libh3._free(polygon);\n        libh3._free(set);\n    }\n}\n/**\n * Compact a set of hexagons of the same resolution into a set of hexagons across\n * multiple levels that represents the same area.\n * @static\n * @param  {H3IndexInput[]} h3Set H3 indexes to compact\n * @return {H3Index[]}       Compacted H3 indexes\n * @throws {H3Error}         If the input is invalid (e.g. duplicate hexagons)\n */ function compactCells(h3Set) {\n    if (!h3Set || !h3Set.length) {\n        return [];\n    } // Set up input set\n    var count = h3Set.length;\n    var set = libh3._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, h3Set); // Allocate memory for compacted hexagons, worst-case is no compaction\n    var compactedSet = libh3._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.compactCells(set, compactedSet, count, UNUSED_UPPER_32_BITS));\n        return readArrayOfH3Indexes(compactedSet, count);\n    } finally{\n        libh3._free(set);\n        libh3._free(compactedSet);\n    }\n}\n/**\n * Uncompact a compacted set of hexagons to hexagons of the same resolution\n * @static\n * @param  {H3IndexInput[]} compactedSet H3 indexes to uncompact\n * @param  {number}    res          The resolution to uncompact to\n * @return {H3Index[]}              The uncompacted H3 indexes\n * @throws {H3Error}                If the input is invalid (e.g. invalid resolution)\n */ function uncompactCells(compactedSet, res) {\n    validateRes(res);\n    if (!compactedSet || !compactedSet.length) {\n        return [];\n    } // Set up input set\n    var count = compactedSet.length;\n    var set = libh3._calloc(count, SZ_H3INDEX);\n    storeArrayOfH3Indexes(set, compactedSet); // Estimate how many hexagons we need (always overestimates if in error)\n    var uncompactCellSizePtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.uncompactCellsSize(set, count, UNUSED_UPPER_32_BITS, res, uncompactCellSizePtr));\n        var uncompactCellSize = validateArrayLength(readInt64AsDoubleFromPointer(uncompactCellSizePtr)); // Allocate memory for uncompacted hexagons\n        var uncompactedSet = libh3._calloc(uncompactCellSize, SZ_H3INDEX);\n        try {\n            throwIfError(H3.uncompactCells(set, count, UNUSED_UPPER_32_BITS, uncompactedSet, uncompactCellSize, UNUSED_UPPER_32_BITS, res));\n            return readArrayOfH3Indexes(uncompactedSet, uncompactCellSize);\n        } finally{\n            libh3._free(set);\n            libh3._free(uncompactedSet);\n        }\n    } finally{\n        libh3._free(uncompactCellSizePtr);\n    }\n} // ----------------------------------------------------------------------------\n// Public API functions: Directed edges\n/**\n * Whether two H3 indexes are neighbors (share an edge)\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {boolean}             Whether the hexagons share an edge\n * @throws {H3Error}             If the input is invalid\n */ function areNeighborCells(origin, destination) {\n    var ref = h3IndexToSplitLong(origin);\n    var oLower = ref[0];\n    var oUpper = ref[1];\n    var ref$1 = h3IndexToSplitLong(destination);\n    var dLower = ref$1[0];\n    var dUpper = ref$1[1];\n    var out = libh3._malloc(SZ_INT);\n    try {\n        throwIfError(H3.areNeighborCells(oLower, oUpper, dLower, dUpper, out));\n        return readBooleanFromPointer(out);\n    } finally{\n        libh3._free(out);\n    }\n}\n/**\n * Get an H3 index representing a unidirectional edge for a given origin and destination\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index}             H3 index of the edge, or null if no edge is shared\n * @throws {H3Error}             If the input is invalid\n */ function cellsToDirectedEdge(origin, destination) {\n    var ref = h3IndexToSplitLong(origin);\n    var oLower = ref[0];\n    var oUpper = ref[1];\n    var ref$1 = h3IndexToSplitLong(destination);\n    var dLower = ref$1[0];\n    var dUpper = ref$1[1];\n    var h3Index = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellsToDirectedEdge(oLower, oUpper, dLower, dUpper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally{\n        libh3._free(h3Index);\n    }\n}\n/**\n * Get the origin hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge origin\n * @throws {H3Error}           If the input is invalid\n */ function getDirectedEdgeOrigin(edgeIndex) {\n    var ref = h3IndexToSplitLong(edgeIndex);\n    var lower = ref[0];\n    var upper = ref[1];\n    var h3Index = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeOrigin(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally{\n        libh3._free(h3Index);\n    }\n}\n/**\n * Get the destination hexagon from an H3 index representing a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index}           H3 index of the edge destination\n * @throws {H3Error}           If the input is invalid\n */ function getDirectedEdgeDestination(edgeIndex) {\n    var ref = h3IndexToSplitLong(edgeIndex);\n    var lower = ref[0];\n    var upper = ref[1];\n    var h3Index = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.getDirectedEdgeDestination(lower, upper, h3Index));\n        return validateH3Index(readH3IndexFromPointer(h3Index));\n    } finally{\n        libh3._free(h3Index);\n    }\n}\n/**\n * Whether the input is a valid unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {boolean}           Whether the index is valid\n */ function isValidDirectedEdge(edgeIndex) {\n    var ref = h3IndexToSplitLong(edgeIndex);\n    var lower = ref[0];\n    var upper = ref[1];\n    return Boolean(H3.isValidDirectedEdge(lower, upper));\n}\n/**\n * Get the [origin, destination] pair represented by a unidirectional edge\n * @static\n * @param  {H3IndexInput} edgeIndex H3 index of the edge\n * @return {H3Index[]}         [origin, destination] pair as H3 indexes\n * @throws {H3Error}           If the input is invalid\n */ function directedEdgeToCells(edgeIndex) {\n    var ref = h3IndexToSplitLong(edgeIndex);\n    var lower = ref[0];\n    var upper = ref[1];\n    var count = 2;\n    var hexagons = libh3._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.directedEdgeToCells(lower, upper, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally{\n        libh3._free(hexagons);\n    }\n}\n/**\n * Get all of the unidirectional edges with the given H3 index as the origin (i.e. an edge to\n * every neighbor)\n * @static\n * @param  {H3IndexInput} h3Index   H3 index of the origin hexagon\n * @return {H3Index[]}         List of unidirectional edges\n * @throws {H3Error}           If the input is invalid\n */ function originToDirectedEdges(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var count = 6;\n    var edges = libh3._calloc(count, SZ_H3INDEX);\n    try {\n        throwIfError(H3.originToDirectedEdges(lower, upper, edges));\n        return readArrayOfH3Indexes(edges, count);\n    } finally{\n        libh3._free(edges);\n    }\n}\n/**\n * Get the vertices of a given edge as an array of [lat, lng] points. Note that for edges that\n * cross the edge of an icosahedron face, this may return 3 coordinates.\n * @static\n * @param  {H3IndexInput} edgeIndex        H3 index of the edge\n * @param {boolean} [formatAsGeoJson] Whether to provide GeoJSON output: [lng, lat]\n * @return {CoordPair[]}              Array of geo coordinate pairs\n * @throws {H3Error}                  If the input is invalid\n */ function directedEdgeToBoundary(edgeIndex, formatAsGeoJson) {\n    var cellBoundary = libh3._malloc(SZ_CELLBOUNDARY);\n    var ref = h3IndexToSplitLong(edgeIndex);\n    var lower = ref[0];\n    var upper = ref[1];\n    try {\n        throwIfError(H3.directedEdgeToBoundary(lower, upper, cellBoundary));\n        return readCellBoundary(cellBoundary, formatAsGeoJson);\n    } finally{\n        libh3._free(cellBoundary);\n    }\n}\n/**\n * Get the grid distance between two hex indexes. This function may fail\n * to find the distance between two indexes if they are very far apart or\n * on opposite sides of a pentagon.\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {number}          Distance between hexagons\n * @throws {H3Error}         If input is invalid or the distance could not be calculated\n */ function gridDistance(origin, destination) {\n    var ref = h3IndexToSplitLong(origin);\n    var oLower = ref[0];\n    var oUpper = ref[1];\n    var ref$1 = h3IndexToSplitLong(destination);\n    var dLower = ref$1[0];\n    var dUpper = ref$1[1];\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridDistance(oLower, oUpper, dLower, dUpper, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Given two H3 indexes, return the line of indexes between them (inclusive).\n *\n * This function may fail to find the line between two indexes, for\n * example if they are very far apart. It may also fail when finding\n * distances for indexes on opposite sides of a pentagon.\n *\n * Notes:\n *\n *  - The specific output of this function should not be considered stable\n *    across library versions. The only guarantees the library provides are\n *    that the line length will be `h3Distance(start, end) + 1` and that\n *    every index in the line will be a neighbor of the preceding index.\n *  - Lines are drawn in grid space, and may not correspond exactly to either\n *    Cartesian lines or great arcs.\n *\n * @static\n * @param  {H3IndexInput} origin      Origin hexagon index\n * @param  {H3IndexInput} destination Destination hexagon index\n * @return {H3Index[]}           H3 indexes connecting origin and destination\n * @throws {H3Error}             If input is invalid or the line cannot be calculated\n */ function gridPathCells(origin, destination) {\n    var ref = h3IndexToSplitLong(origin);\n    var oLower = ref[0];\n    var oUpper = ref[1];\n    var ref$1 = h3IndexToSplitLong(destination);\n    var dLower = ref$1[0];\n    var dUpper = ref$1[1];\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        throwIfError(H3.gridPathCellsSize(oLower, oUpper, dLower, dUpper, countPtr));\n        var count = validateArrayLength(readInt64AsDoubleFromPointer(countPtr));\n        var hexagons = libh3._calloc(count, SZ_H3INDEX);\n        try {\n            H3.gridPathCells(oLower, oUpper, dLower, dUpper, hexagons);\n            return readArrayOfH3Indexes(hexagons, count);\n        } finally{\n            libh3._free(hexagons);\n        }\n    } finally{\n        libh3._free(countPtr);\n    }\n}\nvar LOCAL_IJ_DEFAULT_MODE = 0;\n/**\n * Produces IJ coordinates for an H3 index anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin      Origin H3 index\n * @param  {H3IndexInput} destination H3 index for which to find relative coordinates\n * @return {CoordIJ}             Coordinates as an `{i, j}` pair\n * @throws {H3Error}             If the IJ coordinates cannot be calculated\n */ function cellToLocalIj(origin, destination) {\n    var ij = libh3._malloc(SZ_COORDIJ);\n    try {\n        throwIfError(H3.cellToLocalIj.apply(H3, h3IndexToSplitLong(origin).concat(h3IndexToSplitLong(destination), [\n            LOCAL_IJ_DEFAULT_MODE\n        ], [\n            ij\n        ])));\n        return readCoordIJ(ij);\n    } finally{\n        libh3._free(ij);\n    }\n}\n/**\n * Produces an H3 index for IJ coordinates anchored by an origin.\n *\n * - The coordinate space used by this function may have deleted\n * regions or warping due to pentagonal distortion.\n * - Coordinates are only comparable if they come from the same\n * origin index.\n * - Failure may occur if the index is too far away from the origin\n * or if the index is on the other side of a pentagon.\n * - This function is experimental, and its output is not guaranteed\n * to be compatible across different versions of H3.\n * @static\n * @param  {H3IndexInput} origin     Origin H3 index\n * @param  {CoordIJ} coords     Coordinates as an `{i, j}` pair\n * @return {H3Index}            H3 index at the relative coordinates\n * @throws {H3Error}            If the H3 index cannot be calculated\n */ function localIjToCell(origin, coords) {\n    // Validate input coords\n    if (!coords || typeof coords.i !== \"number\" || typeof coords.j !== \"number\") {\n        throw new Error(\"Coordinates must be provided as an {i, j} object\");\n    } // Allocate memory for the CoordIJ struct and an H3 index to hold the return value\n    var ij = libh3._malloc(SZ_COORDIJ);\n    var out = libh3._malloc(SZ_H3INDEX);\n    storeCoordIJ(ij, coords);\n    try {\n        throwIfError(H3.localIjToCell.apply(H3, h3IndexToSplitLong(origin).concat([\n            ij\n        ], [\n            LOCAL_IJ_DEFAULT_MODE\n        ], [\n            out\n        ])));\n        return validateH3Index(readH3IndexFromPointer(out));\n    } finally{\n        libh3._free(ij);\n        libh3._free(out);\n    }\n} // ----------------------------------------------------------------------------\n// Public API functions: Distance/area utilities\n/**\n * Great circle distance between two geo points. This is not specific to H3,\n * but is implemented in the library and provided here as a convenience.\n * @static\n * @param  {number[]} latLng1 Origin coordinate as [lat, lng]\n * @param  {number[]} latLng2 Destination coordinate as [lat, lng]\n * @param  {string}   unit    Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Great circle distance\n * @throws {H3Error}          If the unit is invalid\n */ function greatCircleDistance(latLng1, latLng2, unit) {\n    var coord1 = storeLatLng(latLng1[0], latLng1[1]);\n    var coord2 = storeLatLng(latLng2[0], latLng2[1]);\n    var result;\n    switch(unit){\n        case UNITS.m:\n            result = H3.greatCircleDistanceM(coord1, coord2);\n            break;\n        case UNITS.km:\n            result = H3.greatCircleDistanceKm(coord1, coord2);\n            break;\n        case UNITS.rads:\n            result = H3.greatCircleDistanceRads(coord1, coord2);\n            break;\n        default:\n            result = null;\n    }\n    libh3._free(coord1);\n    libh3._free(coord2);\n    if (result === null) {\n        throw JSBindingError(E_UNKNOWN_UNIT, unit);\n    }\n    return result;\n}\n/**\n * Exact area of a given cell\n * @static\n * @param  {H3IndexInput} h3Index  H3 index of the hexagon to measure\n * @param  {string}  unit     Distance unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */ function cellArea(h3Index, unit) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var out = libh3._malloc(SZ_DBL);\n    try {\n        switch(unit){\n            case UNITS.m2:\n                throwIfError(H3.cellAreaM2(lower, upper, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.cellAreaKm2(lower, upper, out));\n                break;\n            case UNITS.rads2:\n                throwIfError(H3.cellAreaRads2(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally{\n        libh3._free(out);\n    }\n}\n/**\n * Calculate length of a given unidirectional edge\n * @static\n * @param  {H3IndexInput} edge     H3 index of the edge to measure\n * @param  {string}  unit     Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}           Cell area\n * @throws {H3Error}          If the input is invalid\n */ function edgeLength(edge, unit) {\n    var ref = h3IndexToSplitLong(edge);\n    var lower = ref[0];\n    var upper = ref[1];\n    var out = libh3._malloc(SZ_DBL);\n    try {\n        switch(unit){\n            case UNITS.m:\n                throwIfError(H3.edgeLengthM(lower, upper, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.edgeLengthKm(lower, upper, out));\n                break;\n            case UNITS.rads:\n                throwIfError(H3.edgeLengthRads(lower, upper, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally{\n        libh3._free(out);\n    }\n}\n/**\n * Average hexagon area at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Area unit (either UNITS.m2, UNITS.km2, or UNITS.rads2)\n * @return {number}      Average area\n * @throws {H3Error}     If the input is invalid\n */ function getHexagonAreaAvg(res, unit) {\n    validateRes(res);\n    var out = libh3._malloc(SZ_DBL);\n    try {\n        switch(unit){\n            case UNITS.m2:\n                throwIfError(H3.getHexagonAreaAvgM2(res, out));\n                break;\n            case UNITS.km2:\n                throwIfError(H3.getHexagonAreaAvgKm2(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally{\n        libh3._free(out);\n    }\n}\n/**\n * Average hexagon edge length at a given resolution\n * @static\n * @param  {number} res  Hexagon resolution\n * @param  {string} unit Distance unit (either UNITS.m, UNITS.km, or UNITS.rads)\n * @return {number}      Average edge length\n * @throws {H3Error}     If the input is invalid\n */ function getHexagonEdgeLengthAvg(res, unit) {\n    validateRes(res);\n    var out = libh3._malloc(SZ_DBL);\n    try {\n        switch(unit){\n            case UNITS.m:\n                throwIfError(H3.getHexagonEdgeLengthAvgM(res, out));\n                break;\n            case UNITS.km:\n                throwIfError(H3.getHexagonEdgeLengthAvgKm(res, out));\n                break;\n            default:\n                throw JSBindingError(E_UNKNOWN_UNIT, unit);\n        }\n        return readDoubleFromPointer(out);\n    } finally{\n        libh3._free(out);\n    }\n} // ----------------------------------------------------------------------------\n// Public API functions: Vertex mode\n/**\n * Find the index for a vertex of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find the vertex for\n * @param {number} vertexNum         Number (index) of the vertex to calculate\n * @return {H3Index}     Vertex index\n * @throws {H3Error}     If the input is invalid\n */ function cellToVertex(h3Index, vertexNum) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var vertexIndex = libh3._malloc(SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertex(lower, upper, vertexNum, vertexIndex));\n        return validateH3Index(readH3IndexFromPointer(vertexIndex));\n    } finally{\n        libh3._free(vertexIndex);\n    }\n}\n/**\n * Find the indexes for all vertexes of a cell.\n * @static\n * @param {H3IndexInput} h3Index     Cell to find all vertexes for\n * @return {H3Index[]}   All vertex indexes of this cell\n * @throws {H3Error}     If the input is invalid\n */ function cellToVertexes(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    var maxNumVertexes = 6;\n    var vertexIndexes = libh3._calloc(maxNumVertexes, SZ_H3INDEX);\n    try {\n        throwIfError(H3.cellToVertexes(lower, upper, vertexIndexes));\n        return readArrayOfH3Indexes(vertexIndexes, maxNumVertexes);\n    } finally{\n        libh3._free(vertexIndexes);\n    }\n}\n/**\n * Get the lat, lng of a given vertex\n * @static\n * @param {H3IndexInput} h3Index A vertex index\n * @returns {CoordPair}          Latitude, longitude coordinates of the vertex\n * @throws {H3Error}             If the input is invalid\n */ function vertexToLatLng(h3Index) {\n    var latlng = libh3._malloc(SZ_LATLNG);\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    try {\n        throwIfError(H3.vertexToLatLng(lower, upper, latlng));\n        return readLatLng(latlng);\n    } finally{\n        libh3._free(latlng);\n    }\n}\n/**\n * Returns true if the input is a valid vertex index.\n * @static\n * @param {H3IndexInput} h3Index An index to test for being a vertex index\n * @returns {boolean} True if the index represents a vertex\n */ function isValidVertex(h3Index) {\n    var ref = h3IndexToSplitLong(h3Index);\n    var lower = ref[0];\n    var upper = ref[1];\n    return Boolean(H3.isValidVertex(lower, upper));\n} // ----------------------------------------------------------------------------\n// Public informational utilities\n/**\n * The total count of hexagons in the world at a given resolution. Note that above\n * resolution 8 the exact count cannot be represented in a JavaScript 32-bit number,\n * so consumers should use caution when applying further operations to the output.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {number}      Count\n * @throws {H3Error}     If the resolution is invalid\n */ function getNumCells(res) {\n    validateRes(res);\n    var countPtr = libh3._malloc(SZ_INT64);\n    try {\n        // Get number as a long value\n        throwIfError(H3.getNumCells(res, countPtr));\n        return readInt64AsDoubleFromPointer(countPtr);\n    } finally{\n        libh3._free(countPtr);\n    }\n}\n/**\n * Get all H3 indexes at resolution 0. As every index at every resolution > 0 is\n * the descendant of a res 0 index, this can be used with h3ToChildren to iterate\n * over H3 indexes at any resolution.\n * @static\n * @return {H3Index[]}  All H3 indexes at res 0\n */ function getRes0Cells() {\n    var count = H3.res0CellCount();\n    var hexagons = libh3._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getRes0Cells(hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally{\n        libh3._free(hexagons);\n    }\n}\n/**\n * Get the twelve pentagon indexes at a given resolution.\n * @static\n * @param  {number} res  Hexagon resolution\n * @return {H3Index[]}   All H3 pentagon indexes at res\n * @throws {H3Error}     If the resolution is invalid\n */ function getPentagons(res) {\n    validateRes(res);\n    var count = H3.pentagonCount();\n    var hexagons = libh3._malloc(SZ_H3INDEX * count);\n    try {\n        throwIfError(H3.getPentagons(res, hexagons));\n        return readArrayOfH3Indexes(hexagons, count);\n    } finally{\n        libh3._free(hexagons);\n    }\n}\n/**\n * Convert degrees to radians\n * @static\n * @param  {number} deg Value in degrees\n * @return {number}     Value in radians\n */ function degsToRads(deg) {\n    return deg * Math.PI / 180;\n}\n/**\n * Convert radians to degrees\n * @static\n * @param  {number} rad Value in radians\n * @return {number}     Value in degrees\n */ function radsToDegs(rad) {\n    return rad * 180 / Math.PI;\n}\n //# sourceMappingURL=h3-js.es.js.map\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/h3-js/dist/h3-js.es.js\n");

/***/ })

};
;